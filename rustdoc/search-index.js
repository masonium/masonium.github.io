var searchIndex = {};
searchIndex["masonium_rust_doc"] = {"doc":"","items":[],"paths":[]};
searchIndex["linxal"] = {"doc":"# Description","items":[[0,"util","linxal","",null,null],[0,"internal","linxal::util","",null,null],[5,"matrix_with_layout","linxal::util::internal","Return an array with the specified dimensions and layout.",null,{"inputs":[{"name":"ix2"},{"name":"layout"}],"output":{"name":"array"}}],[5,"slice_and_layout_mut","","Return the slice, layout, and leading dimension of the matrix.",null,{"inputs":[{"name":"arraybase"}],"output":{"name":"option"}}],[5,"slice_and_layout_matching_mut","","Return the slice, layout, and leading dimension of the matrix. If\nthe matrix can be interpreted with multiple inputs, assume the\nprevious one.",null,{"inputs":[{"name":"arraybase"},{"name":"layout"}],"output":{"name":"option"}}],[0,"eigenvalues","linxal","Contains methods for solving eigenvalues, including general and\nsymmetric/Hermitian eigenvalue problems.",null,null],[0,"general","linxal::eigenvalues","Compute eigenvalues and eigenvectors of general, non-symmetric matrices.",null,null],[8,"Eigen","linxal::eigenvalues::general","",null,null],[16,"Eigv","","",0,null],[16,"Solution","","",0,null],[10,"compute_into","","Return the eigenvalues and, optionally, the left and/or right\neigenvectors of a general matrix.",0,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute","","Return the eigenvvalues and, optionally, the eigenvectors of a general matrix.",0,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[0,"symmetric","linxal::eigenvalues","Compute eigenvalues and eigenvectors of symmetric matrices.",null,null],[8,"SymEigen","linxal::eigenvalues::symmetric","",null,null],[16,"SingularValue","","",1,null],[16,"Solution","","",1,null],[10,"compute_mut","","Return the real eigenvalues of a symmetric matrix.",1,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_into","","Return the real eigenvalues of a symmetric matrix.",1,{"inputs":[{"name":"arraybase"},{"name":"symmetric"}],"output":{"name":"result"}}],[10,"compute","","Return the eigenvalues and, optionally, the eigenvectors of a\nsymmetric matrix.",1,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[0,"types","linxal::eigenvalues","",null,null],[3,"Solution","linxal::eigenvalues::types","Solution to an eigenvalue problem..",null,null],[12,"values","","",2,null],[12,"left_vectors","","",2,null],[12,"right_vectors","","",2,null],[4,"EigenError","","Errors from an eigenvalue problem.",null,null],[13,"NotSquare","","",3,null],[13,"BadLayout","","",3,null],[13,"BadParameter","","",3,null],[13,"Failed","","",3,null],[11,"fmt","","",3,null],[0,"svd","linxal","Solve singular value decomposition problems.",null,null],[0,"general","linxal::svd","Solve singular value decomposition (SVD) of arbitrary matrices.",null,null],[8,"SVD","linxal::svd::general","Trait for scalars that can implement SVD.",null,null],[10,"compute_into","","Compute the singular value decomposition of a matrix.",4,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute","","Comptue the singular value decomposition of a matrix.",4,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[0,"types","linxal::svd","",null,null],[3,"SVDSolution","linxal::svd::types","A solution to the singular value decomposition.",null,null],[12,"values","","Singular values of the matrix.",5,null],[12,"left_vectors","","The matrix `U` of left singular vectors.",5,null],[12,"right_vectors","","The matrix V^t of singular vectors.",5,null],[4,"SVDError","","An error resulting from a `SVD::compute*` method.",null,null],[13,"Unconverged","","",6,null],[13,"IllegalParameter","","",6,null],[13,"BadLayout","","",6,null],[8,"SingularValue","","Trait for singular values",null,null],[11,"fmt","","",6,null],[0,"solve_linear","linxal","Containts traits and methods to solve sets of linear equations.",null,null],[0,"types","linxal::solve_linear","",null,null],[4,"SolveError","linxal::solve_linear::types","Error enum returns by various `SolveLinear`-esque compute methods.",null,null],[13,"BadLayout","","The layout of one of the matrices is not c- or\nfortran-contiguous.",7,null],[13,"InconsistentLayout","","The layouts of `a` and `b` are different. (i.e. one is\ncolumn-major and the other is row-major.)",7,null],[13,"IllegalValue","","An illegal value was passed into the underlying LAPACK. Users\nshould never see this error.",7,null],[13,"Singular","","The matrix `a`, thus a solution `b` cannot necessarily be\nfound.",7,null],[13,"NotSquare","","The input `a` matrix is not square.",7,null],[13,"InconsistentDimensions","","The dimensions of `a` and `b` do not match.",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[0,"general","linxal::solve_linear","",null,null],[8,"SolveLinear","linxal::solve_linear::general","Implements `compute_*` methods to solve systems of linear equations.",null,null],[10,"compute_multi_into","","Solve the linear system A * x = B for square matrix `a` and rectangular matrix `b`.",8,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_into","","Solve the linear system A * x = b for square matrix `a` and column vector `b`.",8,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi","","Solve the linear system A * x = B for square matrix `a` and rectangular matrix `b`.",8,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute","","Solve the linear system A * x = b for square matrix `a` and column vector `b`.",8,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[0,"symmetric","linxal::solve_linear","",null,null],[8,"SymmetricSolveLinear","linxal::solve_linear::symmetric","Implements `compute_*` methods to solve systems of linear\nequations A*X = B, where A is symmetric (for real-valued matrices)\nor hermitian (for complex-valued matrices.",null,null],[10,"compute_multi_into","","Solve the linear system A * x = B for symmetric/hermitian\nsquare matrix `a` and rectangular matrix `b`.",9,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_into","","Solve the linear system A * x = b for symmetric/hermitian\nsquare matrix `a` and column vector `b`.",9,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi","","Solve the linear system A * x = B for symmetric/hermitian\nsquare matrix `a` and rectangular matrix `b`.",9,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute","","Solve the linear system A * x = b for symmetric/hermitian\nsquare matrix `a` and column vector `b`.",9,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[0,"least_squares","linxal","This module contains the `LeastSquares` trait, which acts as an\nentry point, which is used to compute least squares solutions.",null,null],[3,"LeastSquaresSolution","linxal::least_squares","",null,null],[12,"solution","","",10,null],[12,"rank","","",10,null],[4,"LeastSquaresError","","",null,null],[13,"BadLayout","","One of the matrices has an invalid layout.",11,null],[13,"InconsistentLayout","","Matrix `a` and `b` have inconsistent layouts (i.e. row\nvs. column-major)",11,null],[13,"InconsistentDimensions","","`a` and `b` have different numbers of rows.",11,null],[13,"Degenerate","","`a` is not full rank",11,null],[13,"IllegalParameter","","Should never happend.",11,null],[8,"LeastSquares","","Multivariable least squares problem.",null,null],[10,"compute_multi_full_into","","Returns the solution `x` to the least squares problem\nmin(||A*x - b||), for a non-degenerate `A`.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_full","","Similar to `compute_multi_full_into`, but doesn&#39;t modify the inputs.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_degenerate","","Returns the solution `x` to the least squares problem min(||A*x - b||), for any `A`.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[10,"compute_multi_degenerate_into","","Similar to `compute_multi_degenerate_into`, but doesn&#39;t modify the inputs.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi","","Returns the solution `x` to the least squares problem min(||A*x - b||) for any `A`.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute","","Returns the solution `x` to the least squares problem\nmin(||A*x - b||) for any `A` and a single column `b`.",12,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"fmt","","",11,null],[0,"types","linxal","Globally-used traits, structs, and enums",null,null],[6,"c32","linxal::types","",null,null],[6,"c64","","",null,null],[4,"Symmetric","","Enum for symmetric matrix inputs.",null,null],[13,"Upper","","Read elements from the upper-triangular portion of the matrix",13,null],[13,"Lower","","Read elements from the lower-triangular portion of the matrix",13,null],[4,"Error","","Universal `linxal` error enum",null,null],[13,"SVD","","",14,null],[13,"Eigen","","",14,null],[13,"LeastSquares","","",14,null],[13,"SolveLinear","","",14,null],[8,"Magnitude","","",null,null],[10,"mag","","",15,null],[11,"from","","",14,{"inputs":[{"name":"svderror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"eigenerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"leastsquareserror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"solveerror"}],"output":{"name":"error"}}],[11,"mag","","",16,null],[11,"mag","","",17,null],[0,"prelude","linxal","Common traits, structures, and macros for most user-end applications",null,null],[6,"c32","linxal::prelude","",null,null],[6,"c64","","",null,null],[14,"assert_eq_within_tol!","linxal","Assert that two ndarrays are logically equivalent, within\ntolerance.",null,null],[11,"compute_into","linxal::prelude","",16,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_mut","","",16,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute","","",16,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_mut","","",17,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute","","",17,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_into","","",16,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"compute_multi_into","","",16,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_into","","",16,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"symmetric"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_full_into","","",16,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_degenerate_into","","",16,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_full_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}],[11,"compute_multi_degenerate_into","","",17,{"inputs":[{"name":"arraybase"},{"name":"arraybase"}],"output":{"name":"result"}}]],"paths":[[8,"Eigen"],[8,"SymEigen"],[3,"Solution"],[4,"EigenError"],[8,"SVD"],[3,"SVDSolution"],[4,"SVDError"],[4,"SolveError"],[8,"SolveLinear"],[8,"SymmetricSolveLinear"],[3,"LeastSquaresSolution"],[4,"LeastSquaresError"],[8,"LeastSquares"],[4,"Symmetric"],[4,"Error"],[8,"Magnitude"],[6,"c32"],[6,"c64"]]};
searchIndex["drav"] = {"doc":"`drav` is a package of dimensionality reduction algorithms, with\nan emphasis on visualization.","items":[[3,"TSNE","drav","",null,null],[3,"BHTSNE","","",null,null],[12,"sigmas","","",0,null],[3,"TSNEOptions","","",null,null],[12,"perplexity","","",1,null],[12,"initial_spread","","",1,null],[12,"learning_rate","","",1,null],[12,"momentum","","",1,null],[12,"num_iterations","","",1,null],[12,"early_exaggeration","","",1,null],[3,"PCA","","",null,null],[4,"PCATarget","","",null,null],[13,"Dimension","","",2,null],[13,"ExplainedVariance","","",2,null],[5,"load_mnist_images","","Return a matrix representation of the set of images in the dataset\nfile. Each row is an image, whose elements are the pixel-wise\nintensities laid out in row-major order.",null,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[5,"load_mnist_labels","","",null,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"new","","",3,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"reduction","","Perform the visualization reduction from a set of inputs to\noutput vectors.",3,null],[11,"new","","",4,{"inputs":[{"name":"matrix"},{"name":"pcatarget"}],"output":{"name":"result"}}],[11,"transform_data","","Transform a set of data into its reduced dimensionas",4,null],[11,"transform_datum","","Transform an individual vector.",4,null],[11,"reconstruct_datum","","Reconstruct the best approximation of the original vector using\nthe transformed vector.",4,null],[11,"reconstruct_datum_partial","","Reconstruct the best approximatio of the original vector using\na subset of the elements.",4,null],[11,"eigenvectors","","Reconstruct the best approximation for a data set using\nthe transformed data set.\nReturn the matrix of eigenvectors, with each column\nrepresenting an eigenvector.",4,null],[11,"dim","","",4,null],[11,"new","","",0,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"reduction","","Perform the visualization reduction from a set of inputs to\noutput vectors.",0,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[0,"util","","",null,null],[5,"as_rows","drav::util","Return the rows of the matrix as a Vec of Vectors.",null,{"inputs":[{"name":"matrix"}],"output":{"name":"vec"}}],[5,"remove_diagonal","","Given an n✕n matrix,return an n✕(n-1) matrix formed by removing the diagonal elements",null,{"inputs":[{"name":"matrix"}],"output":{"name":"matrix"}}],[6,"Matrix","drav","",null,null],[6,"Vector","","",null,null],[8,"NonParametricModel","","",null,null],[16,"Input","","",5,null],[16,"O","","",5,null],[10,"reduction","","",5,null]],"paths":[[3,"BHTSNE"],[3,"TSNEOptions"],[4,"PCATarget"],[3,"TSNE"],[3,"PCA"],[8,"NonParametricModel"]]};
searchIndex["nalgebra"] = {"doc":"# nalgebra","items":[[3,"Identity","nalgebra","Special identity matrix. All its operation are no-ops.",null,null],[3,"DMatrix","","Matrix with dimensions unknown at compile-time.",null,null],[3,"DMatrix1","","A stack-allocated dynamically sized matrix with at most one row and column.",null,null],[3,"DMatrix2","","A stack-allocated dynamically sized square or rectangular matrix with at most 2 rows and columns.",null,null],[3,"DMatrix3","","A stack-allocated dynamically sized square or rectangular matrix with at most 3 rows and columns.",null,null],[3,"DMatrix4","","A stack-allocated dynamically sized square or rectangular matrix with at most 4 rows and columns.",null,null],[3,"DMatrix5","","A stack-allocated dynamically sized square or rectangular matrix with at most 5 rows and columns.",null,null],[3,"DMatrix6","","A stack-allocated dynamically sized square or rectangular matrix with at most 6 rows and columns.",null,null],[3,"DVector","","Heap allocated, dynamically sized vector.",null,null],[12,"at","","Components of the vector. Contains as much elements as the vector dimension.",0,null],[3,"DVector1","","Stack-allocated, dynamically sized vector with a maximum size of 1.",null,null],[3,"DVector2","","Stack-allocated, dynamically sized vector with a maximum size of 2.",null,null],[3,"DVector3","","Stack-allocated, dynamically sized vector with a maximum size of 3.",null,null],[3,"DVector4","","Stack-allocated, dynamically sized vector with a maximum size of 4.",null,null],[3,"DVector5","","Stack-allocated, dynamically sized vector with a maximum size of 5.",null,null],[3,"DVector6","","Stack-allocated, dynamically sized vector with a maximum size of 6.",null,null],[3,"Isometry2","","Two dimensional **direct** isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",1,null],[12,"translation","","The translation applicable by this isometry.",1,null],[3,"Isometry3","","Three dimensional **direct** isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",2,null],[12,"translation","","The translation applicable by this isometry.",2,null],[3,"Similarity2","","A two-dimensional similarity transformation.",null,null],[12,"isometry","","The isometry applicable by this similarity transformation.",3,null],[3,"Similarity3","","A three-dimensional similarity transformation.",null,null],[12,"isometry","","The isometry applicable by this similarity transformation.",4,null],[3,"Matrix1","","Square matrix of dimension 1.",null,null],[12,"m11","","",5,null],[3,"Matrix2","","Square matrix of dimension 2.",null,null],[12,"m11","","",6,null],[12,"m21","","",6,null],[12,"m12","","",6,null],[12,"m22","","",6,null],[3,"Matrix3","","Square matrix of dimension 3.",null,null],[12,"m11","","",7,null],[12,"m21","","",7,null],[12,"m31","","",7,null],[12,"m12","","",7,null],[12,"m22","","",7,null],[12,"m32","","",7,null],[12,"m13","","",7,null],[12,"m23","","",7,null],[12,"m33","","",7,null],[3,"Matrix4","","Square matrix of dimension 4.",null,null],[12,"m11","","",8,null],[12,"m21","","",8,null],[12,"m31","","",8,null],[12,"m41","","",8,null],[12,"m12","","",8,null],[12,"m22","","",8,null],[12,"m32","","",8,null],[12,"m42","","",8,null],[12,"m13","","",8,null],[12,"m23","","",8,null],[12,"m33","","",8,null],[12,"m43","","",8,null],[12,"m14","","",8,null],[12,"m24","","",8,null],[12,"m34","","",8,null],[12,"m44","","",8,null],[3,"Matrix5","","Square matrix of dimension 5.",null,null],[12,"m11","","",9,null],[12,"m21","","",9,null],[12,"m31","","",9,null],[12,"m41","","",9,null],[12,"m51","","",9,null],[12,"m12","","",9,null],[12,"m22","","",9,null],[12,"m32","","",9,null],[12,"m42","","",9,null],[12,"m52","","",9,null],[12,"m13","","",9,null],[12,"m23","","",9,null],[12,"m33","","",9,null],[12,"m43","","",9,null],[12,"m53","","",9,null],[12,"m14","","",9,null],[12,"m24","","",9,null],[12,"m34","","",9,null],[12,"m44","","",9,null],[12,"m54","","",9,null],[12,"m15","","",9,null],[12,"m25","","",9,null],[12,"m35","","",9,null],[12,"m45","","",9,null],[12,"m55","","",9,null],[3,"Matrix6","","Square matrix of dimension 6.",null,null],[12,"m11","","",10,null],[12,"m21","","",10,null],[12,"m31","","",10,null],[12,"m41","","",10,null],[12,"m51","","",10,null],[12,"m61","","",10,null],[12,"m12","","",10,null],[12,"m22","","",10,null],[12,"m32","","",10,null],[12,"m42","","",10,null],[12,"m52","","",10,null],[12,"m62","","",10,null],[12,"m13","","",10,null],[12,"m23","","",10,null],[12,"m33","","",10,null],[12,"m43","","",10,null],[12,"m53","","",10,null],[12,"m63","","",10,null],[12,"m14","","",10,null],[12,"m24","","",10,null],[12,"m34","","",10,null],[12,"m44","","",10,null],[12,"m54","","",10,null],[12,"m64","","",10,null],[12,"m15","","",10,null],[12,"m25","","",10,null],[12,"m35","","",10,null],[12,"m45","","",10,null],[12,"m55","","",10,null],[12,"m65","","",10,null],[12,"m16","","",10,null],[12,"m26","","",10,null],[12,"m36","","",10,null],[12,"m46","","",10,null],[12,"m56","","",10,null],[12,"m66","","",10,null],[3,"Rotation2","","Two dimensional rotation matrix.",null,null],[3,"Rotation3","","Three dimensional rotation matrix.",null,null],[3,"Vector1","","Vector of dimension 1.",null,null],[12,"x","","First component of the vector.",11,null],[3,"Vector2","","Vector of dimension 2.",null,null],[12,"x","","First component of the vector.",12,null],[12,"y","","Second component of the vector.",12,null],[3,"Vector3","","Vector of dimension 3.",null,null],[12,"x","","First component of the vector.",13,null],[12,"y","","Second component of the vector.",13,null],[12,"z","","Third component of the vector.",13,null],[3,"Vector4","","Vector of dimension 4.",null,null],[12,"x","","First component of the vector.",14,null],[12,"y","","Second component of the vector.",14,null],[12,"z","","Third component of the vector.",14,null],[12,"w","","Fourth component of the vector.",14,null],[3,"Vector5","","Vector of dimension 5.",null,null],[12,"x","","First component of the vector.",15,null],[12,"y","","Second component of the vector.",15,null],[12,"z","","Third component of the vector.",15,null],[12,"w","","Fourth component of the vector.",15,null],[12,"a","","Fifth of the vector.",15,null],[3,"Vector6","","Vector of dimension 6.",null,null],[12,"x","","First component of the vector.",16,null],[12,"y","","Second component of the vector.",16,null],[12,"z","","Third component of the vector.",16,null],[12,"w","","Fourth component of the vector.",16,null],[12,"a","","Fifth of the vector.",16,null],[12,"b","","Sixth component of the vector.",16,null],[3,"Point1","","Point of dimension 1.",null,null],[12,"x","","First component of the point.",17,null],[3,"Point2","","Point of dimension 2.",null,null],[12,"x","","First component of the point.",18,null],[12,"y","","Second component of the point.",18,null],[3,"Point3","","Point of dimension 3.",null,null],[12,"x","","First component of the point.",19,null],[12,"y","","Second component of the point.",19,null],[12,"z","","Third component of the point.",19,null],[3,"Point4","","Point of dimension 4.",null,null],[12,"x","","First component of the point.",20,null],[12,"y","","Second component of the point.",20,null],[12,"z","","Third component of the point.",20,null],[12,"w","","Fourth component of the point.",20,null],[3,"Point5","","Point of dimension 5.",null,null],[12,"x","","First component of the point.",21,null],[12,"y","","Second component of the point.",21,null],[12,"z","","Third component of the point.",21,null],[12,"w","","Fourth component of the point.",21,null],[12,"a","","Fifth of the point.",21,null],[3,"Point6","","Point of dimension 6.",null,null],[12,"x","","First component of the point.",22,null],[12,"y","","Second component of the point.",22,null],[12,"z","","Third component of the point.",22,null],[12,"w","","Fourth component of the point.",22,null],[12,"a","","Fifth of the point.",22,null],[12,"b","","Sixth component of the point.",22,null],[3,"Perspective3","","A 3D perspective projection stored without any matrix.",null,null],[3,"PerspectiveMatrix3","","A 3D perspective projection stored as a 4D matrix.",null,null],[3,"Orthographic3","","A 3D orthographic projection stored without any matrix.",null,null],[3,"OrthographicMatrix3","","A 3D orthographic projection stored as a 4D matrix.",null,null],[3,"Quaternion","","A quaternion. See the `UnitQuaternion` type alias for a quaternion that can be used as a rotation.",null,null],[12,"w","","The scalar component of the quaternion.",23,null],[12,"i","","The first vector component of the quaternion.",23,null],[12,"j","","The second vector component of the quaternion.",23,null],[12,"k","","The third vector component of the quaternion.",23,null],[3,"Unit","","A wrapper that ensures the undelying algebraic entity has a unit norm.",null,null],[4,"PartialOrdering","","Result of a partial ordering.",null,null],[13,"PartialLess","","Result of a strict comparison.",24,null],[13,"PartialEqual","","Equality relationship.",24,null],[13,"PartialGreater","","Result of a strict comparison.",24,null],[13,"NotComparable","","Result of a comparison between two objects that are not comparable.",24,null],[5,"qr","","QR decomposition using Householder reflections.",null,null],[5,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vector`. It can be a reflexion contained in a subspace.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"v"}],"output":{"name":"m"}}],[5,"cholesky","","Cholesky decomposition G of a square symmetric positive definite matrix A, such that A = G * G^T",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"hessenberg","","Hessenberg\nReturns the matrix m in Hessenberg form and the corresponding similarity transformation",null,null],[5,"clamp","","Change the input value to ensure it is on the range `[min, max]`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Same as `cmp::max`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"min","","Same as `cmp::min`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"inf","","Returns the infimum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"sup","","Returns the supremum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"partialordering"}}],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a &lt; b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a &lt;= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a &gt; b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a &gt;= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"identity","","Create a special identity object.",null,{"inputs":[],"output":{"name":"identity"}}],[5,"zero","","Create a zero-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"is_zero","","Tests is a value is iqual to zero.",null,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[5,"one","","Create a one-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"origin","","Returns the trivial origin of an affine space.",null,{"inputs":[],"output":{"name":"p"}}],[5,"center","","Returns the center of two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[5,"distance","","Returns the distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"distance_squared","","Returns the squared distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"translation","","Gets the translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inverse_translation","","Gets the inverse translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_translation","","Applies the translation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"translate","","Applies a translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"inverse_translate","","Applies an inverse translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"rotation","","Gets the rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inverse_rotation","","Gets the inverse rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_rotation","","Applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"rotate","","Applies a rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inverse_rotate","","Applies an inverse rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"},{"name":"lv"}],"output":{"name":"m"}}],[5,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"}],"output":{"name":"m"}}],[5,"angle_between","","Computes the angle of the rotation needed to transfom `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"angletype"}}],[5,"rotation_between","","Computes the rotation needed to transform `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"deltarotationtype"}}],[5,"to_rotation_matrix","","Builds a rotation matrix from `r`.",null,{"inputs":[{"name":"r"}],"output":{"name":"m"}}],[5,"absolute_rotate","","Applies a rotation using the absolute values of its components.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"transformation","","Gets the transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"inverse_transformation","","Gets the inverse transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"append_transformation","","Gets a transformed copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"t"}],"output":{"name":"m"}}],[5,"transform","","Applies a transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inverse_transform","","Applies an inverse transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"dot","","Computes the dot product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"n"}}],[5,"norm","","Computes the L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"normtype"}}],[5,"norm_squared","","Computes the squared L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"normtype"}}],[5,"normalize","","Gets the normalized version of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"v"}}],[5,"try_normalize","","Gets the normalized version of a vector or `None` if its norm is smaller than `min_norm`.",null,{"inputs":[{"name":"v"},{"name":"normtype"}],"output":{"name":"option"}}],[5,"determinant","","Computes the determinant of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"cross","","Computes the cross product of two vectors.",null,{"inputs":[{"name":"lv"},{"name":"lv"}],"output":{"name":"crossproducttype"}}],[5,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct.",null,{"inputs":[{"name":"v"}],"output":{"name":"m"}}],[5,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"approx_eq","","Tests approximate equality.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"n"}],"output":{"name":"bool"}}],[5,"abs","","Computes a component-wise absolute value.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"inverse","","Gets an inverted copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"option"}}],[5,"transpose","","Gets a transposed copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"m"}}],[5,"outer","","Computes the outer product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"outerproducttype"}}],[5,"covariance","","Computes the covariance of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"mean","","Computes the mean of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"eigen_qr","","Computes the eigenvalues and eigenvectors of a square matrix usin the QR algorithm.",null,null],[5,"new_identity","","Construct the identity matrix for a given dimension",null,{"inputs":[{"name":"usize"}],"output":{"name":"m"}}],[5,"repeat","","Create an object by repeating a value.",null,{"inputs":[{"name":"n"}],"output":{"name":"t"}}],[5,"canonical_basis","","Computes the canonical basis for a given dimension.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector.",null,{"inputs":[{"name":"v"},{"name":"f"}],"output":null}],[5,"canonical_basis_element","","Gets the (0-based) i-th element of the canonical basis of V.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[5,"diagonal","","Gets the diagonal of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"dimension","","Gets the dimension an object lives in.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"shape","","Gets the indexable range of an object.",null,{"inputs":[{"name":"v"}],"output":{"name":"i"}}],[5,"cast","","Converts an object from one type to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[11,"clone","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"new_uninitialized","","Creates an uninitialized matrix.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"from_element","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is much faster than `from_row_vector` since a `DMatrix` stores its data\nin column-major order.",25,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is much faster than `from_row_vector` since a `DMatrix` stores its data\nin column-major order.",25,null],[11,"from_row_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in row-major order.\nNote that `from_column_iter` is much faster than `from_row_iter` since a `DMatrix` stores its data\nin column-major order.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmatrix"}}],[11,"from_column_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in column-major order.\nNote that `from_column_iter` is much faster than `from_row_iter` since a `DMatrix` stores its data\nin column-major order.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmatrix"}}],[11,"from_fn","","Builds a matrix filled with the results of a function applied to each of its component coordinates.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix"}}],[11,"into_vector","","Transforms this matrix into an array. This consumes the matrix and is O(1).\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"new_zeros","","Builds a matrix filled with zeros.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",25,null],[11,"reset","","Set this matrix components to zero.",25,null],[11,"new_random","","Builds a matrix filled with random values.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"nrows","","The number of row on the matrix.",25,null],[11,"ncols","","The number of columns on the matrix.",25,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"new_identity","","Builds an identity matrix.",25,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",25,null],[11,"unsafe_at","","Just like `at` without bounds checking.",25,null],[11,"swap","","",25,null],[11,"shape","","",25,null],[11,"index","","",25,null],[11,"index_mut","","",25,null],[11,"mul","","",25,null],[11,"mul","","",25,null],[11,"mul_assign","","",25,null],[11,"mul_assign","","",25,null],[11,"mul","","",25,null],[11,"mul","","",25,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"add","","",25,null],[11,"add","","",25,null],[11,"add_assign","","",25,null],[11,"add_assign","","",25,null],[11,"sub","","",25,null],[11,"sub_assign","","",25,null],[11,"sub","","",25,null],[11,"sub","","",25,null],[11,"sub_assign","","",25,null],[11,"sub_assign","","",25,null],[11,"inverse","","",25,null],[11,"inverse_mut","","",25,null],[11,"transpose","","",25,null],[11,"transpose_mut","","",25,null],[11,"mean","","",25,null],[11,"covariance","","",25,null],[11,"ncols","","",25,null],[11,"set_column","","",25,null],[11,"column","","",25,null],[11,"column_slice","","",25,null],[11,"nrows","","",25,null],[11,"set_row","","",25,null],[11,"row","","",25,null],[11,"row_slice","","",25,null],[11,"from_diagonal","","",25,{"inputs":[{"name":"dvector"}],"output":{"name":"dmatrix"}}],[11,"diagonal","","",25,null],[11,"approx_epsilon","","",25,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",25,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",25,null],[11,"approx_eq_ulps","","",25,null],[11,"fmt","","",25,null],[11,"mul","","",25,null],[11,"div","","",25,null],[11,"add","","",25,null],[11,"eq","","",26,null],[11,"clone","","",26,null],[11,"new_zeros","","Builds a matrix filled with zeros.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",26,null],[11,"reset","","Set this matrix components to zero.",26,null],[11,"new_random","","Builds a matrix filled with random values.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"nrows","","The number of row on the matrix.",26,null],[11,"ncols","","The number of columns on the matrix.",26,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",26,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",26,null],[11,"new_identity","","Builds an identity matrix.",26,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",26,null],[11,"unsafe_at","","Just like `at` without bounds checking.",26,null],[11,"swap","","",26,null],[11,"shape","","",26,null],[11,"index","","",26,null],[11,"index_mut","","",26,null],[11,"mul","","",26,null],[11,"mul","","",26,null],[11,"mul_assign","","",26,null],[11,"mul_assign","","",26,null],[11,"mul","","",26,null],[11,"mul","","",26,null],[11,"mul","","",27,null],[11,"mul","","",27,null],[11,"mul_assign","","",27,null],[11,"mul_assign","","",27,null],[11,"add","","",26,null],[11,"add","","",26,null],[11,"add_assign","","",26,null],[11,"add_assign","","",26,null],[11,"sub","","",26,null],[11,"sub_assign","","",26,null],[11,"sub","","",26,null],[11,"sub","","",26,null],[11,"sub_assign","","",26,null],[11,"sub_assign","","",26,null],[11,"inverse","","",26,null],[11,"inverse_mut","","",26,null],[11,"transpose","","",26,null],[11,"transpose_mut","","",26,null],[11,"mean","","",26,null],[11,"covariance","","",26,null],[11,"ncols","","",26,null],[11,"set_column","","",26,null],[11,"column","","",26,null],[11,"column_slice","","",26,null],[11,"nrows","","",26,null],[11,"set_row","","",26,null],[11,"row","","",26,null],[11,"row_slice","","",26,null],[11,"from_diagonal","","",26,{"inputs":[{"name":"dvector1"}],"output":{"name":"dmatrix1"}}],[11,"diagonal","","",26,null],[11,"approx_epsilon","","",26,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",26,null],[11,"approx_eq_ulps","","",26,null],[11,"fmt","","",26,null],[11,"mul","","",26,null],[11,"div","","",26,null],[11,"add","","",26,null],[11,"from_element","","Builds a matrix filled with a given constant.",26,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix1"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",26,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",26,null],[11,"from_fn","","Builds a matrix using an initialization function.",26,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix1"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"eq","","",28,null],[11,"clone","","",28,null],[11,"new_zeros","","Builds a matrix filled with zeros.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",28,null],[11,"reset","","Set this matrix components to zero.",28,null],[11,"new_random","","Builds a matrix filled with random values.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"nrows","","The number of row on the matrix.",28,null],[11,"ncols","","The number of columns on the matrix.",28,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",28,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",28,null],[11,"new_identity","","Builds an identity matrix.",28,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",28,null],[11,"unsafe_at","","Just like `at` without bounds checking.",28,null],[11,"swap","","",28,null],[11,"shape","","",28,null],[11,"index","","",28,null],[11,"index_mut","","",28,null],[11,"mul","","",28,null],[11,"mul","","",28,null],[11,"mul_assign","","",28,null],[11,"mul_assign","","",28,null],[11,"mul","","",28,null],[11,"mul","","",28,null],[11,"mul","","",29,null],[11,"mul","","",29,null],[11,"mul_assign","","",29,null],[11,"mul_assign","","",29,null],[11,"add","","",28,null],[11,"add","","",28,null],[11,"add_assign","","",28,null],[11,"add_assign","","",28,null],[11,"sub","","",28,null],[11,"sub_assign","","",28,null],[11,"sub","","",28,null],[11,"sub","","",28,null],[11,"sub_assign","","",28,null],[11,"sub_assign","","",28,null],[11,"inverse","","",28,null],[11,"inverse_mut","","",28,null],[11,"transpose","","",28,null],[11,"transpose_mut","","",28,null],[11,"mean","","",28,null],[11,"covariance","","",28,null],[11,"ncols","","",28,null],[11,"set_column","","",28,null],[11,"column","","",28,null],[11,"column_slice","","",28,null],[11,"nrows","","",28,null],[11,"set_row","","",28,null],[11,"row","","",28,null],[11,"row_slice","","",28,null],[11,"from_diagonal","","",28,{"inputs":[{"name":"dvector2"}],"output":{"name":"dmatrix2"}}],[11,"diagonal","","",28,null],[11,"approx_epsilon","","",28,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",28,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",28,null],[11,"approx_eq_ulps","","",28,null],[11,"fmt","","",28,null],[11,"mul","","",28,null],[11,"div","","",28,null],[11,"add","","",28,null],[11,"from_element","","Builds a matrix filled with a given constant.",28,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix2"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",28,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",28,null],[11,"from_fn","","Builds a matrix using an initialization function.",28,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix2"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"eq","","",30,null],[11,"clone","","",30,null],[11,"new_zeros","","Builds a matrix filled with zeros.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",30,null],[11,"reset","","Set this matrix components to zero.",30,null],[11,"new_random","","Builds a matrix filled with random values.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"nrows","","The number of row on the matrix.",30,null],[11,"ncols","","The number of columns on the matrix.",30,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",30,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",30,null],[11,"new_identity","","Builds an identity matrix.",30,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",30,null],[11,"unsafe_at","","Just like `at` without bounds checking.",30,null],[11,"swap","","",30,null],[11,"shape","","",30,null],[11,"index","","",30,null],[11,"index_mut","","",30,null],[11,"mul","","",30,null],[11,"mul","","",30,null],[11,"mul_assign","","",30,null],[11,"mul_assign","","",30,null],[11,"mul","","",30,null],[11,"mul","","",30,null],[11,"mul","","",31,null],[11,"mul","","",31,null],[11,"mul_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"add","","",30,null],[11,"add","","",30,null],[11,"add_assign","","",30,null],[11,"add_assign","","",30,null],[11,"sub","","",30,null],[11,"sub_assign","","",30,null],[11,"sub","","",30,null],[11,"sub","","",30,null],[11,"sub_assign","","",30,null],[11,"sub_assign","","",30,null],[11,"inverse","","",30,null],[11,"inverse_mut","","",30,null],[11,"transpose","","",30,null],[11,"transpose_mut","","",30,null],[11,"mean","","",30,null],[11,"covariance","","",30,null],[11,"ncols","","",30,null],[11,"set_column","","",30,null],[11,"column","","",30,null],[11,"column_slice","","",30,null],[11,"nrows","","",30,null],[11,"set_row","","",30,null],[11,"row","","",30,null],[11,"row_slice","","",30,null],[11,"from_diagonal","","",30,{"inputs":[{"name":"dvector3"}],"output":{"name":"dmatrix3"}}],[11,"diagonal","","",30,null],[11,"approx_epsilon","","",30,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",30,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",30,null],[11,"approx_eq_ulps","","",30,null],[11,"fmt","","",30,null],[11,"mul","","",30,null],[11,"div","","",30,null],[11,"add","","",30,null],[11,"from_element","","Builds a matrix filled with a given constant.",30,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix3"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",30,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",30,null],[11,"from_fn","","Builds a matrix using an initialization function.",30,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix3"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new_zeros","","Builds a matrix filled with zeros.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",32,null],[11,"reset","","Set this matrix components to zero.",32,null],[11,"new_random","","Builds a matrix filled with random values.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"nrows","","The number of row on the matrix.",32,null],[11,"ncols","","The number of columns on the matrix.",32,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",32,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",32,null],[11,"new_identity","","Builds an identity matrix.",32,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",32,null],[11,"unsafe_at","","Just like `at` without bounds checking.",32,null],[11,"swap","","",32,null],[11,"shape","","",32,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"mul","","",32,null],[11,"mul","","",32,null],[11,"mul_assign","","",32,null],[11,"mul_assign","","",32,null],[11,"mul","","",32,null],[11,"mul","","",32,null],[11,"mul","","",33,null],[11,"mul","","",33,null],[11,"mul_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"add","","",32,null],[11,"add","","",32,null],[11,"add_assign","","",32,null],[11,"add_assign","","",32,null],[11,"sub","","",32,null],[11,"sub_assign","","",32,null],[11,"sub","","",32,null],[11,"sub","","",32,null],[11,"sub_assign","","",32,null],[11,"sub_assign","","",32,null],[11,"inverse","","",32,null],[11,"inverse_mut","","",32,null],[11,"transpose","","",32,null],[11,"transpose_mut","","",32,null],[11,"mean","","",32,null],[11,"covariance","","",32,null],[11,"ncols","","",32,null],[11,"set_column","","",32,null],[11,"column","","",32,null],[11,"column_slice","","",32,null],[11,"nrows","","",32,null],[11,"set_row","","",32,null],[11,"row","","",32,null],[11,"row_slice","","",32,null],[11,"from_diagonal","","",32,{"inputs":[{"name":"dvector4"}],"output":{"name":"dmatrix4"}}],[11,"diagonal","","",32,null],[11,"approx_epsilon","","",32,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",32,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",32,null],[11,"approx_eq_ulps","","",32,null],[11,"fmt","","",32,null],[11,"mul","","",32,null],[11,"div","","",32,null],[11,"add","","",32,null],[11,"from_element","","Builds a matrix filled with a given constant.",32,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix4"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",32,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",32,null],[11,"from_fn","","Builds a matrix using an initialization function.",32,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix4"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"eq","","",34,null],[11,"clone","","",34,null],[11,"new_zeros","","Builds a matrix filled with zeros.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",34,null],[11,"reset","","Set this matrix components to zero.",34,null],[11,"new_random","","Builds a matrix filled with random values.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"nrows","","The number of row on the matrix.",34,null],[11,"ncols","","The number of columns on the matrix.",34,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",34,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",34,null],[11,"new_identity","","Builds an identity matrix.",34,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",34,null],[11,"unsafe_at","","Just like `at` without bounds checking.",34,null],[11,"swap","","",34,null],[11,"shape","","",34,null],[11,"index","","",34,null],[11,"index_mut","","",34,null],[11,"mul","","",34,null],[11,"mul","","",34,null],[11,"mul_assign","","",34,null],[11,"mul_assign","","",34,null],[11,"mul","","",34,null],[11,"mul","","",34,null],[11,"mul","","",35,null],[11,"mul","","",35,null],[11,"mul_assign","","",35,null],[11,"mul_assign","","",35,null],[11,"add","","",34,null],[11,"add","","",34,null],[11,"add_assign","","",34,null],[11,"add_assign","","",34,null],[11,"sub","","",34,null],[11,"sub_assign","","",34,null],[11,"sub","","",34,null],[11,"sub","","",34,null],[11,"sub_assign","","",34,null],[11,"sub_assign","","",34,null],[11,"inverse","","",34,null],[11,"inverse_mut","","",34,null],[11,"transpose","","",34,null],[11,"transpose_mut","","",34,null],[11,"mean","","",34,null],[11,"covariance","","",34,null],[11,"ncols","","",34,null],[11,"set_column","","",34,null],[11,"column","","",34,null],[11,"column_slice","","",34,null],[11,"nrows","","",34,null],[11,"set_row","","",34,null],[11,"row","","",34,null],[11,"row_slice","","",34,null],[11,"from_diagonal","","",34,{"inputs":[{"name":"dvector5"}],"output":{"name":"dmatrix5"}}],[11,"diagonal","","",34,null],[11,"approx_epsilon","","",34,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",34,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",34,null],[11,"approx_eq_ulps","","",34,null],[11,"fmt","","",34,null],[11,"mul","","",34,null],[11,"div","","",34,null],[11,"add","","",34,null],[11,"from_element","","Builds a matrix filled with a given constant.",34,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix5"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",34,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",34,null],[11,"from_fn","","Builds a matrix using an initialization function.",34,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix5"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"new_zeros","","Builds a matrix filled with zeros.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",36,null],[11,"reset","","Set this matrix components to zero.",36,null],[11,"new_random","","Builds a matrix filled with random values.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"nrows","","The number of row on the matrix.",36,null],[11,"ncols","","The number of columns on the matrix.",36,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",36,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",36,null],[11,"new_identity","","Builds an identity matrix.",36,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",36,null],[11,"unsafe_at","","Just like `at` without bounds checking.",36,null],[11,"swap","","",36,null],[11,"shape","","",36,null],[11,"index","","",36,null],[11,"index_mut","","",36,null],[11,"mul","","",36,null],[11,"mul","","",36,null],[11,"mul_assign","","",36,null],[11,"mul_assign","","",36,null],[11,"mul","","",36,null],[11,"mul","","",36,null],[11,"mul","","",37,null],[11,"mul","","",37,null],[11,"mul_assign","","",37,null],[11,"mul_assign","","",37,null],[11,"add","","",36,null],[11,"add","","",36,null],[11,"add_assign","","",36,null],[11,"add_assign","","",36,null],[11,"sub","","",36,null],[11,"sub_assign","","",36,null],[11,"sub","","",36,null],[11,"sub","","",36,null],[11,"sub_assign","","",36,null],[11,"sub_assign","","",36,null],[11,"inverse","","",36,null],[11,"inverse_mut","","",36,null],[11,"transpose","","",36,null],[11,"transpose_mut","","",36,null],[11,"mean","","",36,null],[11,"covariance","","",36,null],[11,"ncols","","",36,null],[11,"set_column","","",36,null],[11,"column","","",36,null],[11,"column_slice","","",36,null],[11,"nrows","","",36,null],[11,"set_row","","",36,null],[11,"row","","",36,null],[11,"row_slice","","",36,null],[11,"from_diagonal","","",36,{"inputs":[{"name":"dvector6"}],"output":{"name":"dmatrix6"}}],[11,"diagonal","","",36,null],[11,"approx_epsilon","","",36,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",36,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",36,null],[11,"approx_eq_ulps","","",36,null],[11,"fmt","","",36,null],[11,"mul","","",36,null],[11,"div","","",36,null],[11,"add","","",36,null],[11,"from_element","","Builds a matrix filled with a given constant.",36,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix6"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",36,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",36,null],[11,"from_fn","","Builds a matrix using an initialization function.",36,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix6"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"new_uninitialized","","Creates an uninitialized vector.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"from_element","","Builds a vector filled with a constant.",0,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",0,null],[11,"from_fn","","Builds a vector filled with the results of a function applied to each of its component coordinates.",0,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector"}}],[11,"len","","The vector length.",0,null],[11,"from_iter","","",0,{"inputs":[{"name":"i"}],"output":{"name":"dvector"}}],[11,"outer","","",0,null],[11,"is_zero","","Tests if all components of the vector are zeroes.",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"shape","","",0,null],[11,"swap","","",0,null],[11,"unsafe_at","","",0,null],[11,"unsafe_set","","",0,null],[11,"index","","",0,null],[11,"index_mut","","",0,null],[11,"iter","","",0,null],[11,"iter_mut","","",0,null],[11,"axpy","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"div_assign","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"neg","","",0,null],[11,"dot","","",0,null],[11,"norm_squared","","",0,null],[11,"normalize","","",0,null],[11,"normalize_mut","","",0,null],[11,"try_normalize","","",0,null],[11,"try_normalize_mut","","",0,null],[11,"mean","","",0,null],[11,"approx_epsilon","","",0,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",0,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",0,null],[11,"approx_eq_ulps","","",0,null],[11,"new_zeros","","Builds a vector filled with zeros.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"new_ones","","Builds a vector filled with ones.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"new_random","","Builds a vector filled with random values.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",0,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",0,null],[11,"is_zero","","Tests if all components of the vector are zeroes.",27,null],[11,"as_ref","","",27,null],[11,"as_mut","","",27,null],[11,"shape","","",27,null],[11,"swap","","",27,null],[11,"unsafe_at","","",27,null],[11,"unsafe_set","","",27,null],[11,"index","","",27,null],[11,"index_mut","","",27,null],[11,"iter","","",27,null],[11,"iter_mut","","",27,null],[11,"axpy","","",27,null],[11,"mul","","",27,null],[11,"mul","","",27,null],[11,"mul_assign","","",27,null],[11,"mul_assign","","",27,null],[11,"div","","",27,null],[11,"div","","",27,null],[11,"div_assign","","",27,null],[11,"div_assign","","",27,null],[11,"add","","",27,null],[11,"add","","",27,null],[11,"add_assign","","",27,null],[11,"add_assign","","",27,null],[11,"sub","","",27,null],[11,"sub","","",27,null],[11,"sub_assign","","",27,null],[11,"sub_assign","","",27,null],[11,"neg","","",27,null],[11,"dot","","",27,null],[11,"norm_squared","","",27,null],[11,"normalize","","",27,null],[11,"normalize_mut","","",27,null],[11,"try_normalize","","",27,null],[11,"try_normalize_mut","","",27,null],[11,"mean","","",27,null],[11,"approx_epsilon","","",27,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",27,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",27,null],[11,"approx_eq_ulps","","",27,null],[11,"new_zeros","","Builds a vector filled with zeros.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"new_ones","","Builds a vector filled with ones.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"new_random","","Builds a vector filled with random values.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",27,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",27,null],[11,"len","","The number of elements of this vector.",27,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"eq","","",27,null],[11,"clone","","",27,null],[11,"from_element","","Builds a vector filled with a constant.",27,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector1"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",27,null],[11,"from_fn","","Builds a vector filled with the result of a function.",27,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector1"}}],[11,"from_iter","","",27,{"inputs":[{"name":"i"}],"output":{"name":"dvector1"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",29,null],[11,"as_ref","","",29,null],[11,"as_mut","","",29,null],[11,"shape","","",29,null],[11,"swap","","",29,null],[11,"unsafe_at","","",29,null],[11,"unsafe_set","","",29,null],[11,"index","","",29,null],[11,"index_mut","","",29,null],[11,"iter","","",29,null],[11,"iter_mut","","",29,null],[11,"axpy","","",29,null],[11,"mul","","",29,null],[11,"mul","","",29,null],[11,"mul_assign","","",29,null],[11,"mul_assign","","",29,null],[11,"div","","",29,null],[11,"div","","",29,null],[11,"div_assign","","",29,null],[11,"div_assign","","",29,null],[11,"add","","",29,null],[11,"add","","",29,null],[11,"add_assign","","",29,null],[11,"add_assign","","",29,null],[11,"sub","","",29,null],[11,"sub","","",29,null],[11,"sub_assign","","",29,null],[11,"sub_assign","","",29,null],[11,"neg","","",29,null],[11,"dot","","",29,null],[11,"norm_squared","","",29,null],[11,"normalize","","",29,null],[11,"normalize_mut","","",29,null],[11,"try_normalize","","",29,null],[11,"try_normalize_mut","","",29,null],[11,"mean","","",29,null],[11,"approx_epsilon","","",29,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",29,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",29,null],[11,"approx_eq_ulps","","",29,null],[11,"new_zeros","","Builds a vector filled with zeros.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"new_ones","","Builds a vector filled with ones.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"new_random","","Builds a vector filled with random values.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",29,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",29,null],[11,"len","","The number of elements of this vector.",29,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"eq","","",29,null],[11,"clone","","",29,null],[11,"from_element","","Builds a vector filled with a constant.",29,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector2"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",29,null],[11,"from_fn","","Builds a vector filled with the result of a function.",29,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector2"}}],[11,"from_iter","","",29,{"inputs":[{"name":"i"}],"output":{"name":"dvector2"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",31,null],[11,"as_ref","","",31,null],[11,"as_mut","","",31,null],[11,"shape","","",31,null],[11,"swap","","",31,null],[11,"unsafe_at","","",31,null],[11,"unsafe_set","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"iter","","",31,null],[11,"iter_mut","","",31,null],[11,"axpy","","",31,null],[11,"mul","","",31,null],[11,"mul","","",31,null],[11,"mul_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"div","","",31,null],[11,"div","","",31,null],[11,"div_assign","","",31,null],[11,"div_assign","","",31,null],[11,"add","","",31,null],[11,"add","","",31,null],[11,"add_assign","","",31,null],[11,"add_assign","","",31,null],[11,"sub","","",31,null],[11,"sub","","",31,null],[11,"sub_assign","","",31,null],[11,"sub_assign","","",31,null],[11,"neg","","",31,null],[11,"dot","","",31,null],[11,"norm_squared","","",31,null],[11,"normalize","","",31,null],[11,"normalize_mut","","",31,null],[11,"try_normalize","","",31,null],[11,"try_normalize_mut","","",31,null],[11,"mean","","",31,null],[11,"approx_epsilon","","",31,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",31,null],[11,"approx_eq_ulps","","",31,null],[11,"new_zeros","","Builds a vector filled with zeros.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"new_ones","","Builds a vector filled with ones.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"new_random","","Builds a vector filled with random values.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",31,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",31,null],[11,"len","","The number of elements of this vector.",31,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"eq","","",31,null],[11,"clone","","",31,null],[11,"from_element","","Builds a vector filled with a constant.",31,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector3"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",31,null],[11,"from_fn","","Builds a vector filled with the result of a function.",31,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector3"}}],[11,"from_iter","","",31,{"inputs":[{"name":"i"}],"output":{"name":"dvector3"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",33,null],[11,"as_ref","","",33,null],[11,"as_mut","","",33,null],[11,"shape","","",33,null],[11,"swap","","",33,null],[11,"unsafe_at","","",33,null],[11,"unsafe_set","","",33,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"iter","","",33,null],[11,"iter_mut","","",33,null],[11,"axpy","","",33,null],[11,"mul","","",33,null],[11,"mul","","",33,null],[11,"mul_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"div","","",33,null],[11,"div","","",33,null],[11,"div_assign","","",33,null],[11,"div_assign","","",33,null],[11,"add","","",33,null],[11,"add","","",33,null],[11,"add_assign","","",33,null],[11,"add_assign","","",33,null],[11,"sub","","",33,null],[11,"sub","","",33,null],[11,"sub_assign","","",33,null],[11,"sub_assign","","",33,null],[11,"neg","","",33,null],[11,"dot","","",33,null],[11,"norm_squared","","",33,null],[11,"normalize","","",33,null],[11,"normalize_mut","","",33,null],[11,"try_normalize","","",33,null],[11,"try_normalize_mut","","",33,null],[11,"mean","","",33,null],[11,"approx_epsilon","","",33,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",33,null],[11,"approx_eq_ulps","","",33,null],[11,"new_zeros","","Builds a vector filled with zeros.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"new_ones","","Builds a vector filled with ones.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"new_random","","Builds a vector filled with random values.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",33,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",33,null],[11,"len","","The number of elements of this vector.",33,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"eq","","",33,null],[11,"clone","","",33,null],[11,"from_element","","Builds a vector filled with a constant.",33,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector4"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",33,null],[11,"from_fn","","Builds a vector filled with the result of a function.",33,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector4"}}],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"dvector4"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",35,null],[11,"as_ref","","",35,null],[11,"as_mut","","",35,null],[11,"shape","","",35,null],[11,"swap","","",35,null],[11,"unsafe_at","","",35,null],[11,"unsafe_set","","",35,null],[11,"index","","",35,null],[11,"index_mut","","",35,null],[11,"iter","","",35,null],[11,"iter_mut","","",35,null],[11,"axpy","","",35,null],[11,"mul","","",35,null],[11,"mul","","",35,null],[11,"mul_assign","","",35,null],[11,"mul_assign","","",35,null],[11,"div","","",35,null],[11,"div","","",35,null],[11,"div_assign","","",35,null],[11,"div_assign","","",35,null],[11,"add","","",35,null],[11,"add","","",35,null],[11,"add_assign","","",35,null],[11,"add_assign","","",35,null],[11,"sub","","",35,null],[11,"sub","","",35,null],[11,"sub_assign","","",35,null],[11,"sub_assign","","",35,null],[11,"neg","","",35,null],[11,"dot","","",35,null],[11,"norm_squared","","",35,null],[11,"normalize","","",35,null],[11,"normalize_mut","","",35,null],[11,"try_normalize","","",35,null],[11,"try_normalize_mut","","",35,null],[11,"mean","","",35,null],[11,"approx_epsilon","","",35,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",35,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",35,null],[11,"approx_eq_ulps","","",35,null],[11,"new_zeros","","Builds a vector filled with zeros.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"new_ones","","Builds a vector filled with ones.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"new_random","","Builds a vector filled with random values.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",35,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",35,null],[11,"len","","The number of elements of this vector.",35,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"eq","","",35,null],[11,"clone","","",35,null],[11,"from_element","","Builds a vector filled with a constant.",35,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector5"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",35,null],[11,"from_fn","","Builds a vector filled with the result of a function.",35,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector5"}}],[11,"from_iter","","",35,{"inputs":[{"name":"i"}],"output":{"name":"dvector5"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",37,null],[11,"as_ref","","",37,null],[11,"as_mut","","",37,null],[11,"shape","","",37,null],[11,"swap","","",37,null],[11,"unsafe_at","","",37,null],[11,"unsafe_set","","",37,null],[11,"index","","",37,null],[11,"index_mut","","",37,null],[11,"iter","","",37,null],[11,"iter_mut","","",37,null],[11,"axpy","","",37,null],[11,"mul","","",37,null],[11,"mul","","",37,null],[11,"mul_assign","","",37,null],[11,"mul_assign","","",37,null],[11,"div","","",37,null],[11,"div","","",37,null],[11,"div_assign","","",37,null],[11,"div_assign","","",37,null],[11,"add","","",37,null],[11,"add","","",37,null],[11,"add_assign","","",37,null],[11,"add_assign","","",37,null],[11,"sub","","",37,null],[11,"sub","","",37,null],[11,"sub_assign","","",37,null],[11,"sub_assign","","",37,null],[11,"neg","","",37,null],[11,"dot","","",37,null],[11,"norm_squared","","",37,null],[11,"normalize","","",37,null],[11,"normalize_mut","","",37,null],[11,"try_normalize","","",37,null],[11,"try_normalize_mut","","",37,null],[11,"mean","","",37,null],[11,"approx_epsilon","","",37,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",37,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",37,null],[11,"approx_eq_ulps","","",37,null],[11,"new_zeros","","Builds a vector filled with zeros.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"new_ones","","Builds a vector filled with ones.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"new_random","","Builds a vector filled with random values.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",37,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",37,null],[11,"len","","The number of elements of this vector.",37,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"eq","","",37,null],[11,"clone","","",37,null],[11,"from_element","","Builds a vector filled with a constant.",37,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector6"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",37,null],[11,"from_fn","","Builds a vector filled with the result of a function.",37,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector6"}}],[11,"from_iter","","",37,{"inputs":[{"name":"i"}],"output":{"name":"dvector6"}}],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"clone","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"add","","",11,null],[11,"add_assign","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub_assign","","",11,null],[11,"sub","","",11,null],[11,"mul","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",11,null],[11,"div","","",11,null],[11,"div_assign","","",11,null],[11,"div","","",11,null],[11,"zero","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"is_zero","","",11,null],[11,"one","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"abs","","",11,{"inputs":[{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"dot","","",11,null],[11,"norm_squared","","",11,null],[11,"normalize","","",11,null],[11,"normalize_mut","","",11,null],[11,"try_normalize","","",11,null],[11,"try_normalize_mut","","",11,null],[11,"translation","","",11,null],[11,"inverse_translation","","",11,null],[11,"append_translation_mut","","",11,null],[11,"append_translation","","",11,null],[11,"prepend_translation_mut","","",11,null],[11,"prepend_translation","","",11,null],[11,"set_translation","","",11,null],[11,"translate","","",11,null],[11,"inverse_translate","","",11,null],[11,"rotate","","",11,null],[11,"inverse_rotate","","",11,null],[11,"rotate","","",17,null],[11,"inverse_rotate","","",17,null],[11,"transform","","",11,null],[11,"inverse_transform","","",11,null],[11,"to_point","","Converts this vector to a point.",11,null],[11,"as_point","","Reinterprets this vector as a point.",11,null],[11,"mean","","",11,null],[11,"fmt","","",11,null],[11,"neg","","",11,null],[11,"repeat","","",11,{"inputs":[{"name":"n"}],"output":{"name":"vector1"}}],[11,"rand","","",11,{"inputs":[{"name":"r"}],"output":{"name":"vector1"}}],[11,"add_assign","","",11,null],[11,"add","","",11,null],[11,"add","","",11,null],[11,"sub_assign","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",11,null],[11,"mul","","",11,null],[11,"div_assign","","",11,null],[11,"div","","",11,null],[11,"div","","",11,null],[11,"new","","Creation from component values.",11,{"inputs":[{"name":"n"}],"output":{"name":"vector1"}}],[11,"inf","","",11,null],[11,"sup","","",11,null],[11,"partial_cmp","","",11,null],[11,"partial_lt","","",11,null],[11,"partial_le","","",11,null],[11,"partial_gt","","",11,null],[11,"partial_ge","","",11,null],[11,"from","","",11,{"inputs":[{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"approx_epsilon","","",11,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",11,null],[11,"approx_eq_eps","","",11,null],[11,"approx_eq_ulps","","",11,null],[11,"at_fast","","Unsafe read access to a vector element by index.",11,null],[11,"set_fast","","Unsafe write access to a vector element by index.",11,null],[11,"axpy","","",11,null],[11,"max_value","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"min_value","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"len","","The dimension of this entity.",11,null],[11,"as_ref","","",11,null],[11,"as_mut","","",11,null],[11,"from","","",11,null],[11,"dimension","","",11,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",11,null],[11,"swap","","",11,null],[11,"unsafe_at","","",11,null],[11,"unsafe_set","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"iter","","",11,null],[11,"iter_mut","","",11,null],[11,"from_iter","","",11,{"inputs":[{"name":"i"}],"output":{"name":"vector1"}}],[11,"to_homogeneous","","",11,null],[11,"from","","",11,{"inputs":[{"name":"vector2"}],"output":{"name":"vector1"}}],[11,"fmt","","",12,null],[11,"hash","","",12,null],[11,"clone","","",12,null],[11,"decode","","",12,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"add","","",12,null],[11,"add_assign","","",12,null],[11,"add","","",12,null],[11,"sub","","",12,null],[11,"sub_assign","","",12,null],[11,"sub","","",12,null],[11,"mul","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",12,null],[11,"div","","",12,null],[11,"div_assign","","",12,null],[11,"div","","",12,null],[11,"zero","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"is_zero","","",12,null],[11,"one","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"abs","","",12,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"dot","","",12,null],[11,"norm_squared","","",12,null],[11,"normalize","","",12,null],[11,"normalize_mut","","",12,null],[11,"try_normalize","","",12,null],[11,"try_normalize_mut","","",12,null],[11,"translation","","",12,null],[11,"inverse_translation","","",12,null],[11,"append_translation_mut","","",12,null],[11,"append_translation","","",12,null],[11,"prepend_translation_mut","","",12,null],[11,"prepend_translation","","",12,null],[11,"set_translation","","",12,null],[11,"translate","","",12,null],[11,"inverse_translate","","",12,null],[11,"rotate","","",12,null],[11,"inverse_rotate","","",12,null],[11,"rotate","","",18,null],[11,"inverse_rotate","","",18,null],[11,"transform","","",12,null],[11,"inverse_transform","","",12,null],[11,"to_point","","Converts this vector to a point.",12,null],[11,"as_point","","Reinterprets this vector as a point.",12,null],[11,"mean","","",12,null],[11,"fmt","","",12,null],[11,"neg","","",12,null],[11,"repeat","","",12,{"inputs":[{"name":"n"}],"output":{"name":"vector2"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"vector2"}}],[11,"add_assign","","",12,null],[11,"add","","",12,null],[11,"add","","",12,null],[11,"sub_assign","","",12,null],[11,"sub","","",12,null],[11,"sub","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",12,null],[11,"mul","","",12,null],[11,"div_assign","","",12,null],[11,"div","","",12,null],[11,"div","","",12,null],[11,"new","","Creation from component values.",12,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"vector2"}}],[11,"inf","","",12,null],[11,"sup","","",12,null],[11,"partial_cmp","","",12,null],[11,"partial_lt","","",12,null],[11,"partial_le","","",12,null],[11,"partial_gt","","",12,null],[11,"partial_ge","","",12,null],[11,"from","","",12,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"approx_epsilon","","",12,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",12,null],[11,"approx_eq_eps","","",12,null],[11,"approx_eq_ulps","","",12,null],[11,"at_fast","","Unsafe read access to a vector element by index.",12,null],[11,"set_fast","","Unsafe write access to a vector element by index.",12,null],[11,"axpy","","",12,null],[11,"max_value","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"min_value","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"len","","The dimension of this entity.",12,null],[11,"as_ref","","",12,null],[11,"as_mut","","",12,null],[11,"from","","",12,null],[11,"dimension","","",12,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",12,null],[11,"swap","","",12,null],[11,"unsafe_at","","",12,null],[11,"unsafe_set","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"iter","","",12,null],[11,"iter_mut","","",12,null],[11,"from_iter","","",12,{"inputs":[{"name":"i"}],"output":{"name":"vector2"}}],[11,"to_homogeneous","","",12,null],[11,"from","","",12,{"inputs":[{"name":"vector3"}],"output":{"name":"vector2"}}],[11,"fmt","","",13,null],[11,"hash","","",13,null],[11,"clone","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"add","","",13,null],[11,"add_assign","","",13,null],[11,"add","","",13,null],[11,"sub","","",13,null],[11,"sub_assign","","",13,null],[11,"sub","","",13,null],[11,"mul","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",13,null],[11,"div","","",13,null],[11,"div_assign","","",13,null],[11,"div","","",13,null],[11,"zero","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"is_zero","","",13,null],[11,"one","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"abs","","",13,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"dot","","",13,null],[11,"norm_squared","","",13,null],[11,"normalize","","",13,null],[11,"normalize_mut","","",13,null],[11,"try_normalize","","",13,null],[11,"try_normalize_mut","","",13,null],[11,"translation","","",13,null],[11,"inverse_translation","","",13,null],[11,"append_translation_mut","","",13,null],[11,"append_translation","","",13,null],[11,"prepend_translation_mut","","",13,null],[11,"prepend_translation","","",13,null],[11,"set_translation","","",13,null],[11,"translate","","",13,null],[11,"inverse_translate","","",13,null],[11,"rotate","","",13,null],[11,"inverse_rotate","","",13,null],[11,"rotate","","",19,null],[11,"inverse_rotate","","",19,null],[11,"transform","","",13,null],[11,"inverse_transform","","",13,null],[11,"to_point","","Converts this vector to a point.",13,null],[11,"as_point","","Reinterprets this vector as a point.",13,null],[11,"mean","","",13,null],[11,"fmt","","",13,null],[11,"neg","","",13,null],[11,"repeat","","",13,{"inputs":[{"name":"n"}],"output":{"name":"vector3"}}],[11,"rand","","",13,{"inputs":[{"name":"r"}],"output":{"name":"vector3"}}],[11,"add_assign","","",13,null],[11,"add","","",13,null],[11,"add","","",13,null],[11,"sub_assign","","",13,null],[11,"sub","","",13,null],[11,"sub","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",13,null],[11,"mul","","",13,null],[11,"div_assign","","",13,null],[11,"div","","",13,null],[11,"div","","",13,null],[11,"new","","Creation from component values.",13,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector3"}}],[11,"inf","","",13,null],[11,"sup","","",13,null],[11,"partial_cmp","","",13,null],[11,"partial_lt","","",13,null],[11,"partial_le","","",13,null],[11,"partial_gt","","",13,null],[11,"partial_ge","","",13,null],[11,"from","","",13,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"approx_epsilon","","",13,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",13,null],[11,"approx_eq_eps","","",13,null],[11,"approx_eq_ulps","","",13,null],[11,"at_fast","","Unsafe read access to a vector element by index.",13,null],[11,"set_fast","","Unsafe write access to a vector element by index.",13,null],[11,"axpy","","",13,null],[11,"max_value","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"min_value","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"len","","The dimension of this entity.",13,null],[11,"as_ref","","",13,null],[11,"as_mut","","",13,null],[11,"from","","",13,null],[11,"dimension","","",13,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",13,null],[11,"swap","","",13,null],[11,"unsafe_at","","",13,null],[11,"unsafe_set","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"iter","","",13,null],[11,"iter_mut","","",13,null],[11,"from_iter","","",13,{"inputs":[{"name":"i"}],"output":{"name":"vector3"}}],[11,"to_homogeneous","","",13,null],[11,"from","","",13,{"inputs":[{"name":"vector4"}],"output":{"name":"vector3"}}],[11,"fmt","","",14,null],[11,"hash","","",14,null],[11,"clone","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"add","","",14,null],[11,"add_assign","","",14,null],[11,"add","","",14,null],[11,"sub","","",14,null],[11,"sub_assign","","",14,null],[11,"sub","","",14,null],[11,"mul","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",14,null],[11,"div","","",14,null],[11,"div_assign","","",14,null],[11,"div","","",14,null],[11,"zero","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"is_zero","","",14,null],[11,"one","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"abs","","",14,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"dot","","",14,null],[11,"norm_squared","","",14,null],[11,"normalize","","",14,null],[11,"normalize_mut","","",14,null],[11,"try_normalize","","",14,null],[11,"try_normalize_mut","","",14,null],[11,"translation","","",14,null],[11,"inverse_translation","","",14,null],[11,"append_translation_mut","","",14,null],[11,"append_translation","","",14,null],[11,"prepend_translation_mut","","",14,null],[11,"prepend_translation","","",14,null],[11,"set_translation","","",14,null],[11,"translate","","",14,null],[11,"inverse_translate","","",14,null],[11,"rotate","","",14,null],[11,"inverse_rotate","","",14,null],[11,"rotate","","",20,null],[11,"inverse_rotate","","",20,null],[11,"transform","","",14,null],[11,"inverse_transform","","",14,null],[11,"to_point","","Converts this vector to a point.",14,null],[11,"as_point","","Reinterprets this vector as a point.",14,null],[11,"mean","","",14,null],[11,"fmt","","",14,null],[11,"neg","","",14,null],[11,"repeat","","",14,{"inputs":[{"name":"n"}],"output":{"name":"vector4"}}],[11,"rand","","",14,{"inputs":[{"name":"r"}],"output":{"name":"vector4"}}],[11,"add_assign","","",14,null],[11,"add","","",14,null],[11,"add","","",14,null],[11,"sub_assign","","",14,null],[11,"sub","","",14,null],[11,"sub","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",14,null],[11,"mul","","",14,null],[11,"div_assign","","",14,null],[11,"div","","",14,null],[11,"div","","",14,null],[11,"new","","Creation from component values.",14,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector4"}}],[11,"inf","","",14,null],[11,"sup","","",14,null],[11,"partial_cmp","","",14,null],[11,"partial_lt","","",14,null],[11,"partial_le","","",14,null],[11,"partial_gt","","",14,null],[11,"partial_ge","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"approx_epsilon","","",14,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",14,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",14,null],[11,"approx_eq_eps","","",14,null],[11,"approx_eq_ulps","","",14,null],[11,"at_fast","","Unsafe read access to a vector element by index.",14,null],[11,"set_fast","","Unsafe write access to a vector element by index.",14,null],[11,"axpy","","",14,null],[11,"max_value","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"min_value","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"len","","The dimension of this entity.",14,null],[11,"as_ref","","",14,null],[11,"as_mut","","",14,null],[11,"from","","",14,null],[11,"dimension","","",14,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",14,null],[11,"swap","","",14,null],[11,"unsafe_at","","",14,null],[11,"unsafe_set","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"iter","","",14,null],[11,"iter_mut","","",14,null],[11,"from_iter","","",14,{"inputs":[{"name":"i"}],"output":{"name":"vector4"}}],[11,"canonical_basis","","",14,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",14,{"inputs":[{"name":"vector4"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"to_homogeneous","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vector5"}],"output":{"name":"vector4"}}],[11,"fmt","","",15,null],[11,"hash","","",15,null],[11,"clone","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"add","","",15,null],[11,"add_assign","","",15,null],[11,"add","","",15,null],[11,"sub","","",15,null],[11,"sub_assign","","",15,null],[11,"sub","","",15,null],[11,"mul","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",15,null],[11,"div","","",15,null],[11,"div_assign","","",15,null],[11,"div","","",15,null],[11,"zero","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"is_zero","","",15,null],[11,"one","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"abs","","",15,{"inputs":[{"name":"vector5"}],"output":{"name":"vector5"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"a","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"dot","","",15,null],[11,"norm_squared","","",15,null],[11,"normalize","","",15,null],[11,"normalize_mut","","",15,null],[11,"try_normalize","","",15,null],[11,"try_normalize_mut","","",15,null],[11,"translation","","",15,null],[11,"inverse_translation","","",15,null],[11,"append_translation_mut","","",15,null],[11,"append_translation","","",15,null],[11,"prepend_translation_mut","","",15,null],[11,"prepend_translation","","",15,null],[11,"set_translation","","",15,null],[11,"translate","","",15,null],[11,"inverse_translate","","",15,null],[11,"rotate","","",15,null],[11,"inverse_rotate","","",15,null],[11,"rotate","","",21,null],[11,"inverse_rotate","","",21,null],[11,"transform","","",15,null],[11,"inverse_transform","","",15,null],[11,"to_point","","Converts this vector to a point.",15,null],[11,"as_point","","Reinterprets this vector as a point.",15,null],[11,"mean","","",15,null],[11,"fmt","","",15,null],[11,"neg","","",15,null],[11,"repeat","","",15,{"inputs":[{"name":"n"}],"output":{"name":"vector5"}}],[11,"rand","","",15,{"inputs":[{"name":"r"}],"output":{"name":"vector5"}}],[11,"add_assign","","",15,null],[11,"add","","",15,null],[11,"add","","",15,null],[11,"sub_assign","","",15,null],[11,"sub","","",15,null],[11,"sub","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",15,null],[11,"mul","","",15,null],[11,"div_assign","","",15,null],[11,"div","","",15,null],[11,"div","","",15,null],[11,"new","","Creation from component values.",15,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector5"}}],[11,"inf","","",15,null],[11,"sup","","",15,null],[11,"partial_cmp","","",15,null],[11,"partial_lt","","",15,null],[11,"partial_le","","",15,null],[11,"partial_gt","","",15,null],[11,"partial_ge","","",15,null],[11,"from","","",15,{"inputs":[{"name":"vector5"}],"output":{"name":"vector5"}}],[11,"approx_epsilon","","",15,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",15,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",15,null],[11,"approx_eq_eps","","",15,null],[11,"approx_eq_ulps","","",15,null],[11,"at_fast","","Unsafe read access to a vector element by index.",15,null],[11,"set_fast","","Unsafe write access to a vector element by index.",15,null],[11,"axpy","","",15,null],[11,"max_value","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"min_value","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"len","","The dimension of this entity.",15,null],[11,"as_ref","","",15,null],[11,"as_mut","","",15,null],[11,"from","","",15,null],[11,"dimension","","",15,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",15,null],[11,"swap","","",15,null],[11,"unsafe_at","","",15,null],[11,"unsafe_set","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"iter","","",15,null],[11,"iter_mut","","",15,null],[11,"from_iter","","",15,{"inputs":[{"name":"i"}],"output":{"name":"vector5"}}],[11,"canonical_basis","","",15,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",15,{"inputs":[{"name":"vector5"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"to_homogeneous","","",15,null],[11,"from","","",15,{"inputs":[{"name":"vector6"}],"output":{"name":"vector5"}}],[11,"fmt","","",16,null],[11,"hash","","",16,null],[11,"clone","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"add","","",16,null],[11,"add_assign","","",16,null],[11,"add","","",16,null],[11,"sub","","",16,null],[11,"sub_assign","","",16,null],[11,"sub","","",16,null],[11,"mul","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",16,null],[11,"div","","",16,null],[11,"div_assign","","",16,null],[11,"div","","",16,null],[11,"zero","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"is_zero","","",16,null],[11,"one","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"abs","","",16,{"inputs":[{"name":"vector6"}],"output":{"name":"vector6"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"a","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"b","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"dot","","",16,null],[11,"norm_squared","","",16,null],[11,"normalize","","",16,null],[11,"normalize_mut","","",16,null],[11,"try_normalize","","",16,null],[11,"try_normalize_mut","","",16,null],[11,"translation","","",16,null],[11,"inverse_translation","","",16,null],[11,"append_translation_mut","","",16,null],[11,"append_translation","","",16,null],[11,"prepend_translation_mut","","",16,null],[11,"prepend_translation","","",16,null],[11,"set_translation","","",16,null],[11,"translate","","",16,null],[11,"inverse_translate","","",16,null],[11,"rotate","","",16,null],[11,"inverse_rotate","","",16,null],[11,"rotate","","",22,null],[11,"inverse_rotate","","",22,null],[11,"transform","","",16,null],[11,"inverse_transform","","",16,null],[11,"to_point","","Converts this vector to a point.",16,null],[11,"as_point","","Reinterprets this vector as a point.",16,null],[11,"mean","","",16,null],[11,"fmt","","",16,null],[11,"neg","","",16,null],[11,"repeat","","",16,{"inputs":[{"name":"n"}],"output":{"name":"vector6"}}],[11,"rand","","",16,{"inputs":[{"name":"r"}],"output":{"name":"vector6"}}],[11,"add_assign","","",16,null],[11,"add","","",16,null],[11,"add","","",16,null],[11,"sub_assign","","",16,null],[11,"sub","","",16,null],[11,"sub","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",16,null],[11,"mul","","",16,null],[11,"div_assign","","",16,null],[11,"div","","",16,null],[11,"div","","",16,null],[11,"new","","Creation from component values.",16,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector6"}}],[11,"inf","","",16,null],[11,"sup","","",16,null],[11,"partial_cmp","","",16,null],[11,"partial_lt","","",16,null],[11,"partial_le","","",16,null],[11,"partial_gt","","",16,null],[11,"partial_ge","","",16,null],[11,"from","","",16,{"inputs":[{"name":"vector6"}],"output":{"name":"vector6"}}],[11,"approx_epsilon","","",16,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",16,null],[11,"approx_eq_eps","","",16,null],[11,"approx_eq_ulps","","",16,null],[11,"at_fast","","Unsafe read access to a vector element by index.",16,null],[11,"set_fast","","Unsafe write access to a vector element by index.",16,null],[11,"axpy","","",16,null],[11,"max_value","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"min_value","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"len","","The dimension of this entity.",16,null],[11,"as_ref","","",16,null],[11,"as_mut","","",16,null],[11,"from","","",16,null],[11,"dimension","","",16,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",16,null],[11,"swap","","",16,null],[11,"unsafe_at","","",16,null],[11,"unsafe_set","","",16,null],[11,"index","","",16,null],[11,"index_mut","","",16,null],[11,"iter","","",16,null],[11,"iter_mut","","",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"i"}],"output":{"name":"vector6"}}],[11,"canonical_basis","","",16,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",16,{"inputs":[{"name":"vector6"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",16,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",17,null],[11,"hash","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"origin","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"is_origin","","",17,null],[11,"sub","","",17,null],[11,"add","","",17,null],[11,"add_assign","","",17,null],[11,"sub","","",17,null],[11,"sub_assign","","",17,null],[11,"to_vector","","Converts this point to its associated vector.",17,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",17,null],[11,"to_vector","","",17,null],[11,"as_vector","","",17,null],[11,"set_coords","","",17,null],[11,"fmt","","",17,null],[11,"to_homogeneous","","",17,null],[11,"from","","",17,{"inputs":[{"name":"point2"}],"output":{"name":"point1"}}],[11,"neg","","",17,null],[11,"repeat","","",17,{"inputs":[{"name":"n"}],"output":{"name":"point1"}}],[11,"rand","","",17,{"inputs":[{"name":"r"}],"output":{"name":"point1"}}],[11,"add_assign","","",17,null],[11,"add","","",17,null],[11,"add","","",17,null],[11,"sub_assign","","",17,null],[11,"sub","","",17,null],[11,"sub","","",17,null],[11,"mul_assign","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"div_assign","","",17,null],[11,"div","","",17,null],[11,"div","","",17,null],[11,"new","","Creation from component values.",17,{"inputs":[{"name":"n"}],"output":{"name":"point1"}}],[11,"inf","","",17,null],[11,"sup","","",17,null],[11,"partial_cmp","","",17,null],[11,"partial_lt","","",17,null],[11,"partial_le","","",17,null],[11,"partial_gt","","",17,null],[11,"partial_ge","","",17,null],[11,"from","","",17,{"inputs":[{"name":"point1"}],"output":{"name":"point1"}}],[11,"approx_epsilon","","",17,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",17,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",17,null],[11,"approx_eq_eps","","",17,null],[11,"approx_eq_ulps","","",17,null],[11,"at_fast","","Unsafe read access to a vector element by index.",17,null],[11,"set_fast","","Unsafe write access to a vector element by index.",17,null],[11,"axpy","","",17,null],[11,"max_value","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"min_value","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"len","","The dimension of this entity.",17,null],[11,"as_ref","","",17,null],[11,"as_mut","","",17,null],[11,"from","","",17,null],[11,"dimension","","",17,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",17,null],[11,"swap","","",17,null],[11,"unsafe_at","","",17,null],[11,"unsafe_set","","",17,null],[11,"index","","",17,null],[11,"index_mut","","",17,null],[11,"iter","","",17,null],[11,"iter_mut","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"i"}],"output":{"name":"point1"}}],[11,"fmt","","",18,null],[11,"hash","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"origin","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"is_origin","","",18,null],[11,"sub","","",18,null],[11,"add","","",18,null],[11,"add_assign","","",18,null],[11,"sub","","",18,null],[11,"sub_assign","","",18,null],[11,"to_vector","","Converts this point to its associated vector.",18,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",18,null],[11,"to_vector","","",18,null],[11,"as_vector","","",18,null],[11,"set_coords","","",18,null],[11,"fmt","","",18,null],[11,"to_homogeneous","","",18,null],[11,"from","","",18,{"inputs":[{"name":"point3"}],"output":{"name":"point2"}}],[11,"neg","","",18,null],[11,"repeat","","",18,{"inputs":[{"name":"n"}],"output":{"name":"point2"}}],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"point2"}}],[11,"add_assign","","",18,null],[11,"add","","",18,null],[11,"add","","",18,null],[11,"sub_assign","","",18,null],[11,"sub","","",18,null],[11,"sub","","",18,null],[11,"mul_assign","","",18,null],[11,"mul","","",18,null],[11,"mul","","",18,null],[11,"div_assign","","",18,null],[11,"div","","",18,null],[11,"div","","",18,null],[11,"new","","Creation from component values.",18,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"point2"}}],[11,"inf","","",18,null],[11,"sup","","",18,null],[11,"partial_cmp","","",18,null],[11,"partial_lt","","",18,null],[11,"partial_le","","",18,null],[11,"partial_gt","","",18,null],[11,"partial_ge","","",18,null],[11,"from","","",18,{"inputs":[{"name":"point2"}],"output":{"name":"point2"}}],[11,"approx_epsilon","","",18,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",18,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",18,null],[11,"approx_eq_eps","","",18,null],[11,"approx_eq_ulps","","",18,null],[11,"at_fast","","Unsafe read access to a vector element by index.",18,null],[11,"set_fast","","Unsafe write access to a vector element by index.",18,null],[11,"axpy","","",18,null],[11,"max_value","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"min_value","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"len","","The dimension of this entity.",18,null],[11,"as_ref","","",18,null],[11,"as_mut","","",18,null],[11,"from","","",18,null],[11,"dimension","","",18,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",18,null],[11,"swap","","",18,null],[11,"unsafe_at","","",18,null],[11,"unsafe_set","","",18,null],[11,"index","","",18,null],[11,"index_mut","","",18,null],[11,"iter","","",18,null],[11,"iter_mut","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"point2"}}],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"clone","","",19,null],[11,"decode","","",19,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"origin","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"is_origin","","",19,null],[11,"sub","","",19,null],[11,"add","","",19,null],[11,"add_assign","","",19,null],[11,"sub","","",19,null],[11,"sub_assign","","",19,null],[11,"to_vector","","Converts this point to its associated vector.",19,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",19,null],[11,"to_vector","","",19,null],[11,"as_vector","","",19,null],[11,"set_coords","","",19,null],[11,"fmt","","",19,null],[11,"to_homogeneous","","",19,null],[11,"from","","",19,{"inputs":[{"name":"point4"}],"output":{"name":"point3"}}],[11,"neg","","",19,null],[11,"repeat","","",19,{"inputs":[{"name":"n"}],"output":{"name":"point3"}}],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"point3"}}],[11,"add_assign","","",19,null],[11,"add","","",19,null],[11,"add","","",19,null],[11,"sub_assign","","",19,null],[11,"sub","","",19,null],[11,"sub","","",19,null],[11,"mul_assign","","",19,null],[11,"mul","","",19,null],[11,"mul","","",19,null],[11,"div_assign","","",19,null],[11,"div","","",19,null],[11,"div","","",19,null],[11,"new","","Creation from component values.",19,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point3"}}],[11,"inf","","",19,null],[11,"sup","","",19,null],[11,"partial_cmp","","",19,null],[11,"partial_lt","","",19,null],[11,"partial_le","","",19,null],[11,"partial_gt","","",19,null],[11,"partial_ge","","",19,null],[11,"from","","",19,{"inputs":[{"name":"point3"}],"output":{"name":"point3"}}],[11,"approx_epsilon","","",19,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",19,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",19,null],[11,"approx_eq_eps","","",19,null],[11,"approx_eq_ulps","","",19,null],[11,"at_fast","","Unsafe read access to a vector element by index.",19,null],[11,"set_fast","","Unsafe write access to a vector element by index.",19,null],[11,"axpy","","",19,null],[11,"max_value","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"min_value","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"len","","The dimension of this entity.",19,null],[11,"as_ref","","",19,null],[11,"as_mut","","",19,null],[11,"from","","",19,null],[11,"dimension","","",19,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",19,null],[11,"swap","","",19,null],[11,"unsafe_at","","",19,null],[11,"unsafe_set","","",19,null],[11,"index","","",19,null],[11,"index_mut","","",19,null],[11,"iter","","",19,null],[11,"iter_mut","","",19,null],[11,"from_iter","","",19,{"inputs":[{"name":"i"}],"output":{"name":"point3"}}],[11,"fmt","","",20,null],[11,"hash","","",20,null],[11,"clone","","",20,null],[11,"decode","","",20,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"origin","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"is_origin","","",20,null],[11,"sub","","",20,null],[11,"add","","",20,null],[11,"add_assign","","",20,null],[11,"sub","","",20,null],[11,"sub_assign","","",20,null],[11,"to_vector","","Converts this point to its associated vector.",20,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",20,null],[11,"to_vector","","",20,null],[11,"as_vector","","",20,null],[11,"set_coords","","",20,null],[11,"fmt","","",20,null],[11,"to_homogeneous","","",20,null],[11,"from","","",20,{"inputs":[{"name":"point5"}],"output":{"name":"point4"}}],[11,"neg","","",20,null],[11,"repeat","","",20,{"inputs":[{"name":"n"}],"output":{"name":"point4"}}],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"point4"}}],[11,"add_assign","","",20,null],[11,"add","","",20,null],[11,"add","","",20,null],[11,"sub_assign","","",20,null],[11,"sub","","",20,null],[11,"sub","","",20,null],[11,"mul_assign","","",20,null],[11,"mul","","",20,null],[11,"mul","","",20,null],[11,"div_assign","","",20,null],[11,"div","","",20,null],[11,"div","","",20,null],[11,"new","","Creation from component values.",20,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point4"}}],[11,"inf","","",20,null],[11,"sup","","",20,null],[11,"partial_cmp","","",20,null],[11,"partial_lt","","",20,null],[11,"partial_le","","",20,null],[11,"partial_gt","","",20,null],[11,"partial_ge","","",20,null],[11,"from","","",20,{"inputs":[{"name":"point4"}],"output":{"name":"point4"}}],[11,"approx_epsilon","","",20,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",20,null],[11,"approx_eq_eps","","",20,null],[11,"approx_eq_ulps","","",20,null],[11,"at_fast","","Unsafe read access to a vector element by index.",20,null],[11,"set_fast","","Unsafe write access to a vector element by index.",20,null],[11,"axpy","","",20,null],[11,"max_value","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"min_value","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"len","","The dimension of this entity.",20,null],[11,"as_ref","","",20,null],[11,"as_mut","","",20,null],[11,"from","","",20,null],[11,"dimension","","",20,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",20,null],[11,"swap","","",20,null],[11,"unsafe_at","","",20,null],[11,"unsafe_set","","",20,null],[11,"index","","",20,null],[11,"index_mut","","",20,null],[11,"iter","","",20,null],[11,"iter_mut","","",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"i"}],"output":{"name":"point4"}}],[11,"fmt","","",21,null],[11,"hash","","",21,null],[11,"clone","","",21,null],[11,"decode","","",21,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"origin","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"is_origin","","",21,null],[11,"sub","","",21,null],[11,"add","","",21,null],[11,"add_assign","","",21,null],[11,"sub","","",21,null],[11,"sub_assign","","",21,null],[11,"to_vector","","Converts this point to its associated vector.",21,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",21,null],[11,"to_vector","","",21,null],[11,"as_vector","","",21,null],[11,"set_coords","","",21,null],[11,"fmt","","",21,null],[11,"to_homogeneous","","",21,null],[11,"from","","",21,{"inputs":[{"name":"point6"}],"output":{"name":"point5"}}],[11,"neg","","",21,null],[11,"repeat","","",21,{"inputs":[{"name":"n"}],"output":{"name":"point5"}}],[11,"rand","","",21,{"inputs":[{"name":"r"}],"output":{"name":"point5"}}],[11,"add_assign","","",21,null],[11,"add","","",21,null],[11,"add","","",21,null],[11,"sub_assign","","",21,null],[11,"sub","","",21,null],[11,"sub","","",21,null],[11,"mul_assign","","",21,null],[11,"mul","","",21,null],[11,"mul","","",21,null],[11,"div_assign","","",21,null],[11,"div","","",21,null],[11,"div","","",21,null],[11,"new","","Creation from component values.",21,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point5"}}],[11,"inf","","",21,null],[11,"sup","","",21,null],[11,"partial_cmp","","",21,null],[11,"partial_lt","","",21,null],[11,"partial_le","","",21,null],[11,"partial_gt","","",21,null],[11,"partial_ge","","",21,null],[11,"from","","",21,{"inputs":[{"name":"point5"}],"output":{"name":"point5"}}],[11,"approx_epsilon","","",21,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",21,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",21,null],[11,"approx_eq_eps","","",21,null],[11,"approx_eq_ulps","","",21,null],[11,"at_fast","","Unsafe read access to a vector element by index.",21,null],[11,"set_fast","","Unsafe write access to a vector element by index.",21,null],[11,"axpy","","",21,null],[11,"max_value","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"min_value","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"len","","The dimension of this entity.",21,null],[11,"as_ref","","",21,null],[11,"as_mut","","",21,null],[11,"from","","",21,null],[11,"dimension","","",21,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",21,null],[11,"swap","","",21,null],[11,"unsafe_at","","",21,null],[11,"unsafe_set","","",21,null],[11,"index","","",21,null],[11,"index_mut","","",21,null],[11,"iter","","",21,null],[11,"iter_mut","","",21,null],[11,"from_iter","","",21,{"inputs":[{"name":"i"}],"output":{"name":"point5"}}],[11,"fmt","","",22,null],[11,"hash","","",22,null],[11,"clone","","",22,null],[11,"decode","","",22,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"origin","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"is_origin","","",22,null],[11,"sub","","",22,null],[11,"add","","",22,null],[11,"add_assign","","",22,null],[11,"sub","","",22,null],[11,"sub_assign","","",22,null],[11,"to_vector","","Converts this point to its associated vector.",22,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",22,null],[11,"to_vector","","",22,null],[11,"as_vector","","",22,null],[11,"set_coords","","",22,null],[11,"fmt","","",22,null],[11,"neg","","",22,null],[11,"repeat","","",22,{"inputs":[{"name":"n"}],"output":{"name":"point6"}}],[11,"rand","","",22,{"inputs":[{"name":"r"}],"output":{"name":"point6"}}],[11,"add_assign","","",22,null],[11,"add","","",22,null],[11,"add","","",22,null],[11,"sub_assign","","",22,null],[11,"sub","","",22,null],[11,"sub","","",22,null],[11,"mul_assign","","",22,null],[11,"mul","","",22,null],[11,"mul","","",22,null],[11,"div_assign","","",22,null],[11,"div","","",22,null],[11,"div","","",22,null],[11,"new","","Creation from component values.",22,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point6"}}],[11,"inf","","",22,null],[11,"sup","","",22,null],[11,"partial_cmp","","",22,null],[11,"partial_lt","","",22,null],[11,"partial_le","","",22,null],[11,"partial_gt","","",22,null],[11,"partial_ge","","",22,null],[11,"from","","",22,{"inputs":[{"name":"point6"}],"output":{"name":"point6"}}],[11,"approx_epsilon","","",22,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",22,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",22,null],[11,"approx_eq_eps","","",22,null],[11,"approx_eq_ulps","","",22,null],[11,"at_fast","","Unsafe read access to a vector element by index.",22,null],[11,"set_fast","","Unsafe write access to a vector element by index.",22,null],[11,"axpy","","",22,null],[11,"max_value","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"min_value","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"len","","The dimension of this entity.",22,null],[11,"as_ref","","",22,null],[11,"as_mut","","",22,null],[11,"from","","",22,null],[11,"dimension","","",22,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",22,null],[11,"swap","","",22,null],[11,"unsafe_at","","",22,null],[11,"unsafe_set","","",22,null],[11,"index","","",22,null],[11,"index_mut","","",22,null],[11,"iter","","",22,null],[11,"iter_mut","","",22,null],[11,"from_iter","","",22,{"inputs":[{"name":"i"}],"output":{"name":"point6"}}],[11,"fmt","","",23,null],[11,"hash","","",23,null],[11,"clone","","",23,null],[11,"decode","","",23,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",23,null],[11,"scalar","","The scalar part `w` of this quaternion.",23,null],[11,"conjugate","","Compute the conjugate of this quaternion.",23,null],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",23,null],[11,"from_parts","","Creates a new quaternion from its scalar and vector parts.",23,{"inputs":[{"name":"n"},{"name":"vector3"}],"output":{"name":"quaternion"}}],[11,"from_polar_decomposition","","Creates a new quaternion from its polar decomposition.",23,{"inputs":[{"name":"n"},{"name":"n"},{"name":"unit"}],"output":{"name":"quaternion"}}],[11,"polar_decomposition","","The polar decomposition of this quaternion.",23,null],[11,"inverse","","",23,null],[11,"inverse_mut","","",23,null],[11,"norm_squared","","",23,null],[11,"normalize","","",23,null],[11,"normalize_mut","","",23,null],[11,"try_normalize","","",23,null],[11,"try_normalize_mut","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"exp","","Compute the exponential of a quaternion.",23,null],[11,"ln","","Compute the natural logarithm of a quaternion.",23,null],[11,"powf","","Raise the quaternion to a given floating power.",23,null],[11,"one","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,null],[11,"mul","","",13,null],[11,"mul","","",19,null],[11,"mul_assign","","",13,null],[11,"mul_assign","","",19,null],[11,"zero","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"is_zero","","",23,null],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"i","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"j","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"k","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"add","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"sub","","",23,null],[11,"from_iter","","",23,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"neg","","",23,null],[11,"repeat","","",23,{"inputs":[{"name":"n"}],"output":{"name":"quaternion"}}],[11,"rand","","",23,{"inputs":[{"name":"r"}],"output":{"name":"quaternion"}}],[11,"add_assign","","",23,null],[11,"add","","",23,null],[11,"add","","",23,null],[11,"sub_assign","","",23,null],[11,"sub","","",23,null],[11,"sub","","",23,null],[11,"mul_assign","","",23,null],[11,"mul","","",23,null],[11,"mul","","",23,null],[11,"div_assign","","",23,null],[11,"div","","",23,null],[11,"div","","",23,null],[11,"new","","Creation from component values.",23,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"quaternion"}}],[11,"inf","","",23,null],[11,"sup","","",23,null],[11,"partial_cmp","","",23,null],[11,"partial_lt","","",23,null],[11,"partial_le","","",23,null],[11,"partial_gt","","",23,null],[11,"partial_ge","","",23,null],[11,"from","","",23,{"inputs":[{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"approx_epsilon","","",23,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",23,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",23,null],[11,"approx_eq_eps","","",23,null],[11,"approx_eq_ulps","","",23,null],[11,"at_fast","","Unsafe read access to a vector element by index.",23,null],[11,"set_fast","","Unsafe write access to a vector element by index.",23,null],[11,"axpy","","",23,null],[11,"max_value","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"min_value","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"len","","The dimension of this entity.",23,null],[11,"as_ref","","",23,null],[11,"as_mut","","",23,null],[11,"from","","",23,null],[11,"dimension","","",23,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",23,null],[11,"swap","","",23,null],[11,"unsafe_at","","",23,null],[11,"unsafe_set","","",23,null],[11,"index","","",23,null],[11,"index_mut","","",23,null],[11,"iter","","",23,null],[11,"iter_mut","","",23,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",38,null],[11,"eq","","",38,null],[11,"new","","Creates a new identity matrix.",38,{"inputs":[],"output":{"name":"identity"}}],[11,"fmt","","",38,null],[11,"fmt","","",5,null],[11,"hash","","",5,null],[11,"clone","","",5,null],[11,"decode","","",5,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"new_identity","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"matrix1"}}],[11,"new","","",5,{"inputs":[{"name":"n"}],"output":{"name":"matrix1"}}],[11,"as_ref","","",5,null],[11,"as_mut","","",5,null],[11,"from","","",5,null],[11,"at_fast","","",5,null],[11,"set_fast","","",5,null],[11,"from","","",5,{"inputs":[{"name":"matrix1"}],"output":{"name":"matrix1"}}],[11,"iter","","",5,null],[11,"iter_mut","","",5,null],[11,"shape","","",5,null],[11,"swap","","",5,null],[11,"unsafe_at","","",5,null],[11,"unsafe_set","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"ncols","","",5,null],[11,"set_column","","",5,null],[11,"column","","",5,null],[11,"column_slice","","",5,null],[11,"nrows","","",5,null],[11,"set_row","","",5,null],[11,"row","","",5,null],[11,"row_slice","","",5,null],[11,"transpose","","",5,null],[11,"transpose_mut","","",5,null],[11,"approx_epsilon","","",5,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",5,null],[11,"approx_eq_ulps","","",5,null],[11,"mean","","",5,null],[11,"from_diagonal","","",5,{"inputs":[{"name":"vector1"}],"output":{"name":"matrix1"}}],[11,"diagonal","","",5,null],[11,"outer","","",11,null],[11,"repeat","","",5,{"inputs":[{"name":"n"}],"output":{"name":"matrix1"}}],[11,"abs","","",5,{"inputs":[{"name":"matrix1"}],"output":{"name":"matrix1"}}],[11,"zero","","",5,{"inputs":[],"output":{"name":"matrix1"}}],[11,"is_zero","","",5,null],[11,"add","","",5,null],[11,"add_assign","","",5,null],[11,"add","","",5,null],[11,"sub","","",5,null],[11,"sub_assign","","",5,null],[11,"sub","","",5,null],[11,"add_assign","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub_assign","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"div_assign","","",5,null],[11,"div","","",5,null],[11,"div","","",5,null],[11,"mul_assign","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"one","","",5,{"inputs":[],"output":{"name":"matrix1"}}],[11,"dimension","","",5,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",5,null],[11,"mul_assign","","",5,null],[11,"mul","","",5,null],[11,"mul","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",5,null],[11,"mul","","",17,null],[11,"mul_assign","","",17,null],[11,"to_homogeneous","","",5,null],[11,"from","","",5,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix1"}}],[11,"eigen_qr","","",5,null],[11,"rand","","",5,{"inputs":[{"name":"r"}],"output":{"name":"matrix1"}}],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"clone","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"new_identity","","",6,{"inputs":[{"name":"usize"}],"output":{"name":"matrix2"}}],[11,"new","","",6,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix2"}}],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"from","","",6,null],[11,"at_fast","","",6,null],[11,"set_fast","","",6,null],[11,"from","","",6,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"iter","","",6,null],[11,"iter_mut","","",6,null],[11,"shape","","",6,null],[11,"swap","","",6,null],[11,"unsafe_at","","",6,null],[11,"unsafe_set","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"ncols","","",6,null],[11,"set_column","","",6,null],[11,"column","","",6,null],[11,"column_slice","","",6,null],[11,"nrows","","",6,null],[11,"set_row","","",6,null],[11,"row","","",6,null],[11,"row_slice","","",6,null],[11,"transpose","","",6,null],[11,"transpose_mut","","",6,null],[11,"approx_epsilon","","",6,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",6,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",6,null],[11,"approx_eq_ulps","","",6,null],[11,"mean","","",6,null],[11,"from_diagonal","","",6,{"inputs":[{"name":"vector2"}],"output":{"name":"matrix2"}}],[11,"diagonal","","",6,null],[11,"outer","","",12,null],[11,"repeat","","",6,{"inputs":[{"name":"n"}],"output":{"name":"matrix2"}}],[11,"abs","","",6,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"zero","","",6,{"inputs":[],"output":{"name":"matrix2"}}],[11,"is_zero","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"sub","","",6,null],[11,"add_assign","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"sub_assign","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"div_assign","","",6,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"mul_assign","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"one","","",6,{"inputs":[],"output":{"name":"matrix2"}}],[11,"dimension","","",6,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"to_homogeneous","","",6,null],[11,"from","","",6,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix2"}}],[11,"eigen_qr","","",6,null],[11,"rand","","",6,{"inputs":[{"name":"r"}],"output":{"name":"matrix2"}}],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"hash","","",7,null],[11,"clone","","",7,null],[11,"decode","","",7,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"new_identity","","",7,{"inputs":[{"name":"usize"}],"output":{"name":"matrix3"}}],[11,"new","","",7,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix3"}}],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"at_fast","","",7,null],[11,"set_fast","","",7,null],[11,"from","","",7,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"iter","","",7,null],[11,"iter_mut","","",7,null],[11,"shape","","",7,null],[11,"swap","","",7,null],[11,"unsafe_at","","",7,null],[11,"unsafe_set","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"ncols","","",7,null],[11,"set_column","","",7,null],[11,"column","","",7,null],[11,"column_slice","","",7,null],[11,"nrows","","",7,null],[11,"set_row","","",7,null],[11,"row","","",7,null],[11,"row_slice","","",7,null],[11,"transpose","","",7,null],[11,"transpose_mut","","",7,null],[11,"approx_epsilon","","",7,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",7,null],[11,"approx_eq_ulps","","",7,null],[11,"mean","","",7,null],[11,"from_diagonal","","",7,{"inputs":[{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"diagonal","","",7,null],[11,"outer","","",13,null],[11,"repeat","","",7,{"inputs":[{"name":"n"}],"output":{"name":"matrix3"}}],[11,"abs","","",7,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"zero","","",7,{"inputs":[],"output":{"name":"matrix3"}}],[11,"is_zero","","",7,null],[11,"add","","",7,null],[11,"add_assign","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub_assign","","",7,null],[11,"sub","","",7,null],[11,"add_assign","","",7,null],[11,"add","","",7,null],[11,"add","","",7,null],[11,"sub_assign","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"div_assign","","",7,null],[11,"div","","",7,null],[11,"div","","",7,null],[11,"mul_assign","","",7,null],[11,"mul","","",7,null],[11,"mul","","",7,null],[11,"one","","",7,{"inputs":[],"output":{"name":"matrix3"}}],[11,"dimension","","",7,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"to_homogeneous","","",7,null],[11,"from","","",7,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix3"}}],[11,"eigen_qr","","",7,null],[11,"rand","","",7,{"inputs":[{"name":"r"}],"output":{"name":"matrix3"}}],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"hash","","",8,null],[11,"clone","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"new_identity","","",8,{"inputs":[{"name":"usize"}],"output":{"name":"matrix4"}}],[11,"new","","",8,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix4"}}],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"from","","",8,null],[11,"at_fast","","",8,null],[11,"set_fast","","",8,null],[11,"from","","",8,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"iter","","",8,null],[11,"iter_mut","","",8,null],[11,"shape","","",8,null],[11,"swap","","",8,null],[11,"unsafe_at","","",8,null],[11,"unsafe_set","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"ncols","","",8,null],[11,"set_column","","",8,null],[11,"column","","",8,null],[11,"column_slice","","",8,null],[11,"nrows","","",8,null],[11,"set_row","","",8,null],[11,"row","","",8,null],[11,"row_slice","","",8,null],[11,"transpose","","",8,null],[11,"transpose_mut","","",8,null],[11,"approx_epsilon","","",8,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",8,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",8,null],[11,"approx_eq_ulps","","",8,null],[11,"mean","","",8,null],[11,"from_diagonal","","",8,{"inputs":[{"name":"vector4"}],"output":{"name":"matrix4"}}],[11,"diagonal","","",8,null],[11,"outer","","",14,null],[11,"repeat","","",8,{"inputs":[{"name":"n"}],"output":{"name":"matrix4"}}],[11,"abs","","",8,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"zero","","",8,{"inputs":[],"output":{"name":"matrix4"}}],[11,"is_zero","","",8,null],[11,"add","","",8,null],[11,"add_assign","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub_assign","","",8,null],[11,"sub","","",8,null],[11,"add_assign","","",8,null],[11,"add","","",8,null],[11,"add","","",8,null],[11,"sub_assign","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"div_assign","","",8,null],[11,"div","","",8,null],[11,"div","","",8,null],[11,"mul_assign","","",8,null],[11,"mul","","",8,null],[11,"mul","","",8,null],[11,"one","","",8,{"inputs":[],"output":{"name":"matrix4"}}],[11,"dimension","","",8,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",8,null],[11,"mul_assign","","",8,null],[11,"mul","","",8,null],[11,"mul","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",8,null],[11,"mul","","",20,null],[11,"mul_assign","","",20,null],[11,"inverse","","",8,null],[11,"inverse_mut","","",8,null],[11,"to_homogeneous","","",8,null],[11,"from","","",8,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix4"}}],[11,"eigen_qr","","",8,null],[11,"rand","","",8,{"inputs":[{"name":"r"}],"output":{"name":"matrix4"}}],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"hash","","",9,null],[11,"clone","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"new_identity","","",9,{"inputs":[{"name":"usize"}],"output":{"name":"matrix5"}}],[11,"new","","",9,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix5"}}],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"from","","",9,null],[11,"at_fast","","",9,null],[11,"set_fast","","",9,null],[11,"from","","",9,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix5"}}],[11,"iter","","",9,null],[11,"iter_mut","","",9,null],[11,"shape","","",9,null],[11,"swap","","",9,null],[11,"unsafe_at","","",9,null],[11,"unsafe_set","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"ncols","","",9,null],[11,"set_column","","",9,null],[11,"column","","",9,null],[11,"column_slice","","",9,null],[11,"nrows","","",9,null],[11,"set_row","","",9,null],[11,"row","","",9,null],[11,"row_slice","","",9,null],[11,"transpose","","",9,null],[11,"transpose_mut","","",9,null],[11,"approx_epsilon","","",9,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",9,null],[11,"approx_eq_ulps","","",9,null],[11,"mean","","",9,null],[11,"from_diagonal","","",9,{"inputs":[{"name":"vector5"}],"output":{"name":"matrix5"}}],[11,"diagonal","","",9,null],[11,"outer","","",15,null],[11,"repeat","","",9,{"inputs":[{"name":"n"}],"output":{"name":"matrix5"}}],[11,"abs","","",9,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix5"}}],[11,"zero","","",9,{"inputs":[],"output":{"name":"matrix5"}}],[11,"is_zero","","",9,null],[11,"add","","",9,null],[11,"add_assign","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub_assign","","",9,null],[11,"sub","","",9,null],[11,"add_assign","","",9,null],[11,"add","","",9,null],[11,"add","","",9,null],[11,"sub_assign","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"div_assign","","",9,null],[11,"div","","",9,null],[11,"div","","",9,null],[11,"mul_assign","","",9,null],[11,"mul","","",9,null],[11,"mul","","",9,null],[11,"one","","",9,{"inputs":[],"output":{"name":"matrix5"}}],[11,"dimension","","",9,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",9,null],[11,"mul_assign","","",9,null],[11,"mul","","",9,null],[11,"mul","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",9,null],[11,"mul","","",21,null],[11,"mul_assign","","",21,null],[11,"inverse","","",9,null],[11,"inverse_mut","","",9,null],[11,"to_homogeneous","","",9,null],[11,"from","","",9,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix5"}}],[11,"eigen_qr","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"matrix5"}}],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"hash","","",10,null],[11,"clone","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"new_identity","","",10,{"inputs":[{"name":"usize"}],"output":{"name":"matrix6"}}],[11,"new","","",10,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix6"}}],[11,"as_ref","","",10,null],[11,"as_mut","","",10,null],[11,"from","","",10,null],[11,"at_fast","","",10,null],[11,"set_fast","","",10,null],[11,"from","","",10,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix6"}}],[11,"iter","","",10,null],[11,"iter_mut","","",10,null],[11,"shape","","",10,null],[11,"swap","","",10,null],[11,"unsafe_at","","",10,null],[11,"unsafe_set","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"ncols","","",10,null],[11,"set_column","","",10,null],[11,"column","","",10,null],[11,"column_slice","","",10,null],[11,"nrows","","",10,null],[11,"set_row","","",10,null],[11,"row","","",10,null],[11,"row_slice","","",10,null],[11,"transpose","","",10,null],[11,"transpose_mut","","",10,null],[11,"approx_epsilon","","",10,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",10,null],[11,"approx_eq_ulps","","",10,null],[11,"mean","","",10,null],[11,"from_diagonal","","",10,{"inputs":[{"name":"vector6"}],"output":{"name":"matrix6"}}],[11,"diagonal","","",10,null],[11,"outer","","",16,null],[11,"repeat","","",10,{"inputs":[{"name":"n"}],"output":{"name":"matrix6"}}],[11,"abs","","",10,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix6"}}],[11,"zero","","",10,{"inputs":[],"output":{"name":"matrix6"}}],[11,"is_zero","","",10,null],[11,"add","","",10,null],[11,"add_assign","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub_assign","","",10,null],[11,"sub","","",10,null],[11,"add_assign","","",10,null],[11,"add","","",10,null],[11,"add","","",10,null],[11,"sub_assign","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"div_assign","","",10,null],[11,"div","","",10,null],[11,"div","","",10,null],[11,"mul_assign","","",10,null],[11,"mul","","",10,null],[11,"mul","","",10,null],[11,"one","","",10,{"inputs":[],"output":{"name":"matrix6"}}],[11,"dimension","","",10,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",10,null],[11,"mul_assign","","",10,null],[11,"mul","","",10,null],[11,"mul","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",10,null],[11,"mul","","",22,null],[11,"mul_assign","","",22,null],[11,"inverse","","",10,null],[11,"inverse_mut","","",10,null],[11,"eigen_qr","","",10,null],[11,"rand","","",10,{"inputs":[{"name":"r"}],"output":{"name":"matrix6"}}],[11,"fmt","","",10,null],[11,"hash","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"decode","","",39,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",39,{"inputs":[{"name":"vector1"}],"output":{"name":"rotation2"}}],[11,"rotation","","",39,null],[11,"inverse_rotation","","",39,null],[11,"append_rotation_mut","","",39,null],[11,"append_rotation","","",39,null],[11,"prepend_rotation_mut","","",39,null],[11,"prepend_rotation","","",39,null],[11,"set_rotation","","",39,null],[11,"angle_to","","",39,null],[11,"rotation_to","","",39,null],[11,"rand","","",39,{"inputs":[{"name":"r"}],"output":{"name":"rotation2"}}],[11,"absolute_rotate","","",39,null],[11,"hash","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"decode","","",40,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",40,{"inputs":[{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"from_matrix_unchecked","","Builds a rotation matrix from an orthogonal matrix.",40,{"inputs":[{"name":"matrix3"}],"output":{"name":"rotation3"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",40,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"rotation3"}}],[11,"new_observer_frame","","Creates a rotation that corresponds to the local frame of an observer standing at the\norigin and looking toward `dir`.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"rotation","","",40,null],[11,"inverse_rotation","","",40,null],[11,"append_rotation_mut","","",40,null],[11,"append_rotation","","",40,null],[11,"prepend_rotation_mut","","",40,null],[11,"prepend_rotation","","",40,null],[11,"set_rotation","","",40,null],[11,"angle_to","","",40,null],[11,"rotation_to","","",40,null],[11,"rand","","",40,{"inputs":[{"name":"r"}],"output":{"name":"rotation3"}}],[11,"absolute_rotate","","",40,null],[11,"submatrix","","This rotation&#39;s underlying matrix.",39,null],[11,"rotate","","",39,null],[11,"inverse_rotate","","",39,null],[11,"rotate","","",39,null],[11,"inverse_rotate","","",39,null],[11,"transform","","",39,null],[11,"inverse_transform","","",39,null],[11,"transform","","",39,null],[11,"inverse_transform","","",39,null],[11,"to_rotation_matrix","","",39,null],[11,"one","","",39,{"inputs":[],"output":{"name":"rotation2"}}],[11,"new_identity","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"rotation2"}}],[11,"from_diagonal","","",39,{"inputs":[{"name":"vector2"}],"output":{"name":"rotation2"}}],[11,"diagonal","","",39,null],[11,"mul","","",39,null],[11,"mul_assign","","",39,null],[11,"mul","","",39,null],[11,"mul","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",39,null],[11,"mul","","",18,null],[11,"mul_assign","","",18,null],[11,"inverse_mut","","",39,null],[11,"inverse","","",39,null],[11,"transpose","","",39,null],[11,"transpose_mut","","",39,null],[11,"nrows","","",39,null],[11,"row","","",39,null],[11,"set_row","","",39,null],[11,"ncols","","",39,null],[11,"column","","",39,null],[11,"set_column","","",39,null],[11,"index","","",39,null],[11,"to_homogeneous","","",39,null],[11,"approx_epsilon","","",39,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",39,null],[11,"approx_eq_eps","","",39,null],[11,"approx_eq_ulps","","",39,null],[11,"abs","","",39,{"inputs":[{"name":"rotation2"}],"output":{"name":"matrix2"}}],[11,"fmt","","",39,null],[11,"dimension","","",39,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"submatrix","","This rotation&#39;s underlying matrix.",40,null],[11,"rotate","","",40,null],[11,"inverse_rotate","","",40,null],[11,"rotate","","",40,null],[11,"inverse_rotate","","",40,null],[11,"transform","","",40,null],[11,"inverse_transform","","",40,null],[11,"transform","","",40,null],[11,"inverse_transform","","",40,null],[11,"to_rotation_matrix","","",40,null],[11,"one","","",40,{"inputs":[],"output":{"name":"rotation3"}}],[11,"new_identity","","",40,{"inputs":[{"name":"usize"}],"output":{"name":"rotation3"}}],[11,"from_diagonal","","",40,{"inputs":[{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"diagonal","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"mul","","",40,null],[11,"mul","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",40,null],[11,"mul","","",19,null],[11,"mul_assign","","",19,null],[11,"inverse_mut","","",40,null],[11,"inverse","","",40,null],[11,"transpose","","",40,null],[11,"transpose_mut","","",40,null],[11,"nrows","","",40,null],[11,"row","","",40,null],[11,"set_row","","",40,null],[11,"ncols","","",40,null],[11,"column","","",40,null],[11,"set_column","","",40,null],[11,"index","","",40,null],[11,"to_homogeneous","","",40,null],[11,"approx_epsilon","","",40,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",40,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",40,null],[11,"approx_eq_eps","","",40,null],[11,"approx_eq_ulps","","",40,null],[11,"abs","","",40,{"inputs":[{"name":"rotation3"}],"output":{"name":"matrix3"}}],[11,"fmt","","",40,null],[11,"dimension","","",40,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the\npoint `eye` and looking toward `target`.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"new","","Creates a new isometry from an axis-angle rotation, and a vector.",1,{"inputs":[{"name":"vector2"},{"name":"vector1"}],"output":{"name":"isometry2"}}],[11,"from_rotation_matrix","","Creates a new isometry from a rotation matrix and a vector.",1,{"inputs":[{"name":"vector2"},{"name":"rotation2"}],"output":{"name":"isometry2"}}],[11,"to_rotation_matrix","","",1,null],[11,"one","","",1,{"inputs":[],"output":{"name":"isometry2"}}],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"mul","","",1,null],[11,"mul","","",39,null],[11,"mul_assign","","",1,null],[11,"mul","","",1,null],[11,"mul","","",1,null],[11,"translation","","",1,null],[11,"inverse_translation","","",1,null],[11,"append_translation_mut","","",1,null],[11,"append_translation","","",1,null],[11,"prepend_translation_mut","","",1,null],[11,"prepend_translation","","",1,null],[11,"set_translation","","",1,null],[11,"translate","","",1,null],[11,"inverse_translate","","",1,null],[11,"rotation","","",1,null],[11,"inverse_rotation","","",1,null],[11,"append_rotation_mut","","",1,null],[11,"append_rotation","","",1,null],[11,"prepend_rotation_mut","","",1,null],[11,"prepend_rotation","","",1,null],[11,"set_rotation","","",1,null],[11,"rotate","","",1,null],[11,"inverse_rotate","","",1,null],[11,"transformation","","",1,null],[11,"inverse_transformation","","",1,null],[11,"append_transformation_mut","","",1,null],[11,"append_transformation","","",1,null],[11,"prepend_transformation_mut","","",1,null],[11,"prepend_transformation","","",1,null],[11,"set_transformation","","",1,null],[11,"transform","","",1,null],[11,"inverse_transform","","",1,null],[11,"inverse_mut","","",1,null],[11,"inverse","","",1,null],[11,"to_homogeneous","","",1,null],[11,"approx_epsilon","","",1,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",1,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",1,null],[11,"approx_eq_ulps","","",1,null],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"isometry2"}}],[11,"absolute_rotate","","",1,null],[11,"fmt","","",1,null],[11,"dimension","","",1,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"new","","Creates a new isometry from an axis-angle rotation, and a vector.",2,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"from_rotation_matrix","","Creates a new isometry from a rotation matrix and a vector.",2,{"inputs":[{"name":"vector3"},{"name":"rotation3"}],"output":{"name":"isometry3"}}],[11,"to_rotation_matrix","","",2,null],[11,"one","","",2,{"inputs":[],"output":{"name":"isometry3"}}],[11,"mul","","",2,null],[11,"mul_assign","","",2,null],[11,"mul","","",2,null],[11,"mul","","",40,null],[11,"mul_assign","","",2,null],[11,"mul","","",2,null],[11,"mul","","",2,null],[11,"translation","","",2,null],[11,"inverse_translation","","",2,null],[11,"append_translation_mut","","",2,null],[11,"append_translation","","",2,null],[11,"prepend_translation_mut","","",2,null],[11,"prepend_translation","","",2,null],[11,"set_translation","","",2,null],[11,"translate","","",2,null],[11,"inverse_translate","","",2,null],[11,"rotation","","",2,null],[11,"inverse_rotation","","",2,null],[11,"append_rotation_mut","","",2,null],[11,"append_rotation","","",2,null],[11,"prepend_rotation_mut","","",2,null],[11,"prepend_rotation","","",2,null],[11,"set_rotation","","",2,null],[11,"rotate","","",2,null],[11,"inverse_rotate","","",2,null],[11,"transformation","","",2,null],[11,"inverse_transformation","","",2,null],[11,"append_transformation_mut","","",2,null],[11,"append_transformation","","",2,null],[11,"prepend_transformation_mut","","",2,null],[11,"prepend_transformation","","",2,null],[11,"set_transformation","","",2,null],[11,"transform","","",2,null],[11,"inverse_transform","","",2,null],[11,"inverse_mut","","",2,null],[11,"inverse","","",2,null],[11,"to_homogeneous","","",2,null],[11,"approx_epsilon","","",2,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",2,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",2,null],[11,"approx_eq_ulps","","",2,null],[11,"rand","","",2,{"inputs":[{"name":"r"}],"output":{"name":"isometry3"}}],[11,"absolute_rotate","","",2,null],[11,"fmt","","",2,null],[11,"dimension","","",2,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"decode","","",3,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"decode","","",4,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"new","","Creates a new similarity transformation from a vector, an axis-angle rotation, and a scale factor.",3,{"inputs":[{"name":"vector2"},{"name":"vector1"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"from_rotation_matrix","","Creates a new similarity transformation from a rotation matrix, a vector, and a scale factor.",3,{"inputs":[{"name":"vector2"},{"name":"rotation2"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"from_isometry","","Creates a new similarity transformation from an isometry and a scale factor.",3,{"inputs":[{"name":"isometry2"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"scale","","The scale factor of this similarity transformation.",3,null],[11,"inverse_scale","","The inverse scale factor of this similarity transformation.",3,null],[11,"append_scale_mut","","Appends in-place a scale to this similarity transformation.",3,null],[11,"append_scale","","Appends a scale to this similarity transformation.",3,null],[11,"prepend_scale_mut","","Prepends in-place a scale to this similarity transformation.",3,null],[11,"prepend_scale","","Prepends a scale to this similarity transformation.",3,null],[11,"set_scale","","Sets the scale of this similarity transformation.",3,null],[11,"one","","",3,{"inputs":[],"output":{"name":"similarity2"}}],[11,"transformation","","",3,null],[11,"inverse_transformation","","",3,null],[11,"append_transformation_mut","","",3,null],[11,"append_transformation","","",3,null],[11,"prepend_transformation_mut","","",3,null],[11,"prepend_transformation","","",3,null],[11,"set_transformation","","",3,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",1,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",39,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"transform","","",3,null],[11,"inverse_transform","","",3,null],[11,"inverse_mut","","",3,null],[11,"inverse","","",3,null],[11,"to_homogeneous","","",3,null],[11,"approx_epsilon","","",3,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",3,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",3,null],[11,"approx_eq_ulps","","",3,null],[11,"rand","","",3,{"inputs":[{"name":"r"}],"output":{"name":"similarity2"}}],[11,"fmt","","",3,null],[11,"dimension","","",3,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"new","","Creates a new similarity transformation from a vector, an axis-angle rotation, and a scale factor.",4,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"from_rotation_matrix","","Creates a new similarity transformation from a rotation matrix, a vector, and a scale factor.",4,{"inputs":[{"name":"vector3"},{"name":"rotation3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"from_isometry","","Creates a new similarity transformation from an isometry and a scale factor.",4,{"inputs":[{"name":"isometry3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"scale","","The scale factor of this similarity transformation.",4,null],[11,"inverse_scale","","The inverse scale factor of this similarity transformation.",4,null],[11,"append_scale_mut","","Appends in-place a scale to this similarity transformation.",4,null],[11,"append_scale","","Appends a scale to this similarity transformation.",4,null],[11,"prepend_scale_mut","","Prepends in-place a scale to this similarity transformation.",4,null],[11,"prepend_scale","","Prepends a scale to this similarity transformation.",4,null],[11,"set_scale","","Sets the scale of this similarity transformation.",4,null],[11,"one","","",4,{"inputs":[],"output":{"name":"similarity3"}}],[11,"transformation","","",4,null],[11,"inverse_transformation","","",4,null],[11,"append_transformation_mut","","",4,null],[11,"append_transformation","","",4,null],[11,"prepend_transformation_mut","","",4,null],[11,"prepend_transformation","","",4,null],[11,"set_transformation","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",2,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",40,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"transform","","",4,null],[11,"inverse_transform","","",4,null],[11,"inverse_mut","","",4,null],[11,"inverse","","",4,null],[11,"to_homogeneous","","",4,null],[11,"approx_epsilon","","",4,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",4,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",4,null],[11,"approx_eq_ulps","","",4,null],[11,"rand","","",4,{"inputs":[{"name":"r"}],"output":{"name":"similarity3"}}],[11,"fmt","","",4,null],[11,"dimension","","",4,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"decode","","",41,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"decode","","",42,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"new","","Creates a new 3D perspective projection.",41,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"perspective3"}}],[11,"to_matrix","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",41,null],[11,"to_perspective_matrix","","Build a `PerspectiveMatrix3` representing this projection.",41,null],[11,"aspect","","Gets the `width / height` aspect ratio.",41,null],[11,"fovy","","Gets the y field of view of the view frustrum.",41,null],[11,"znear","","Gets the near plane offset of the view frustrum.",41,null],[11,"zfar","","Gets the far plane offset of the view frustrum.",41,null],[11,"set_aspect","","Sets the `width / height` aspect ratio of the view frustrum.",41,null],[11,"set_fovy","","Sets the y field of view of the view frustrum.",41,null],[11,"set_znear","","Sets the near plane offset of the view frustrum.",41,null],[11,"set_zfar","","Sets the far plane offset of the view frustrum.",41,null],[11,"project_point","","Projects a point.",41,null],[11,"project_vector","","Projects a vector.",41,null],[11,"new","","Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.",42,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"perspectivematrix3"}}],[11,"from_matrix_unchecked","","Creates a new perspective projection matrix from a 4D matrix.",42,{"inputs":[{"name":"matrix4"}],"output":{"name":"perspectivematrix3"}}],[11,"as_matrix","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",42,null],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",42,null],[11,"fovy","","Gets the y field of view of the view frustrum.",42,null],[11,"znear","","Gets the near plane offset of the view frustrum.",42,null],[11,"zfar","","Gets the far plane offset of the view frustrum.",42,null],[11,"set_aspect","","Updates this projection matrix with a new `width / height` aspect ratio of the view\nfrustrum.",42,null],[11,"set_fovy","","Updates this projection with a new y field of view of the view frustrum.",42,null],[11,"set_znear","","Updates this projection matrix with a new near plane offset of the view frustrum.",42,null],[11,"set_zfar","","Updates this projection matrix with a new far plane offset of the view frustrum.",42,null],[11,"set_znear_and_zfar","","Updates this projection matrix with new near and far plane offsets of the view frustrum.",42,null],[11,"project_point","","Projects a point.",42,null],[11,"project_vector","","Projects a vector.",42,null],[11,"to_matrix","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",42,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"decode","","",43,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"decode","","",44,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"new","","Creates a new 3D orthographic projection.",43,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographic3"}}],[11,"to_matrix","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",43,null],[11,"to_orthographic_matrix","","Build a `OrthographicMatrix3` representing this projection.",43,null],[11,"left","","The smallest x-coordinate of the view cuboid.",43,null],[11,"right","","The largest x-coordinate of the view cuboid.",43,null],[11,"bottom","","The smallest y-coordinate of the view cuboid.",43,null],[11,"top","","The largest y-coordinate of the view cuboid.",43,null],[11,"znear","","The near plane offset of the view cuboid.",43,null],[11,"zfar","","The far plane offset of the view cuboid.",43,null],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",43,null],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",43,null],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",43,null],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",43,null],[11,"set_znear","","Sets the near plane offset of the view cuboid.",43,null],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",43,null],[11,"project_point","","Projects a point.",43,null],[11,"project_vector","","Projects a vector.",43,null],[11,"new","","Creates a new orthographic projection matrix.",44,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographicmatrix3"}}],[11,"from_fov","","Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.",44,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographicmatrix3"}}],[11,"from_matrix_unchecked","","Creates a new orthographic matrix from a 4D matrix.",44,{"inputs":[{"name":"matrix4"}],"output":{"name":"orthographicmatrix3"}}],[11,"as_matrix","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",44,null],[11,"left","","The smallest x-coordinate of the view cuboid.",44,null],[11,"right","","The largest x-coordinate of the view cuboid.",44,null],[11,"bottom","","The smallest y-coordinate of the view cuboid.",44,null],[11,"top","","The largest y-coordinate of the view cuboid.",44,null],[11,"znear","","The near plane offset of the view cuboid.",44,null],[11,"zfar","","The far plane offset of the view cuboid.",44,null],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",44,null],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",44,null],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",44,null],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",44,null],[11,"set_znear","","Sets the near plane offset of the view cuboid.",44,null],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",44,null],[11,"set_left_and_right","","Sets the view cuboid coordinates along the `x` axis.",44,null],[11,"set_bottom_and_top","","Sets the view cuboid coordinates along the `y` axis.",44,null],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",44,null],[11,"project_point","","Projects a point.",44,null],[11,"project_vector","","Projects a vector.",44,null],[11,"to_matrix","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",44,null],[11,"fmt","","",45,null],[11,"hash","","",45,null],[11,"clone","","",45,null],[11,"decode","","",45,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"new","","Normalize the given value and return it wrapped on a `Unit` structure.",45,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"try_new","","Attempts to normalize the given value and return it wrapped on a `Unit` structure.",45,{"inputs":[{"name":"t"},{"name":"normtype"}],"output":{"name":"option"}}],[11,"new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",45,null],[11,"try_new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",45,{"inputs":[{"name":"t"},{"name":"normtype"}],"output":{"name":"option"}}],[11,"renormalize","","Normalizes this value again. This is useful when repeated computations\nmight cause a drift in the norm because of float inaccuracies.",45,null],[11,"from_unit_value_unchecked","","Wraps the given value, assuming it is already normalized.",45,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"unwrap","","Retrieves the underlying value.",45,null],[11,"as_ref","","",45,null],[11,"one","","",38,{"inputs":[],"output":{"name":"identity"}}],[11,"inverse","","",38,null],[11,"inverse_mut","","",38,null],[11,"mul","","",38,null],[11,"transpose","","",38,null],[11,"transpose_mut","","",38,null],[11,"translate","","",38,null],[11,"inverse_translate","","",38,null],[11,"rotate","","",38,null],[11,"inverse_rotate","","",38,null],[11,"absolute_rotate","","",38,null],[11,"transform","","",38,null],[11,"inverse_transform","","",38,null],[11,"inverse","","",5,null],[11,"inverse_mut","","",5,null],[11,"inverse","","",6,null],[11,"inverse_mut","","",6,null],[11,"inverse","","",7,null],[11,"inverse_mut","","",7,null],[11,"determinant","","",5,null],[11,"determinant","","",6,null],[11,"determinant","","",7,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",13,null],[11,"mul","","",12,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",19,null],[11,"mul","","",18,null],[11,"mul","","",6,null],[11,"mul_assign","","",7,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",13,null],[11,"mul_assign","","",12,null],[11,"mul_assign","","",19,null],[11,"mul_assign","","",18,null],[11,"angle_to","","",12,null],[11,"rotation_to","","",12,null],[11,"angle_to","","",13,null],[11,"rotation_to","","",13,null],[11,"cross","","",12,null],[11,"cross_matrix","","",12,null],[11,"cross","","",13,null],[11,"cross_matrix","","",13,null],[11,"nrows","","",12,null],[11,"row","","",12,null],[11,"set_row","","",12,null],[11,"canonical_basis","","",11,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",11,{"inputs":[{"name":"vector1"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",11,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"canonical_basis","","",12,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",12,{"inputs":[{"name":"vector2"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",12,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"canonical_basis","","",13,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",13,{"inputs":[{"name":"vector3"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",13,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"sample","","",11,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",12,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",13,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",14,{"inputs":[{"name":"f"}],"output":null}],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",24,null],[11,"eq","","",24,null],[11,"is_eq","","Returns `true` if `self` is equal to `Equal`.",24,null],[11,"is_lt","","Returns `true` if `self` is equal to `Less`.",24,null],[11,"is_le","","Returns `true` if `self` is equal to `Less` or `Equal`.",24,null],[11,"is_gt","","Returns `true` if `self` is equal to `Greater`.",24,null],[11,"is_ge","","Returns `true` if `self` is equal to `Greater` or `Equal`.",24,null],[11,"is_not_comparable","","Returns `true` if `self` is equal to `NotComparable`.",24,null],[11,"from_ordering","","Creates a `PartialOrdering` from an `Ordering`.",24,{"inputs":[{"name":"ordering"}],"output":{"name":"partialordering"}}],[11,"to_ordering","","Converts this `PartialOrdering` to an `Ordering`.",24,null],[6,"UnitQuaternion","","A unit quaternions. May be used to represent a rotation.",null,null],[8,"Absolute","","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value.",null,null],[10,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",46,{"inputs":[{"name":"self"}],"output":{"name":"a"}}],[8,"AbsoluteRotate","","Composition of a rotation and an absolute value.",null,null],[10,"absolute_rotate","","This is the same as:",47,null],[8,"ApproxEq","","Trait for testing approximate equality",null,null],[10,"approx_epsilon","","Default epsilon for approximation.",48,{"inputs":[],"output":{"name":"eps"}}],[10,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",48,null],[10,"approx_ulps","","Default ULPs for approximation.",48,{"inputs":[],"output":{"name":"u32"}}],[10,"approx_eq_ulps","","Tests approximate equality using units in the last place (ULPs)",48,null],[11,"approx_eq","","Tests approximate equality.",48,null],[8,"Axpy","","Trait of objects implementing the `y = ax + y` operation.",null,null],[10,"axpy","","Adds $$a * x$$ to `self`.",49,null],[8,"Basis","","Traits of objects which can form a basis (typically vectors).",null,null],[10,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",50,{"inputs":[{"name":"f"}],"output":null}],[10,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",50,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[10,"canonical_basis_element","","Gets the ith element of the canonical basis.",50,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[8,"BaseFloat","","Basic floating-point number numeric trait.",null,null],[10,"pi","","Archimedes&#39; constant.",51,{"inputs":[],"output":{"name":"self"}}],[10,"two_pi","","2.0 * pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_2","","pi / 2.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_3","","pi / 3.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_4","","pi / 4.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_6","","pi / 6.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_8","","pi / 8.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_1_pi","","1.0 / pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_pi","","2.0 / pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_sqrt_pi","","2.0 / sqrt(pi).",51,{"inputs":[],"output":{"name":"self"}}],[10,"e","","Euler&#39;s number.",51,{"inputs":[],"output":{"name":"self"}}],[10,"log2_e","","log2(e).",51,{"inputs":[],"output":{"name":"self"}}],[10,"log10_e","","log10(e).",51,{"inputs":[],"output":{"name":"self"}}],[10,"ln_2","","ln(2.0).",51,{"inputs":[],"output":{"name":"self"}}],[10,"ln_10","","ln(10.0).",51,{"inputs":[],"output":{"name":"self"}}],[8,"BaseNum","","Basic integral numeric trait.",null,null],[8,"Bounded","","Types that have maximum and minimum value.",null,null],[10,"min_value","","The minimum value.",52,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","The maximum value.",52,{"inputs":[],"output":{"name":"self"}}],[8,"Cast","","Traits of objects which can be created from an object of type `T`.",null,null],[10,"from","","Converts an element of type `T` to an element of type `Self`.",53,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Column","","Trait to access columns of a matrix or vector.",null,null],[10,"ncols","","The number of column of this matrix or vector.",54,null],[10,"column","","Reads the `i`-th column of `self`.",54,null],[10,"set_column","","Writes the `i`-th column of `self`.",54,null],[8,"ColumnSlice","","Trait to access part of a column of a matrix",null,null],[10,"column_slice","","Returns a view to a slice of a column of a matrix.",55,null],[8,"RowSlice","","Trait to access part of a row of a matrix",null,null],[10,"row_slice","","Returns a view to a slice of a row of a matrix.",56,null],[8,"Covariance","","Trait for computing the covariance of a set of data.",null,null],[10,"covariance","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[8,"Cross","","Trait of elements having a cross product.",null,null],[16,"CrossProductType","","The cross product output.",58,null],[10,"cross","","Computes the cross product between two elements (usually vectors).",58,null],[8,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix.",null,null],[10,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",59,null],[8,"Determinant","","Trait of objects having a determinant. Typically used by square matrices.",null,null],[10,"determinant","","Returns the determinant of `m`.",60,null],[8,"Diagonal","","Trait to get the diagonal of square matrices.",null,null],[10,"from_diagonal","","Creates a new matrix with the given diagonal.",61,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[10,"diagonal","","The diagonal of this matrix.",61,null],[8,"Dimension","","Trait of objects having a spacial dimension known at compile time.",null,null],[10,"dimension","","The dimension of the object.",62,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[8,"Dot","","Traits of objects having a dot product.",null,null],[10,"dot","","Computes the dot (inner) product of two vectors.",63,null],[8,"EigenQR","","Trait for computing the eigenvector and eigenvalues of a square matrix usin the QR algorithm.",null,null],[10,"eigen_qr","","Computes the eigenvectors and eigenvalues of this matrix.",64,null],[8,"Eye","","Trait for constructing the identity matrix",null,null],[10,"new_identity","","Return the identity matrix of specified dimension",65,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[8,"FloatPoint","","Trait of points with components implementing the `BaseFloat` trait.",null,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[8,"FloatVector","","Trait of vector with components implementing the `BaseFloat` trait.",null,null],[8,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form.",null,null],[10,"from","","Builds an object from its homogeneous coordinate form.",67,{"inputs":[{"name":"u"}],"output":{"name":"self"}}],[8,"Indexable","","This is a workaround of current Rust limitations.",null,null],[10,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",68,null],[10,"unsafe_at","","Reads the `i`-th element of `self`.",68,null],[10,"unsafe_set","","Writes to the `i`-th element of `self`.",68,null],[8,"Inverse","","Trait of objects having an inverse. Typically used to implement matrix inverse.",null,null],[10,"inverse","","Returns the inverse of `m`.",69,null],[10,"inverse_mut","","In-place version of `inverse`.",69,null],[8,"Iterable","","This is a workaround of current Rust limitations.",null,null],[10,"iter","","Gets a vector-like read-only iterator.",70,null],[8,"IterableMut","","This is a workaround of current Rust limitations.",null,null],[10,"iter_mut","","Gets a vector-like read-write iterator.",71,null],[8,"Matrix","","Trait of matrices.",null,null],[8,"Mean","","Trait for computing the mean of a set of data.",null,null],[10,"mean","","Computes the mean of the observations stored by `v`.",72,null],[8,"Norm","","Traits of objects having an euclidian norm.",null,null],[16,"NormType","","The scalar type for the norm (i.e. the undelying field).",73,null],[11,"norm","","Computes the norm of `self`.",73,null],[10,"norm_squared","","Computes the squared norm of `self`.",73,null],[10,"normalize","","Gets the normalized version of a copy of `v`.",73,null],[10,"normalize_mut","","Normalizes `self`.",73,null],[10,"try_normalize","","Gets the normalized version of a copy of `v` or `None` if the vector has a norm smaller\nor equal to `min_norm`. In particular, `.try_normalize(0.0)` returns `None` if the norm is\nexactly zero.",73,null],[10,"try_normalize_mut","","Normalized `v` or does nothing if the vector has a norm smaller\nor equal to `min_norm`.",73,null],[8,"NumPoint","","Trait grouping most common operations on points.",null,null],[8,"NumVector","","Trait grouping most common operations on vectors.",null,null],[8,"Origin","","The zero element of a vector space, seen as an element of its embeding affine space.",null,null],[10,"origin","","The trivial origin.",74,{"inputs":[],"output":{"name":"self"}}],[10,"is_origin","","Returns true if this points is exactly the trivial origin.",74,null],[8,"Outer","","Traits of objects having an outer product.",null,null],[16,"OuterProductType","","Result type of the outer product.",75,null],[10,"outer","","Computes the outer product: `a * b`",75,null],[8,"PartialOrder","","Pointwise ordering operations.",null,null],[10,"inf","","Returns the infimum of this value and another",76,null],[10,"sup","","Returns the supremum of this value and another",76,null],[10,"partial_cmp","","Compare `self` and `other` using a partial ordering relation.",76,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null],[8,"PointAsVector","","Trait that relates a point of an affine space to a vector of the associated vector space.",null,null],[16,"Vector","","The vector type of the vector space associated to this point&#39;s affine space.",77,null],[10,"to_vector","","Converts this point to its associated vector.",77,null],[10,"as_vector","","Converts a reference to this point to a reference to its associated vector.",77,null],[10,"set_coords","","Sets the coordinates of this point to match those of a given vector.",77,null],[8,"Repeat","","Trait for constructiong an object repeating a value.",null,null],[10,"repeat","","Returns a value with filled by `val`.",78,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[8,"Rotate","","Trait of objects able to rotate other objects.",null,null],[10,"rotate","","Applies a rotation to `v`.",79,null],[10,"inverse_rotate","","Applies an inverse rotation to `v`.",79,null],[8,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion.",null,null],[10,"rotation","","Gets the rotation associated with `self`.",80,null],[10,"inverse_rotation","","Gets the inverse rotation associated with `self`.",80,null],[10,"append_rotation_mut","","Appends a rotation to this object.",80,null],[10,"append_rotation","","Appends the rotation `amount` to a copy of `t`.",80,null],[10,"prepend_rotation_mut","","Prepends a rotation to this object.",80,null],[10,"prepend_rotation","","Prepends the rotation `amount` to a copy of `t`.",80,null],[10,"set_rotation","","Sets the rotation of `self`.",80,null],[8,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix.",null,null],[16,"Output","","The output rotation matrix type.",81,null],[10,"to_rotation_matrix","","Gets the rotation matrix represented by `self`.",81,null],[8,"RotationWithTranslation","","Various composition of rotation and translation.",null,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[8,"RotationTo","","Trait of object that can be rotated to be superimposed with another one of the same nature.",null,null],[16,"AngleType","","Type of the angle between two elements.",83,null],[16,"DeltaRotationType","","Type of the rotation between two elements.",83,null],[10,"angle_to","","Computes an angle nedded to transform the first element to the second one using a\nrotation.",83,null],[10,"rotation_to","","Computes the smallest rotation needed to transform the first element to the second one.",83,null],[8,"Row","","Trait to access rows of a matrix or a vector.",null,null],[10,"nrows","","The number of column of `self`.",84,null],[10,"row","","Reads the `i`-th row of `self`.",84,null],[10,"set_row","","Writes the `i`-th row of `self`.",84,null],[8,"Shape","","The shape of an indexable object.",null,null],[10,"shape","","Returns the shape of an indexable object.",85,null],[8,"SquareMatrix","","Trait implemented by square matrices.",null,null],[8,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form.",null,null],[10,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",86,null],[8,"Transform","","Trait of objects able to transform other objects.",null,null],[10,"transform","","Applies a transformation to `v`.",87,null],[10,"inverse_transform","","Applies an inverse transformation to `v`.",87,null],[8,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended.",null,null],[10,"transformation","","Gets the transformation of `self`.",88,null],[10,"inverse_transformation","","Gets the inverse transformation of `self`.",88,null],[10,"append_transformation_mut","","Appends a transformation to this object.",88,null],[10,"append_transformation","","Appends the transformation `amount` to a copy of `t`.",88,null],[10,"prepend_transformation_mut","","Prepends a transformation to this object.",88,null],[10,"prepend_transformation","","Prepends the transformation `amount` to a copy of `t`.",88,null],[10,"set_transformation","","Sets the transformation of `self`.",88,null],[8,"Translate","","Trait of objects able to translate other objects. This is typically\nimplemented by vectors to translate points.",null,null],[10,"translate","","Apply a translation to an object.",89,null],[10,"inverse_translate","","Apply an inverse translation to an object.",89,null],[8,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended.",null,null],[10,"translation","","Gets the translation associated with this object.",90,null],[10,"inverse_translation","","Gets the inverse translation associated with this object.",90,null],[10,"append_translation_mut","","Appends a translation to this object.",90,null],[10,"append_translation","","Appends the translation `amount` to a copy of `t`.",90,null],[10,"prepend_translation_mut","","Prepends a translation to this object.",90,null],[10,"prepend_translation","","Prepends the translation `amount` to a copy of `t`.",90,null],[10,"set_translation","","Sets the translation.",90,null],[8,"Transpose","","Trait of objects which can be transposed.",null,null],[10,"transpose","","Computes the transpose of a matrix.",91,null],[10,"transpose_mut","","In-place version of `transposed`.",91,null],[8,"UniformSphereSample","","Trait of vectors able to sample a unit sphere.",null,null],[10,"sample","","Iterate through the samples.",92,{"inputs":[{"name":"f"}],"output":null}],[14,"assert_approx_eq_eps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait.",null,null],[14,"assert_approx_eq_ulps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait, with tolerance specified in ULPs.",null,null],[11,"quaternion","","The underlying quaternion.",93,null],[11,"from_axisangle","","Creates a new quaternion from a unit vector (the rotation axis) and an angle\n(the rotation angle).",93,{"inputs":[{"name":"unit"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"from_scaled_axis","","Same as `::from_axisangle` with the axis multiplied with the angle.",93,{"inputs":[{"name":"vector3"}],"output":{"name":"unitquaternion"}}],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",93,{"inputs":[{"name":"quaternion"}],"output":{"name":"unitquaternion"}}],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",93,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"angle","","The rotation angle of this unit quaternion.",93,null],[11,"axis","","The rotation axis of this unit quaternion or `None` if the rotation is zero.",93,null],[11,"to_rotation_matrix","","Builds a rotation matrix from this quaternion.",93,null],[11,"one","","",93,{"inputs":[],"output":{"name":"unitquaternion"}}],[11,"inverse","","",93,null],[11,"inverse_mut","","",93,null],[11,"rand","","",93,{"inputs":[{"name":"r"}],"output":{"name":"unitquaternion"}}],[11,"approx_epsilon","","",93,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",93,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",93,null],[11,"approx_eq_ulps","","",93,null],[11,"div","","",93,null],[11,"div_assign","","",93,null],[11,"mul","","",93,null],[11,"mul_assign","","",93,null],[11,"mul","","",93,null],[11,"mul","","",93,null],[11,"rotation","","",93,null],[11,"inverse_rotation","","",93,null],[11,"append_rotation_mut","","",93,null],[11,"append_rotation","","",93,null],[11,"prepend_rotation_mut","","",93,null],[11,"prepend_rotation","","",93,null],[11,"set_rotation","","",93,null],[11,"to_rotation_matrix","","",93,null],[11,"rotate","","",93,null],[11,"inverse_rotate","","",93,null],[11,"rotate","","",93,null],[11,"inverse_rotate","","",93,null],[11,"angle_to","","",93,null],[11,"rotation_to","","",93,null],[11,"transform","","",93,null],[11,"inverse_transform","","",93,null],[11,"transform","","",93,null],[11,"inverse_transform","","",93,null],[11,"fmt","","",93,null],[11,"dimension","","",93,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"exp","","Compute the exponential of a quaternion.",93,null],[11,"ln","","Compute the natural logarithm of a quaternion.",93,null],[11,"powf","","Raise this unit quaternion to a given floating power.",93,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[11,"norm","","Computes the norm of `self`.",73,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null],[11,"approx_eq","","Tests approximate equality.",48,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"norm","","Computes the norm of `self`.",73,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[11,"approx_eq","","Tests approximate equality.",48,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null]],"paths":[[3,"DVector"],[3,"Isometry2"],[3,"Isometry3"],[3,"Similarity2"],[3,"Similarity3"],[3,"Matrix1"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Matrix5"],[3,"Matrix6"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Vector5"],[3,"Vector6"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Point4"],[3,"Point5"],[3,"Point6"],[3,"Quaternion"],[4,"PartialOrdering"],[3,"DMatrix"],[3,"DMatrix1"],[3,"DVector1"],[3,"DMatrix2"],[3,"DVector2"],[3,"DMatrix3"],[3,"DVector3"],[3,"DMatrix4"],[3,"DVector4"],[3,"DMatrix5"],[3,"DVector5"],[3,"DMatrix6"],[3,"DVector6"],[3,"Identity"],[3,"Rotation2"],[3,"Rotation3"],[3,"Perspective3"],[3,"PerspectiveMatrix3"],[3,"Orthographic3"],[3,"OrthographicMatrix3"],[3,"Unit"],[8,"Absolute"],[8,"AbsoluteRotate"],[8,"ApproxEq"],[8,"Axpy"],[8,"Basis"],[8,"BaseFloat"],[8,"Bounded"],[8,"Cast"],[8,"Column"],[8,"ColumnSlice"],[8,"RowSlice"],[8,"Covariance"],[8,"Cross"],[8,"CrossMatrix"],[8,"Determinant"],[8,"Diagonal"],[8,"Dimension"],[8,"Dot"],[8,"EigenQR"],[8,"Eye"],[8,"FloatPoint"],[8,"FromHomogeneous"],[8,"Indexable"],[8,"Inverse"],[8,"Iterable"],[8,"IterableMut"],[8,"Mean"],[8,"Norm"],[8,"Origin"],[8,"Outer"],[8,"PartialOrder"],[8,"PointAsVector"],[8,"Repeat"],[8,"Rotate"],[8,"Rotation"],[8,"RotationMatrix"],[8,"RotationWithTranslation"],[8,"RotationTo"],[8,"Row"],[8,"Shape"],[8,"ToHomogeneous"],[8,"Transform"],[8,"Transformation"],[8,"Translate"],[8,"Translation"],[8,"Transpose"],[8,"UniformSphereSample"],[6,"UnitQuaternion"]]};
searchIndex["lapack"] = {"doc":"Interface to the [Linear Algebra PACKage][1].","items":[[0,"c","lapack","The C interface (LAPACKE).",null,null],[4,"Error","lapack::c","",null,null],[13,"None","","",0,null],[13,"WorkMemory","","",0,null],[13,"TransposeMemory","","",0,null],[4,"Layout","","",null,null],[13,"RowMajor","","",1,null],[13,"ColumnMajor","","",1,null],[5,"sbdsdc","","",null,null],[5,"dbdsdc","","",null,null],[5,"sbdsqr","","",null,null],[5,"dbdsqr","","",null,null],[5,"cbdsqr","","",null,null],[5,"zbdsqr","","",null,null],[5,"sbdsvdx","","",null,null],[5,"dbdsvdx","","",null,null],[5,"sdisna","","",null,null],[5,"ddisna","","",null,null],[5,"sgbbrd","","",null,null],[5,"dgbbrd","","",null,null],[5,"cgbbrd","","",null,null],[5,"zgbbrd","","",null,null],[5,"sgbcon","","",null,null],[5,"dgbcon","","",null,null],[5,"cgbcon","","",null,null],[5,"zgbcon","","",null,null],[5,"sgbequ","","",null,null],[5,"dgbequ","","",null,null],[5,"cgbequ","","",null,null],[5,"zgbequ","","",null,null],[5,"sgbequb","","",null,null],[5,"dgbequb","","",null,null],[5,"cgbequb","","",null,null],[5,"zgbequb","","",null,null],[5,"sgbrfs","","",null,null],[5,"dgbrfs","","",null,null],[5,"cgbrfs","","",null,null],[5,"zgbrfs","","",null,null],[5,"sgbrfsx","","",null,null],[5,"dgbrfsx","","",null,null],[5,"cgbrfsx","","",null,null],[5,"zgbrfsx","","",null,null],[5,"sgbsv","","",null,null],[5,"dgbsv","","",null,null],[5,"cgbsv","","",null,null],[5,"zgbsv","","",null,null],[5,"sgbsvx","","",null,null],[5,"dgbsvx","","",null,null],[5,"cgbsvx","","",null,null],[5,"zgbsvx","","",null,null],[5,"sgbsvxx","","",null,null],[5,"dgbsvxx","","",null,null],[5,"cgbsvxx","","",null,null],[5,"zgbsvxx","","",null,null],[5,"sgbtrf","","",null,null],[5,"dgbtrf","","",null,null],[5,"cgbtrf","","",null,null],[5,"zgbtrf","","",null,null],[5,"sgbtrs","","",null,null],[5,"dgbtrs","","",null,null],[5,"cgbtrs","","",null,null],[5,"zgbtrs","","",null,null],[5,"sgebak","","",null,null],[5,"dgebak","","",null,null],[5,"cgebak","","",null,null],[5,"zgebak","","",null,null],[5,"sgebal","","",null,null],[5,"dgebal","","",null,null],[5,"cgebal","","",null,null],[5,"zgebal","","",null,null],[5,"sgebrd","","",null,null],[5,"dgebrd","","",null,null],[5,"cgebrd","","",null,null],[5,"zgebrd","","",null,null],[5,"sgecon","","",null,null],[5,"dgecon","","",null,null],[5,"cgecon","","",null,null],[5,"zgecon","","",null,null],[5,"sgeequ","","",null,null],[5,"dgeequ","","",null,null],[5,"cgeequ","","",null,null],[5,"zgeequ","","",null,null],[5,"sgeequb","","",null,null],[5,"dgeequb","","",null,null],[5,"cgeequb","","",null,null],[5,"zgeequb","","",null,null],[5,"sgees","","",null,null],[5,"dgees","","",null,null],[5,"cgees","","",null,null],[5,"zgees","","",null,null],[5,"sgeesx","","",null,null],[5,"dgeesx","","",null,null],[5,"cgeesx","","",null,null],[5,"zgeesx","","",null,null],[5,"sgeev","","",null,null],[5,"dgeev","","",null,null],[5,"cgeev","","",null,null],[5,"zgeev","","",null,null],[5,"sgeevx","","",null,null],[5,"dgeevx","","",null,null],[5,"cgeevx","","",null,null],[5,"zgeevx","","",null,null],[5,"sgehrd","","",null,null],[5,"dgehrd","","",null,null],[5,"cgehrd","","",null,null],[5,"zgehrd","","",null,null],[5,"sgejsv","","",null,null],[5,"dgejsv","","",null,null],[5,"cgejsv","","",null,null],[5,"zgejsv","","",null,null],[5,"sgelq2","","",null,null],[5,"dgelq2","","",null,null],[5,"cgelq2","","",null,null],[5,"zgelq2","","",null,null],[5,"sgelqf","","",null,null],[5,"dgelqf","","",null,null],[5,"cgelqf","","",null,null],[5,"zgelqf","","",null,null],[5,"sgels","","",null,null],[5,"dgels","","",null,null],[5,"cgels","","",null,null],[5,"zgels","","",null,null],[5,"sgelsd","","",null,null],[5,"dgelsd","","",null,null],[5,"cgelsd","","",null,null],[5,"zgelsd","","",null,null],[5,"sgelss","","",null,null],[5,"dgelss","","",null,null],[5,"cgelss","","",null,null],[5,"zgelss","","",null,null],[5,"sgelsy","","",null,null],[5,"dgelsy","","",null,null],[5,"cgelsy","","",null,null],[5,"zgelsy","","",null,null],[5,"sgeqlf","","",null,null],[5,"dgeqlf","","",null,null],[5,"cgeqlf","","",null,null],[5,"zgeqlf","","",null,null],[5,"sgeqp3","","",null,null],[5,"dgeqp3","","",null,null],[5,"cgeqp3","","",null,null],[5,"zgeqp3","","",null,null],[5,"sgeqpf","","",null,null],[5,"dgeqpf","","",null,null],[5,"cgeqpf","","",null,null],[5,"zgeqpf","","",null,null],[5,"sgeqr2","","",null,null],[5,"dgeqr2","","",null,null],[5,"cgeqr2","","",null,null],[5,"zgeqr2","","",null,null],[5,"sgeqrf","","",null,null],[5,"dgeqrf","","",null,null],[5,"cgeqrf","","",null,null],[5,"zgeqrf","","",null,null],[5,"sgeqrfp","","",null,null],[5,"dgeqrfp","","",null,null],[5,"cgeqrfp","","",null,null],[5,"zgeqrfp","","",null,null],[5,"sgerfs","","",null,null],[5,"dgerfs","","",null,null],[5,"cgerfs","","",null,null],[5,"zgerfs","","",null,null],[5,"sgerfsx","","",null,null],[5,"dgerfsx","","",null,null],[5,"cgerfsx","","",null,null],[5,"zgerfsx","","",null,null],[5,"sgerqf","","",null,null],[5,"dgerqf","","",null,null],[5,"cgerqf","","",null,null],[5,"zgerqf","","",null,null],[5,"sgesdd","","",null,null],[5,"dgesdd","","",null,null],[5,"cgesdd","","",null,null],[5,"zgesdd","","",null,null],[5,"sgesv","","",null,null],[5,"dgesv","","",null,null],[5,"cgesv","","",null,null],[5,"zgesv","","",null,null],[5,"dsgesv","","",null,null],[5,"zcgesv","","",null,null],[5,"sgesvd","","",null,null],[5,"dgesvd","","",null,null],[5,"cgesvd","","",null,null],[5,"zgesvd","","",null,null],[5,"sgesvdx","","",null,null],[5,"dgesvdx","","",null,null],[5,"cgesvdx","","",null,null],[5,"zgesvdx","","",null,null],[5,"sgesvj","","",null,null],[5,"dgesvj","","",null,null],[5,"cgesvj","","",null,null],[5,"zgesvj","","",null,null],[5,"sgesvx","","",null,null],[5,"dgesvx","","",null,null],[5,"cgesvx","","",null,null],[5,"zgesvx","","",null,null],[5,"sgesvxx","","",null,null],[5,"dgesvxx","","",null,null],[5,"cgesvxx","","",null,null],[5,"zgesvxx","","",null,null],[5,"sgetf2","","",null,null],[5,"dgetf2","","",null,null],[5,"cgetf2","","",null,null],[5,"zgetf2","","",null,null],[5,"sgetrf","","",null,null],[5,"dgetrf","","",null,null],[5,"cgetrf","","",null,null],[5,"zgetrf","","",null,null],[5,"sgetrf2","","",null,null],[5,"dgetrf2","","",null,null],[5,"cgetrf2","","",null,null],[5,"zgetrf2","","",null,null],[5,"sgetri","","",null,null],[5,"dgetri","","",null,null],[5,"cgetri","","",null,null],[5,"zgetri","","",null,null],[5,"sgetrs","","",null,null],[5,"dgetrs","","",null,null],[5,"cgetrs","","",null,null],[5,"zgetrs","","",null,null],[5,"sggbak","","",null,null],[5,"dggbak","","",null,null],[5,"cggbak","","",null,null],[5,"zggbak","","",null,null],[5,"sggbal","","",null,null],[5,"dggbal","","",null,null],[5,"cggbal","","",null,null],[5,"zggbal","","",null,null],[5,"sgges","","",null,null],[5,"dgges","","",null,null],[5,"cgges","","",null,null],[5,"zgges","","",null,null],[5,"sgges3","","",null,null],[5,"dgges3","","",null,null],[5,"cgges3","","",null,null],[5,"zgges3","","",null,null],[5,"sggesx","","",null,null],[5,"dggesx","","",null,null],[5,"cggesx","","",null,null],[5,"zggesx","","",null,null],[5,"sggev","","",null,null],[5,"dggev","","",null,null],[5,"cggev","","",null,null],[5,"zggev","","",null,null],[5,"sggev3","","",null,null],[5,"dggev3","","",null,null],[5,"cggev3","","",null,null],[5,"zggev3","","",null,null],[5,"sggevx","","",null,null],[5,"dggevx","","",null,null],[5,"cggevx","","",null,null],[5,"zggevx","","",null,null],[5,"sggglm","","",null,null],[5,"dggglm","","",null,null],[5,"cggglm","","",null,null],[5,"zggglm","","",null,null],[5,"sgghrd","","",null,null],[5,"dgghrd","","",null,null],[5,"cgghrd","","",null,null],[5,"zgghrd","","",null,null],[5,"sgghd3","","",null,null],[5,"dgghd3","","",null,null],[5,"cgghd3","","",null,null],[5,"zgghd3","","",null,null],[5,"sgglse","","",null,null],[5,"dgglse","","",null,null],[5,"cgglse","","",null,null],[5,"zgglse","","",null,null],[5,"sggqrf","","",null,null],[5,"dggqrf","","",null,null],[5,"cggqrf","","",null,null],[5,"zggqrf","","",null,null],[5,"sggrqf","","",null,null],[5,"dggrqf","","",null,null],[5,"cggrqf","","",null,null],[5,"zggrqf","","",null,null],[5,"sggsvd","","",null,null],[5,"dggsvd","","",null,null],[5,"cggsvd","","",null,null],[5,"zggsvd","","",null,null],[5,"sggsvd3","","",null,null],[5,"dggsvd3","","",null,null],[5,"cggsvd3","","",null,null],[5,"zggsvd3","","",null,null],[5,"sggsvp","","",null,null],[5,"dggsvp","","",null,null],[5,"cggsvp","","",null,null],[5,"zggsvp","","",null,null],[5,"sggsvp3","","",null,null],[5,"dggsvp3","","",null,null],[5,"cggsvp3","","",null,null],[5,"zggsvp3","","",null,null],[5,"sgtcon","","",null,null],[5,"dgtcon","","",null,null],[5,"cgtcon","","",null,null],[5,"zgtcon","","",null,null],[5,"sgtrfs","","",null,null],[5,"dgtrfs","","",null,null],[5,"cgtrfs","","",null,null],[5,"zgtrfs","","",null,null],[5,"sgtsv","","",null,null],[5,"dgtsv","","",null,null],[5,"cgtsv","","",null,null],[5,"zgtsv","","",null,null],[5,"sgtsvx","","",null,null],[5,"dgtsvx","","",null,null],[5,"cgtsvx","","",null,null],[5,"zgtsvx","","",null,null],[5,"sgttrf","","",null,null],[5,"dgttrf","","",null,null],[5,"cgttrf","","",null,null],[5,"zgttrf","","",null,null],[5,"sgttrs","","",null,null],[5,"dgttrs","","",null,null],[5,"cgttrs","","",null,null],[5,"zgttrs","","",null,null],[5,"chbev","","",null,null],[5,"zhbev","","",null,null],[5,"chbevd","","",null,null],[5,"zhbevd","","",null,null],[5,"chbevx","","",null,null],[5,"zhbevx","","",null,null],[5,"chbgst","","",null,null],[5,"zhbgst","","",null,null],[5,"chbgv","","",null,null],[5,"zhbgv","","",null,null],[5,"chbgvd","","",null,null],[5,"zhbgvd","","",null,null],[5,"chbgvx","","",null,null],[5,"zhbgvx","","",null,null],[5,"chbtrd","","",null,null],[5,"zhbtrd","","",null,null],[5,"checon","","",null,null],[5,"zhecon","","",null,null],[5,"cheequb","","",null,null],[5,"zheequb","","",null,null],[5,"cheev","","",null,null],[5,"zheev","","",null,null],[5,"cheevd","","",null,null],[5,"zheevd","","",null,null],[5,"cheevr","","",null,null],[5,"zheevr","","",null,null],[5,"cheevx","","",null,null],[5,"zheevx","","",null,null],[5,"chegst","","",null,null],[5,"zhegst","","",null,null],[5,"chegv","","",null,null],[5,"zhegv","","",null,null],[5,"chegvd","","",null,null],[5,"zhegvd","","",null,null],[5,"chegvx","","",null,null],[5,"zhegvx","","",null,null],[5,"cherfs","","",null,null],[5,"zherfs","","",null,null],[5,"cherfsx","","",null,null],[5,"zherfsx","","",null,null],[5,"chesv","","",null,null],[5,"zhesv","","",null,null],[5,"chesvx","","",null,null],[5,"zhesvx","","",null,null],[5,"chesvxx","","",null,null],[5,"zhesvxx","","",null,null],[5,"chetrd","","",null,null],[5,"zhetrd","","",null,null],[5,"chetrf","","",null,null],[5,"zhetrf","","",null,null],[5,"chetri","","",null,null],[5,"zhetri","","",null,null],[5,"chetrs","","",null,null],[5,"zhetrs","","",null,null],[5,"chfrk","","",null,null],[5,"zhfrk","","",null,null],[5,"shgeqz","","",null,null],[5,"dhgeqz","","",null,null],[5,"chgeqz","","",null,null],[5,"zhgeqz","","",null,null],[5,"chpcon","","",null,null],[5,"zhpcon","","",null,null],[5,"chpev","","",null,null],[5,"zhpev","","",null,null],[5,"chpevd","","",null,null],[5,"zhpevd","","",null,null],[5,"chpevx","","",null,null],[5,"zhpevx","","",null,null],[5,"chpgst","","",null,null],[5,"zhpgst","","",null,null],[5,"chpgv","","",null,null],[5,"zhpgv","","",null,null],[5,"chpgvd","","",null,null],[5,"zhpgvd","","",null,null],[5,"chpgvx","","",null,null],[5,"zhpgvx","","",null,null],[5,"chprfs","","",null,null],[5,"zhprfs","","",null,null],[5,"chpsv","","",null,null],[5,"zhpsv","","",null,null],[5,"chpsvx","","",null,null],[5,"zhpsvx","","",null,null],[5,"chptrd","","",null,null],[5,"zhptrd","","",null,null],[5,"chptrf","","",null,null],[5,"zhptrf","","",null,null],[5,"chptri","","",null,null],[5,"zhptri","","",null,null],[5,"chptrs","","",null,null],[5,"zhptrs","","",null,null],[5,"shsein","","",null,null],[5,"dhsein","","",null,null],[5,"chsein","","",null,null],[5,"zhsein","","",null,null],[5,"shseqr","","",null,null],[5,"dhseqr","","",null,null],[5,"chseqr","","",null,null],[5,"zhseqr","","",null,null],[5,"clacgv","","",null,null],[5,"zlacgv","","",null,null],[5,"slacn2","","",null,null],[5,"dlacn2","","",null,null],[5,"clacn2","","",null,null],[5,"zlacn2","","",null,null],[5,"slacpy","","",null,null],[5,"dlacpy","","",null,null],[5,"clacpy","","",null,null],[5,"zlacpy","","",null,null],[5,"clacp2","","",null,null],[5,"zlacp2","","",null,null],[5,"zlag2c","","",null,null],[5,"slag2d","","",null,null],[5,"dlag2s","","",null,null],[5,"clag2z","","",null,null],[5,"slagge","","",null,null],[5,"dlagge","","",null,null],[5,"clagge","","",null,null],[5,"zlagge","","",null,null],[5,"slamch","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f32"}}],[5,"dlamch","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f64"}}],[5,"slange","","",null,null],[5,"dlange","","",null,null],[5,"clange","","",null,null],[5,"zlange","","",null,null],[5,"clanhe","","",null,null],[5,"zlanhe","","",null,null],[5,"slansy","","",null,null],[5,"dlansy","","",null,null],[5,"clansy","","",null,null],[5,"zlansy","","",null,null],[5,"slantr","","",null,null],[5,"dlantr","","",null,null],[5,"clantr","","",null,null],[5,"zlantr","","",null,null],[5,"slarfb","","",null,null],[5,"dlarfb","","",null,null],[5,"clarfb","","",null,null],[5,"zlarfb","","",null,null],[5,"slarfg","","",null,null],[5,"dlarfg","","",null,null],[5,"clarfg","","",null,null],[5,"zlarfg","","",null,null],[5,"slarft","","",null,null],[5,"dlarft","","",null,null],[5,"clarft","","",null,null],[5,"zlarft","","",null,null],[5,"slarfx","","",null,null],[5,"dlarfx","","",null,null],[5,"clarfx","","",null,null],[5,"zlarfx","","",null,null],[5,"slarnv","","",null,null],[5,"dlarnv","","",null,null],[5,"clarnv","","",null,null],[5,"zlarnv","","",null,null],[5,"slascl","","",null,null],[5,"dlascl","","",null,null],[5,"clascl","","",null,null],[5,"zlascl","","",null,null],[5,"slaset","","",null,null],[5,"dlaset","","",null,null],[5,"claset","","",null,null],[5,"zlaset","","",null,null],[5,"slasrt","","",null,null],[5,"dlasrt","","",null,null],[5,"slaswp","","",null,null],[5,"dlaswp","","",null,null],[5,"claswp","","",null,null],[5,"zlaswp","","",null,null],[5,"slatms","","",null,null],[5,"dlatms","","",null,null],[5,"clatms","","",null,null],[5,"zlatms","","",null,null],[5,"slauum","","",null,null],[5,"dlauum","","",null,null],[5,"clauum","","",null,null],[5,"zlauum","","",null,null],[5,"sopgtr","","",null,null],[5,"dopgtr","","",null,null],[5,"sopmtr","","",null,null],[5,"dopmtr","","",null,null],[5,"sorgbr","","",null,null],[5,"dorgbr","","",null,null],[5,"sorghr","","",null,null],[5,"dorghr","","",null,null],[5,"sorglq","","",null,null],[5,"dorglq","","",null,null],[5,"sorgql","","",null,null],[5,"dorgql","","",null,null],[5,"sorgqr","","",null,null],[5,"dorgqr","","",null,null],[5,"sorgrq","","",null,null],[5,"dorgrq","","",null,null],[5,"sorgtr","","",null,null],[5,"dorgtr","","",null,null],[5,"sormbr","","",null,null],[5,"dormbr","","",null,null],[5,"sormhr","","",null,null],[5,"dormhr","","",null,null],[5,"sormlq","","",null,null],[5,"dormlq","","",null,null],[5,"sormql","","",null,null],[5,"dormql","","",null,null],[5,"sormqr","","",null,null],[5,"dormqr","","",null,null],[5,"sormrq","","",null,null],[5,"dormrq","","",null,null],[5,"sormrz","","",null,null],[5,"dormrz","","",null,null],[5,"sormtr","","",null,null],[5,"dormtr","","",null,null],[5,"spbcon","","",null,null],[5,"dpbcon","","",null,null],[5,"cpbcon","","",null,null],[5,"zpbcon","","",null,null],[5,"spbequ","","",null,null],[5,"dpbequ","","",null,null],[5,"cpbequ","","",null,null],[5,"zpbequ","","",null,null],[5,"spbrfs","","",null,null],[5,"dpbrfs","","",null,null],[5,"cpbrfs","","",null,null],[5,"zpbrfs","","",null,null],[5,"spbstf","","",null,null],[5,"dpbstf","","",null,null],[5,"cpbstf","","",null,null],[5,"zpbstf","","",null,null],[5,"spbsv","","",null,null],[5,"dpbsv","","",null,null],[5,"cpbsv","","",null,null],[5,"zpbsv","","",null,null],[5,"spbsvx","","",null,null],[5,"dpbsvx","","",null,null],[5,"cpbsvx","","",null,null],[5,"zpbsvx","","",null,null],[5,"spbtrf","","",null,null],[5,"dpbtrf","","",null,null],[5,"cpbtrf","","",null,null],[5,"zpbtrf","","",null,null],[5,"spbtrs","","",null,null],[5,"dpbtrs","","",null,null],[5,"cpbtrs","","",null,null],[5,"zpbtrs","","",null,null],[5,"spftrf","","",null,null],[5,"dpftrf","","",null,null],[5,"cpftrf","","",null,null],[5,"zpftrf","","",null,null],[5,"spftri","","",null,null],[5,"dpftri","","",null,null],[5,"cpftri","","",null,null],[5,"zpftri","","",null,null],[5,"spftrs","","",null,null],[5,"dpftrs","","",null,null],[5,"cpftrs","","",null,null],[5,"zpftrs","","",null,null],[5,"spocon","","",null,null],[5,"dpocon","","",null,null],[5,"cpocon","","",null,null],[5,"zpocon","","",null,null],[5,"spoequ","","",null,null],[5,"dpoequ","","",null,null],[5,"cpoequ","","",null,null],[5,"zpoequ","","",null,null],[5,"spoequb","","",null,null],[5,"dpoequb","","",null,null],[5,"cpoequb","","",null,null],[5,"zpoequb","","",null,null],[5,"sporfs","","",null,null],[5,"dporfs","","",null,null],[5,"cporfs","","",null,null],[5,"zporfs","","",null,null],[5,"sporfsx","","",null,null],[5,"dporfsx","","",null,null],[5,"cporfsx","","",null,null],[5,"zporfsx","","",null,null],[5,"sposv","","",null,null],[5,"dposv","","",null,null],[5,"cposv","","",null,null],[5,"zposv","","",null,null],[5,"dsposv","","",null,null],[5,"zcposv","","",null,null],[5,"sposvx","","",null,null],[5,"dposvx","","",null,null],[5,"cposvx","","",null,null],[5,"zposvx","","",null,null],[5,"sposvxx","","",null,null],[5,"dposvxx","","",null,null],[5,"cposvxx","","",null,null],[5,"zposvxx","","",null,null],[5,"spotrf2","","",null,null],[5,"dpotrf2","","",null,null],[5,"cpotrf2","","",null,null],[5,"zpotrf2","","",null,null],[5,"spotrf","","",null,null],[5,"dpotrf","","",null,null],[5,"cpotrf","","",null,null],[5,"zpotrf","","",null,null],[5,"spotri","","",null,null],[5,"dpotri","","",null,null],[5,"cpotri","","",null,null],[5,"zpotri","","",null,null],[5,"spotrs","","",null,null],[5,"dpotrs","","",null,null],[5,"cpotrs","","",null,null],[5,"zpotrs","","",null,null],[5,"sppcon","","",null,null],[5,"dppcon","","",null,null],[5,"cppcon","","",null,null],[5,"zppcon","","",null,null],[5,"sppequ","","",null,null],[5,"dppequ","","",null,null],[5,"cppequ","","",null,null],[5,"zppequ","","",null,null],[5,"spprfs","","",null,null],[5,"dpprfs","","",null,null],[5,"cpprfs","","",null,null],[5,"zpprfs","","",null,null],[5,"sppsv","","",null,null],[5,"dppsv","","",null,null],[5,"cppsv","","",null,null],[5,"zppsv","","",null,null],[5,"sppsvx","","",null,null],[5,"dppsvx","","",null,null],[5,"cppsvx","","",null,null],[5,"zppsvx","","",null,null],[5,"spptrf","","",null,null],[5,"dpptrf","","",null,null],[5,"cpptrf","","",null,null],[5,"zpptrf","","",null,null],[5,"spptri","","",null,null],[5,"dpptri","","",null,null],[5,"cpptri","","",null,null],[5,"zpptri","","",null,null],[5,"spptrs","","",null,null],[5,"dpptrs","","",null,null],[5,"cpptrs","","",null,null],[5,"zpptrs","","",null,null],[5,"spstrf","","",null,null],[5,"dpstrf","","",null,null],[5,"cpstrf","","",null,null],[5,"zpstrf","","",null,null],[5,"sptcon","","",null,null],[5,"dptcon","","",null,null],[5,"cptcon","","",null,null],[5,"zptcon","","",null,null],[5,"spteqr","","",null,null],[5,"dpteqr","","",null,null],[5,"cpteqr","","",null,null],[5,"zpteqr","","",null,null],[5,"sptrfs","","",null,null],[5,"dptrfs","","",null,null],[5,"cptrfs","","",null,null],[5,"zptrfs","","",null,null],[5,"sptsv","","",null,null],[5,"dptsv","","",null,null],[5,"cptsv","","",null,null],[5,"zptsv","","",null,null],[5,"sptsvx","","",null,null],[5,"dptsvx","","",null,null],[5,"cptsvx","","",null,null],[5,"zptsvx","","",null,null],[5,"spttrf","","",null,null],[5,"dpttrf","","",null,null],[5,"cpttrf","","",null,null],[5,"zpttrf","","",null,null],[5,"spttrs","","",null,null],[5,"dpttrs","","",null,null],[5,"cpttrs","","",null,null],[5,"zpttrs","","",null,null],[5,"ssbev","","",null,null],[5,"dsbev","","",null,null],[5,"ssbevd","","",null,null],[5,"dsbevd","","",null,null],[5,"ssbevx","","",null,null],[5,"dsbevx","","",null,null],[5,"ssbgst","","",null,null],[5,"dsbgst","","",null,null],[5,"ssbgv","","",null,null],[5,"dsbgv","","",null,null],[5,"ssbgvd","","",null,null],[5,"dsbgvd","","",null,null],[5,"ssbgvx","","",null,null],[5,"dsbgvx","","",null,null],[5,"ssbtrd","","",null,null],[5,"dsbtrd","","",null,null],[5,"ssfrk","","",null,null],[5,"dsfrk","","",null,null],[5,"sspcon","","",null,null],[5,"dspcon","","",null,null],[5,"cspcon","","",null,null],[5,"zspcon","","",null,null],[5,"sspev","","",null,null],[5,"dspev","","",null,null],[5,"sspevd","","",null,null],[5,"dspevd","","",null,null],[5,"sspevx","","",null,null],[5,"dspevx","","",null,null],[5,"sspgst","","",null,null],[5,"dspgst","","",null,null],[5,"sspgv","","",null,null],[5,"dspgv","","",null,null],[5,"sspgvd","","",null,null],[5,"dspgvd","","",null,null],[5,"sspgvx","","",null,null],[5,"dspgvx","","",null,null],[5,"ssprfs","","",null,null],[5,"dsprfs","","",null,null],[5,"csprfs","","",null,null],[5,"zsprfs","","",null,null],[5,"sspsv","","",null,null],[5,"dspsv","","",null,null],[5,"cspsv","","",null,null],[5,"zspsv","","",null,null],[5,"sspsvx","","",null,null],[5,"dspsvx","","",null,null],[5,"cspsvx","","",null,null],[5,"zspsvx","","",null,null],[5,"ssptrd","","",null,null],[5,"dsptrd","","",null,null],[5,"ssptrf","","",null,null],[5,"dsptrf","","",null,null],[5,"csptrf","","",null,null],[5,"zsptrf","","",null,null],[5,"ssptri","","",null,null],[5,"dsptri","","",null,null],[5,"csptri","","",null,null],[5,"zsptri","","",null,null],[5,"ssptrs","","",null,null],[5,"dsptrs","","",null,null],[5,"csptrs","","",null,null],[5,"zsptrs","","",null,null],[5,"sstebz","","",null,null],[5,"dstebz","","",null,null],[5,"sstedc","","",null,null],[5,"dstedc","","",null,null],[5,"cstedc","","",null,null],[5,"zstedc","","",null,null],[5,"sstegr","","",null,null],[5,"dstegr","","",null,null],[5,"cstegr","","",null,null],[5,"zstegr","","",null,null],[5,"sstein","","",null,null],[5,"dstein","","",null,null],[5,"cstein","","",null,null],[5,"zstein","","",null,null],[5,"sstemr","","",null,null],[5,"dstemr","","",null,null],[5,"cstemr","","",null,null],[5,"zstemr","","",null,null],[5,"ssteqr","","",null,null],[5,"dsteqr","","",null,null],[5,"csteqr","","",null,null],[5,"zsteqr","","",null,null],[5,"ssterf","","",null,null],[5,"dsterf","","",null,null],[5,"sstev","","",null,null],[5,"dstev","","",null,null],[5,"sstevd","","",null,null],[5,"dstevd","","",null,null],[5,"sstevr","","",null,null],[5,"dstevr","","",null,null],[5,"sstevx","","",null,null],[5,"dstevx","","",null,null],[5,"ssycon","","",null,null],[5,"dsycon","","",null,null],[5,"csycon","","",null,null],[5,"zsycon","","",null,null],[5,"ssyequb","","",null,null],[5,"dsyequb","","",null,null],[5,"csyequb","","",null,null],[5,"zsyequb","","",null,null],[5,"ssyev","","",null,null],[5,"dsyev","","",null,null],[5,"ssyevd","","",null,null],[5,"dsyevd","","",null,null],[5,"ssyevr","","",null,null],[5,"dsyevr","","",null,null],[5,"ssyevx","","",null,null],[5,"dsyevx","","",null,null],[5,"ssygst","","",null,null],[5,"dsygst","","",null,null],[5,"ssygv","","",null,null],[5,"dsygv","","",null,null],[5,"ssygvd","","",null,null],[5,"dsygvd","","",null,null],[5,"ssygvx","","",null,null],[5,"dsygvx","","",null,null],[5,"ssyrfs","","",null,null],[5,"dsyrfs","","",null,null],[5,"csyrfs","","",null,null],[5,"zsyrfs","","",null,null],[5,"ssyrfsx","","",null,null],[5,"dsyrfsx","","",null,null],[5,"csyrfsx","","",null,null],[5,"zsyrfsx","","",null,null],[5,"ssysv","","",null,null],[5,"dsysv","","",null,null],[5,"csysv","","",null,null],[5,"zsysv","","",null,null],[5,"ssysvx","","",null,null],[5,"dsysvx","","",null,null],[5,"csysvx","","",null,null],[5,"zsysvx","","",null,null],[5,"ssysvxx","","",null,null],[5,"dsysvxx","","",null,null],[5,"csysvxx","","",null,null],[5,"zsysvxx","","",null,null],[5,"ssytrd","","",null,null],[5,"dsytrd","","",null,null],[5,"ssytrf","","",null,null],[5,"dsytrf","","",null,null],[5,"csytrf","","",null,null],[5,"zsytrf","","",null,null],[5,"ssytri","","",null,null],[5,"dsytri","","",null,null],[5,"csytri","","",null,null],[5,"zsytri","","",null,null],[5,"ssytrs","","",null,null],[5,"dsytrs","","",null,null],[5,"csytrs","","",null,null],[5,"zsytrs","","",null,null],[5,"stbcon","","",null,null],[5,"dtbcon","","",null,null],[5,"ctbcon","","",null,null],[5,"ztbcon","","",null,null],[5,"stbrfs","","",null,null],[5,"dtbrfs","","",null,null],[5,"ctbrfs","","",null,null],[5,"ztbrfs","","",null,null],[5,"stbtrs","","",null,null],[5,"dtbtrs","","",null,null],[5,"ctbtrs","","",null,null],[5,"ztbtrs","","",null,null],[5,"stfsm","","",null,null],[5,"dtfsm","","",null,null],[5,"ctfsm","","",null,null],[5,"ztfsm","","",null,null],[5,"stftri","","",null,null],[5,"dtftri","","",null,null],[5,"ctftri","","",null,null],[5,"ztftri","","",null,null],[5,"stfttp","","",null,null],[5,"dtfttp","","",null,null],[5,"ctfttp","","",null,null],[5,"ztfttp","","",null,null],[5,"stfttr","","",null,null],[5,"dtfttr","","",null,null],[5,"ctfttr","","",null,null],[5,"ztfttr","","",null,null],[5,"stgevc","","",null,null],[5,"dtgevc","","",null,null],[5,"ctgevc","","",null,null],[5,"ztgevc","","",null,null],[5,"stgexc","","",null,null],[5,"dtgexc","","",null,null],[5,"ctgexc","","",null,null],[5,"ztgexc","","",null,null],[5,"stgsen","","",null,null],[5,"dtgsen","","",null,null],[5,"ctgsen","","",null,null],[5,"ztgsen","","",null,null],[5,"stgsja","","",null,null],[5,"dtgsja","","",null,null],[5,"ctgsja","","",null,null],[5,"ztgsja","","",null,null],[5,"stgsna","","",null,null],[5,"dtgsna","","",null,null],[5,"ctgsna","","",null,null],[5,"ztgsna","","",null,null],[5,"stgsyl","","",null,null],[5,"dtgsyl","","",null,null],[5,"ctgsyl","","",null,null],[5,"ztgsyl","","",null,null],[5,"stpcon","","",null,null],[5,"dtpcon","","",null,null],[5,"ctpcon","","",null,null],[5,"ztpcon","","",null,null],[5,"stprfs","","",null,null],[5,"dtprfs","","",null,null],[5,"ctprfs","","",null,null],[5,"ztprfs","","",null,null],[5,"stptri","","",null,null],[5,"dtptri","","",null,null],[5,"ctptri","","",null,null],[5,"ztptri","","",null,null],[5,"stptrs","","",null,null],[5,"dtptrs","","",null,null],[5,"ctptrs","","",null,null],[5,"ztptrs","","",null,null],[5,"stpttf","","",null,null],[5,"dtpttf","","",null,null],[5,"ctpttf","","",null,null],[5,"ztpttf","","",null,null],[5,"stpttr","","",null,null],[5,"dtpttr","","",null,null],[5,"ctpttr","","",null,null],[5,"ztpttr","","",null,null],[5,"strcon","","",null,null],[5,"dtrcon","","",null,null],[5,"ctrcon","","",null,null],[5,"ztrcon","","",null,null],[5,"strevc","","",null,null],[5,"dtrevc","","",null,null],[5,"ctrevc","","",null,null],[5,"ztrevc","","",null,null],[5,"strexc","","",null,null],[5,"dtrexc","","",null,null],[5,"ctrexc","","",null,null],[5,"ztrexc","","",null,null],[5,"strrfs","","",null,null],[5,"dtrrfs","","",null,null],[5,"ctrrfs","","",null,null],[5,"ztrrfs","","",null,null],[5,"strsen","","",null,null],[5,"dtrsen","","",null,null],[5,"ctrsen","","",null,null],[5,"ztrsen","","",null,null],[5,"strsna","","",null,null],[5,"dtrsna","","",null,null],[5,"ctrsna","","",null,null],[5,"ztrsna","","",null,null],[5,"strsyl","","",null,null],[5,"dtrsyl","","",null,null],[5,"ctrsyl","","",null,null],[5,"ztrsyl","","",null,null],[5,"strtri","","",null,null],[5,"dtrtri","","",null,null],[5,"ctrtri","","",null,null],[5,"ztrtri","","",null,null],[5,"strtrs","","",null,null],[5,"dtrtrs","","",null,null],[5,"ctrtrs","","",null,null],[5,"ztrtrs","","",null,null],[5,"strttf","","",null,null],[5,"dtrttf","","",null,null],[5,"ctrttf","","",null,null],[5,"ztrttf","","",null,null],[5,"strttp","","",null,null],[5,"dtrttp","","",null,null],[5,"ctrttp","","",null,null],[5,"ztrttp","","",null,null],[5,"stzrzf","","",null,null],[5,"dtzrzf","","",null,null],[5,"ctzrzf","","",null,null],[5,"ztzrzf","","",null,null],[5,"cungbr","","",null,null],[5,"zungbr","","",null,null],[5,"cunghr","","",null,null],[5,"zunghr","","",null,null],[5,"cunglq","","",null,null],[5,"zunglq","","",null,null],[5,"cungql","","",null,null],[5,"zungql","","",null,null],[5,"cungqr","","",null,null],[5,"zungqr","","",null,null],[5,"cungrq","","",null,null],[5,"zungrq","","",null,null],[5,"cungtr","","",null,null],[5,"zungtr","","",null,null],[5,"cunmbr","","",null,null],[5,"zunmbr","","",null,null],[5,"cunmhr","","",null,null],[5,"zunmhr","","",null,null],[5,"cunmlq","","",null,null],[5,"zunmlq","","",null,null],[5,"cunmql","","",null,null],[5,"zunmql","","",null,null],[5,"cunmqr","","",null,null],[5,"zunmqr","","",null,null],[5,"cunmrq","","",null,null],[5,"zunmrq","","",null,null],[5,"cunmrz","","",null,null],[5,"zunmrz","","",null,null],[5,"cunmtr","","",null,null],[5,"zunmtr","","",null,null],[5,"cupgtr","","",null,null],[5,"zupgtr","","",null,null],[5,"cupmtr","","",null,null],[5,"zupmtr","","",null,null],[5,"sbdsdc_work","","",null,null],[5,"dbdsdc_work","","",null,null],[5,"sbdsvdx_work","","",null,null],[5,"dbdsvdx_work","","",null,null],[5,"sbdsqr_work","","",null,null],[5,"dbdsqr_work","","",null,null],[5,"cbdsqr_work","","",null,null],[5,"zbdsqr_work","","",null,null],[5,"sdisna_work","","",null,null],[5,"ddisna_work","","",null,null],[5,"sgbbrd_work","","",null,null],[5,"dgbbrd_work","","",null,null],[5,"cgbbrd_work","","",null,null],[5,"zgbbrd_work","","",null,null],[5,"sgbcon_work","","",null,null],[5,"dgbcon_work","","",null,null],[5,"cgbcon_work","","",null,null],[5,"zgbcon_work","","",null,null],[5,"sgbequ_work","","",null,null],[5,"dgbequ_work","","",null,null],[5,"cgbequ_work","","",null,null],[5,"zgbequ_work","","",null,null],[5,"sgbequb_work","","",null,null],[5,"dgbequb_work","","",null,null],[5,"cgbequb_work","","",null,null],[5,"zgbequb_work","","",null,null],[5,"sgbrfs_work","","",null,null],[5,"dgbrfs_work","","",null,null],[5,"cgbrfs_work","","",null,null],[5,"zgbrfs_work","","",null,null],[5,"sgbrfsx_work","","",null,null],[5,"dgbrfsx_work","","",null,null],[5,"cgbrfsx_work","","",null,null],[5,"zgbrfsx_work","","",null,null],[5,"sgbsv_work","","",null,null],[5,"dgbsv_work","","",null,null],[5,"cgbsv_work","","",null,null],[5,"zgbsv_work","","",null,null],[5,"sgbsvx_work","","",null,null],[5,"dgbsvx_work","","",null,null],[5,"cgbsvx_work","","",null,null],[5,"zgbsvx_work","","",null,null],[5,"sgbsvxx_work","","",null,null],[5,"dgbsvxx_work","","",null,null],[5,"cgbsvxx_work","","",null,null],[5,"zgbsvxx_work","","",null,null],[5,"sgbtrf_work","","",null,null],[5,"dgbtrf_work","","",null,null],[5,"cgbtrf_work","","",null,null],[5,"zgbtrf_work","","",null,null],[5,"sgbtrs_work","","",null,null],[5,"dgbtrs_work","","",null,null],[5,"cgbtrs_work","","",null,null],[5,"zgbtrs_work","","",null,null],[5,"sgebak_work","","",null,null],[5,"dgebak_work","","",null,null],[5,"cgebak_work","","",null,null],[5,"zgebak_work","","",null,null],[5,"sgebal_work","","",null,null],[5,"dgebal_work","","",null,null],[5,"cgebal_work","","",null,null],[5,"zgebal_work","","",null,null],[5,"sgebrd_work","","",null,null],[5,"dgebrd_work","","",null,null],[5,"cgebrd_work","","",null,null],[5,"zgebrd_work","","",null,null],[5,"sgecon_work","","",null,null],[5,"dgecon_work","","",null,null],[5,"cgecon_work","","",null,null],[5,"zgecon_work","","",null,null],[5,"sgeequ_work","","",null,null],[5,"dgeequ_work","","",null,null],[5,"cgeequ_work","","",null,null],[5,"zgeequ_work","","",null,null],[5,"sgeequb_work","","",null,null],[5,"dgeequb_work","","",null,null],[5,"cgeequb_work","","",null,null],[5,"zgeequb_work","","",null,null],[5,"sgees_work","","",null,null],[5,"dgees_work","","",null,null],[5,"cgees_work","","",null,null],[5,"zgees_work","","",null,null],[5,"sgeesx_work","","",null,null],[5,"dgeesx_work","","",null,null],[5,"cgeesx_work","","",null,null],[5,"zgeesx_work","","",null,null],[5,"sgeev_work","","",null,null],[5,"dgeev_work","","",null,null],[5,"cgeev_work","","",null,null],[5,"zgeev_work","","",null,null],[5,"sgeevx_work","","",null,null],[5,"dgeevx_work","","",null,null],[5,"cgeevx_work","","",null,null],[5,"zgeevx_work","","",null,null],[5,"sgehrd_work","","",null,null],[5,"dgehrd_work","","",null,null],[5,"cgehrd_work","","",null,null],[5,"zgehrd_work","","",null,null],[5,"sgejsv_work","","",null,null],[5,"dgejsv_work","","",null,null],[5,"cgejsv_work","","",null,null],[5,"zgejsv_work","","",null,null],[5,"sgelq2_work","","",null,null],[5,"dgelq2_work","","",null,null],[5,"cgelq2_work","","",null,null],[5,"zgelq2_work","","",null,null],[5,"sgelqf_work","","",null,null],[5,"dgelqf_work","","",null,null],[5,"cgelqf_work","","",null,null],[5,"zgelqf_work","","",null,null],[5,"sgels_work","","",null,null],[5,"dgels_work","","",null,null],[5,"cgels_work","","",null,null],[5,"zgels_work","","",null,null],[5,"sgelsd_work","","",null,null],[5,"dgelsd_work","","",null,null],[5,"cgelsd_work","","",null,null],[5,"zgelsd_work","","",null,null],[5,"sgelss_work","","",null,null],[5,"dgelss_work","","",null,null],[5,"cgelss_work","","",null,null],[5,"zgelss_work","","",null,null],[5,"sgelsy_work","","",null,null],[5,"dgelsy_work","","",null,null],[5,"cgelsy_work","","",null,null],[5,"zgelsy_work","","",null,null],[5,"sgeqlf_work","","",null,null],[5,"dgeqlf_work","","",null,null],[5,"cgeqlf_work","","",null,null],[5,"zgeqlf_work","","",null,null],[5,"sgeqp3_work","","",null,null],[5,"dgeqp3_work","","",null,null],[5,"cgeqp3_work","","",null,null],[5,"zgeqp3_work","","",null,null],[5,"sgeqpf_work","","",null,null],[5,"dgeqpf_work","","",null,null],[5,"cgeqpf_work","","",null,null],[5,"zgeqpf_work","","",null,null],[5,"sgeqr2_work","","",null,null],[5,"dgeqr2_work","","",null,null],[5,"cgeqr2_work","","",null,null],[5,"zgeqr2_work","","",null,null],[5,"sgeqrf_work","","",null,null],[5,"dgeqrf_work","","",null,null],[5,"cgeqrf_work","","",null,null],[5,"zgeqrf_work","","",null,null],[5,"sgeqrfp_work","","",null,null],[5,"dgeqrfp_work","","",null,null],[5,"cgeqrfp_work","","",null,null],[5,"zgeqrfp_work","","",null,null],[5,"sgerfs_work","","",null,null],[5,"dgerfs_work","","",null,null],[5,"cgerfs_work","","",null,null],[5,"zgerfs_work","","",null,null],[5,"sgerfsx_work","","",null,null],[5,"dgerfsx_work","","",null,null],[5,"cgerfsx_work","","",null,null],[5,"zgerfsx_work","","",null,null],[5,"sgerqf_work","","",null,null],[5,"dgerqf_work","","",null,null],[5,"cgerqf_work","","",null,null],[5,"zgerqf_work","","",null,null],[5,"sgesdd_work","","",null,null],[5,"dgesdd_work","","",null,null],[5,"cgesdd_work","","",null,null],[5,"zgesdd_work","","",null,null],[5,"sgesv_work","","",null,null],[5,"dgesv_work","","",null,null],[5,"cgesv_work","","",null,null],[5,"zgesv_work","","",null,null],[5,"dsgesv_work","","",null,null],[5,"zcgesv_work","","",null,null],[5,"sgesvd_work","","",null,null],[5,"dgesvd_work","","",null,null],[5,"cgesvd_work","","",null,null],[5,"zgesvd_work","","",null,null],[5,"sgesvdx_work","","",null,null],[5,"dgesvdx_work","","",null,null],[5,"cgesvdx_work","","",null,null],[5,"zgesvdx_work","","",null,null],[5,"sgesvj_work","","",null,null],[5,"dgesvj_work","","",null,null],[5,"cgesvj_work","","",null,null],[5,"zgesvj_work","","",null,null],[5,"sgesvx_work","","",null,null],[5,"dgesvx_work","","",null,null],[5,"cgesvx_work","","",null,null],[5,"zgesvx_work","","",null,null],[5,"sgesvxx_work","","",null,null],[5,"dgesvxx_work","","",null,null],[5,"cgesvxx_work","","",null,null],[5,"zgesvxx_work","","",null,null],[5,"sgetf2_work","","",null,null],[5,"dgetf2_work","","",null,null],[5,"cgetf2_work","","",null,null],[5,"zgetf2_work","","",null,null],[5,"sgetrf_work","","",null,null],[5,"dgetrf_work","","",null,null],[5,"cgetrf_work","","",null,null],[5,"zgetrf_work","","",null,null],[5,"sgetrf2_work","","",null,null],[5,"dgetrf2_work","","",null,null],[5,"cgetrf2_work","","",null,null],[5,"zgetrf2_work","","",null,null],[5,"sgetri_work","","",null,null],[5,"dgetri_work","","",null,null],[5,"cgetri_work","","",null,null],[5,"zgetri_work","","",null,null],[5,"sgetrs_work","","",null,null],[5,"dgetrs_work","","",null,null],[5,"cgetrs_work","","",null,null],[5,"zgetrs_work","","",null,null],[5,"sggbak_work","","",null,null],[5,"dggbak_work","","",null,null],[5,"cggbak_work","","",null,null],[5,"zggbak_work","","",null,null],[5,"sggbal_work","","",null,null],[5,"dggbal_work","","",null,null],[5,"cggbal_work","","",null,null],[5,"zggbal_work","","",null,null],[5,"sgges_work","","",null,null],[5,"dgges_work","","",null,null],[5,"cgges_work","","",null,null],[5,"zgges_work","","",null,null],[5,"sgges3_work","","",null,null],[5,"dgges3_work","","",null,null],[5,"cgges3_work","","",null,null],[5,"zgges3_work","","",null,null],[5,"sggesx_work","","",null,null],[5,"dggesx_work","","",null,null],[5,"cggesx_work","","",null,null],[5,"zggesx_work","","",null,null],[5,"sggev_work","","",null,null],[5,"dggev_work","","",null,null],[5,"cggev_work","","",null,null],[5,"zggev_work","","",null,null],[5,"sggev3_work","","",null,null],[5,"dggev3_work","","",null,null],[5,"cggev3_work","","",null,null],[5,"zggev3_work","","",null,null],[5,"sggevx_work","","",null,null],[5,"dggevx_work","","",null,null],[5,"cggevx_work","","",null,null],[5,"zggevx_work","","",null,null],[5,"sggglm_work","","",null,null],[5,"dggglm_work","","",null,null],[5,"cggglm_work","","",null,null],[5,"zggglm_work","","",null,null],[5,"sgghrd_work","","",null,null],[5,"dgghrd_work","","",null,null],[5,"cgghrd_work","","",null,null],[5,"zgghrd_work","","",null,null],[5,"sgghd3_work","","",null,null],[5,"dgghd3_work","","",null,null],[5,"cgghd3_work","","",null,null],[5,"zgghd3_work","","",null,null],[5,"sgglse_work","","",null,null],[5,"dgglse_work","","",null,null],[5,"cgglse_work","","",null,null],[5,"zgglse_work","","",null,null],[5,"sggqrf_work","","",null,null],[5,"dggqrf_work","","",null,null],[5,"cggqrf_work","","",null,null],[5,"zggqrf_work","","",null,null],[5,"sggrqf_work","","",null,null],[5,"dggrqf_work","","",null,null],[5,"cggrqf_work","","",null,null],[5,"zggrqf_work","","",null,null],[5,"sggsvd_work","","",null,null],[5,"dggsvd_work","","",null,null],[5,"cggsvd_work","","",null,null],[5,"zggsvd_work","","",null,null],[5,"sggsvd3_work","","",null,null],[5,"dggsvd3_work","","",null,null],[5,"cggsvd3_work","","",null,null],[5,"zggsvd3_work","","",null,null],[5,"sggsvp_work","","",null,null],[5,"dggsvp_work","","",null,null],[5,"cggsvp_work","","",null,null],[5,"zggsvp_work","","",null,null],[5,"sggsvp3_work","","",null,null],[5,"dggsvp3_work","","",null,null],[5,"cggsvp3_work","","",null,null],[5,"zggsvp3_work","","",null,null],[5,"sgtcon_work","","",null,null],[5,"dgtcon_work","","",null,null],[5,"cgtcon_work","","",null,null],[5,"zgtcon_work","","",null,null],[5,"sgtrfs_work","","",null,null],[5,"dgtrfs_work","","",null,null],[5,"cgtrfs_work","","",null,null],[5,"zgtrfs_work","","",null,null],[5,"sgtsv_work","","",null,null],[5,"dgtsv_work","","",null,null],[5,"cgtsv_work","","",null,null],[5,"zgtsv_work","","",null,null],[5,"sgtsvx_work","","",null,null],[5,"dgtsvx_work","","",null,null],[5,"cgtsvx_work","","",null,null],[5,"zgtsvx_work","","",null,null],[5,"sgttrf_work","","",null,null],[5,"dgttrf_work","","",null,null],[5,"cgttrf_work","","",null,null],[5,"zgttrf_work","","",null,null],[5,"sgttrs_work","","",null,null],[5,"dgttrs_work","","",null,null],[5,"cgttrs_work","","",null,null],[5,"zgttrs_work","","",null,null],[5,"chbev_work","","",null,null],[5,"zhbev_work","","",null,null],[5,"chbevd_work","","",null,null],[5,"zhbevd_work","","",null,null],[5,"chbevx_work","","",null,null],[5,"zhbevx_work","","",null,null],[5,"chbgst_work","","",null,null],[5,"zhbgst_work","","",null,null],[5,"chbgv_work","","",null,null],[5,"zhbgv_work","","",null,null],[5,"chbgvd_work","","",null,null],[5,"zhbgvd_work","","",null,null],[5,"chbgvx_work","","",null,null],[5,"zhbgvx_work","","",null,null],[5,"chbtrd_work","","",null,null],[5,"zhbtrd_work","","",null,null],[5,"checon_work","","",null,null],[5,"zhecon_work","","",null,null],[5,"cheequb_work","","",null,null],[5,"zheequb_work","","",null,null],[5,"cheev_work","","",null,null],[5,"zheev_work","","",null,null],[5,"cheevd_work","","",null,null],[5,"zheevd_work","","",null,null],[5,"cheevr_work","","",null,null],[5,"zheevr_work","","",null,null],[5,"cheevx_work","","",null,null],[5,"zheevx_work","","",null,null],[5,"chegst_work","","",null,null],[5,"zhegst_work","","",null,null],[5,"chegv_work","","",null,null],[5,"zhegv_work","","",null,null],[5,"chegvd_work","","",null,null],[5,"zhegvd_work","","",null,null],[5,"chegvx_work","","",null,null],[5,"zhegvx_work","","",null,null],[5,"cherfs_work","","",null,null],[5,"zherfs_work","","",null,null],[5,"cherfsx_work","","",null,null],[5,"zherfsx_work","","",null,null],[5,"chesv_work","","",null,null],[5,"zhesv_work","","",null,null],[5,"chesvx_work","","",null,null],[5,"zhesvx_work","","",null,null],[5,"chesvxx_work","","",null,null],[5,"zhesvxx_work","","",null,null],[5,"chetrd_work","","",null,null],[5,"zhetrd_work","","",null,null],[5,"chetrf_work","","",null,null],[5,"zhetrf_work","","",null,null],[5,"chetri_work","","",null,null],[5,"zhetri_work","","",null,null],[5,"chetrs_work","","",null,null],[5,"zhetrs_work","","",null,null],[5,"chfrk_work","","",null,null],[5,"zhfrk_work","","",null,null],[5,"shgeqz_work","","",null,null],[5,"dhgeqz_work","","",null,null],[5,"chgeqz_work","","",null,null],[5,"zhgeqz_work","","",null,null],[5,"chpcon_work","","",null,null],[5,"zhpcon_work","","",null,null],[5,"chpev_work","","",null,null],[5,"zhpev_work","","",null,null],[5,"chpevd_work","","",null,null],[5,"zhpevd_work","","",null,null],[5,"chpevx_work","","",null,null],[5,"zhpevx_work","","",null,null],[5,"chpgst_work","","",null,null],[5,"zhpgst_work","","",null,null],[5,"chpgv_work","","",null,null],[5,"zhpgv_work","","",null,null],[5,"chpgvd_work","","",null,null],[5,"zhpgvd_work","","",null,null],[5,"chpgvx_work","","",null,null],[5,"zhpgvx_work","","",null,null],[5,"chprfs_work","","",null,null],[5,"zhprfs_work","","",null,null],[5,"chpsv_work","","",null,null],[5,"zhpsv_work","","",null,null],[5,"chpsvx_work","","",null,null],[5,"zhpsvx_work","","",null,null],[5,"chptrd_work","","",null,null],[5,"zhptrd_work","","",null,null],[5,"chptrf_work","","",null,null],[5,"zhptrf_work","","",null,null],[5,"chptri_work","","",null,null],[5,"zhptri_work","","",null,null],[5,"chptrs_work","","",null,null],[5,"zhptrs_work","","",null,null],[5,"shsein_work","","",null,null],[5,"dhsein_work","","",null,null],[5,"chsein_work","","",null,null],[5,"zhsein_work","","",null,null],[5,"shseqr_work","","",null,null],[5,"dhseqr_work","","",null,null],[5,"chseqr_work","","",null,null],[5,"zhseqr_work","","",null,null],[5,"clacgv_work","","",null,null],[5,"zlacgv_work","","",null,null],[5,"slacn2_work","","",null,null],[5,"dlacn2_work","","",null,null],[5,"clacn2_work","","",null,null],[5,"zlacn2_work","","",null,null],[5,"slacpy_work","","",null,null],[5,"dlacpy_work","","",null,null],[5,"clacpy_work","","",null,null],[5,"zlacpy_work","","",null,null],[5,"clacp2_work","","",null,null],[5,"zlacp2_work","","",null,null],[5,"zlag2c_work","","",null,null],[5,"slag2d_work","","",null,null],[5,"dlag2s_work","","",null,null],[5,"clag2z_work","","",null,null],[5,"slagge_work","","",null,null],[5,"dlagge_work","","",null,null],[5,"clagge_work","","",null,null],[5,"zlagge_work","","",null,null],[5,"claghe_work","","",null,null],[5,"zlaghe_work","","",null,null],[5,"slagsy_work","","",null,null],[5,"dlagsy_work","","",null,null],[5,"clagsy_work","","",null,null],[5,"zlagsy_work","","",null,null],[5,"slapmr_work","","",null,null],[5,"dlapmr_work","","",null,null],[5,"clapmr_work","","",null,null],[5,"zlapmr_work","","",null,null],[5,"slapmt_work","","",null,null],[5,"dlapmt_work","","",null,null],[5,"clapmt_work","","",null,null],[5,"zlapmt_work","","",null,null],[5,"slartgp_work","","",null,null],[5,"dlartgp_work","","",null,null],[5,"slartgs_work","","",null,null],[5,"dlartgs_work","","",null,null],[5,"slapy2_work","","",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"dlapy2_work","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"slapy3_work","","",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"dlapy3_work","","",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"slamch_work","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f32"}}],[5,"dlamch_work","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f64"}}],[5,"slange_work","","",null,null],[5,"dlange_work","","",null,null],[5,"clange_work","","",null,null],[5,"zlange_work","","",null,null],[5,"clanhe_work","","",null,null],[5,"zlanhe_work","","",null,null],[5,"slansy_work","","",null,null],[5,"dlansy_work","","",null,null],[5,"clansy_work","","",null,null],[5,"zlansy_work","","",null,null],[5,"slantr_work","","",null,null],[5,"dlantr_work","","",null,null],[5,"clantr_work","","",null,null],[5,"zlantr_work","","",null,null],[5,"slarfb_work","","",null,null],[5,"dlarfb_work","","",null,null],[5,"clarfb_work","","",null,null],[5,"zlarfb_work","","",null,null],[5,"slarfg_work","","",null,null],[5,"dlarfg_work","","",null,null],[5,"clarfg_work","","",null,null],[5,"zlarfg_work","","",null,null],[5,"slarft_work","","",null,null],[5,"dlarft_work","","",null,null],[5,"clarft_work","","",null,null],[5,"zlarft_work","","",null,null],[5,"slarfx_work","","",null,null],[5,"dlarfx_work","","",null,null],[5,"clarfx_work","","",null,null],[5,"zlarfx_work","","",null,null],[5,"slarnv_work","","",null,null],[5,"dlarnv_work","","",null,null],[5,"clarnv_work","","",null,null],[5,"zlarnv_work","","",null,null],[5,"slascl_work","","",null,null],[5,"dlascl_work","","",null,null],[5,"clascl_work","","",null,null],[5,"zlascl_work","","",null,null],[5,"slaset_work","","",null,null],[5,"dlaset_work","","",null,null],[5,"claset_work","","",null,null],[5,"zlaset_work","","",null,null],[5,"slasrt_work","","",null,null],[5,"dlasrt_work","","",null,null],[5,"slaswp_work","","",null,null],[5,"dlaswp_work","","",null,null],[5,"claswp_work","","",null,null],[5,"zlaswp_work","","",null,null],[5,"slatms_work","","",null,null],[5,"dlatms_work","","",null,null],[5,"clatms_work","","",null,null],[5,"zlatms_work","","",null,null],[5,"slauum_work","","",null,null],[5,"dlauum_work","","",null,null],[5,"clauum_work","","",null,null],[5,"zlauum_work","","",null,null],[5,"sopgtr_work","","",null,null],[5,"dopgtr_work","","",null,null],[5,"sopmtr_work","","",null,null],[5,"dopmtr_work","","",null,null],[5,"sorgbr_work","","",null,null],[5,"dorgbr_work","","",null,null],[5,"sorghr_work","","",null,null],[5,"dorghr_work","","",null,null],[5,"sorglq_work","","",null,null],[5,"dorglq_work","","",null,null],[5,"sorgql_work","","",null,null],[5,"dorgql_work","","",null,null],[5,"sorgqr_work","","",null,null],[5,"dorgqr_work","","",null,null],[5,"sorgrq_work","","",null,null],[5,"dorgrq_work","","",null,null],[5,"sorgtr_work","","",null,null],[5,"dorgtr_work","","",null,null],[5,"sormbr_work","","",null,null],[5,"dormbr_work","","",null,null],[5,"sormhr_work","","",null,null],[5,"dormhr_work","","",null,null],[5,"sormlq_work","","",null,null],[5,"dormlq_work","","",null,null],[5,"sormql_work","","",null,null],[5,"dormql_work","","",null,null],[5,"sormqr_work","","",null,null],[5,"dormqr_work","","",null,null],[5,"sormrq_work","","",null,null],[5,"dormrq_work","","",null,null],[5,"sormrz_work","","",null,null],[5,"dormrz_work","","",null,null],[5,"sormtr_work","","",null,null],[5,"dormtr_work","","",null,null],[5,"spbcon_work","","",null,null],[5,"dpbcon_work","","",null,null],[5,"cpbcon_work","","",null,null],[5,"zpbcon_work","","",null,null],[5,"spbequ_work","","",null,null],[5,"dpbequ_work","","",null,null],[5,"cpbequ_work","","",null,null],[5,"zpbequ_work","","",null,null],[5,"spbrfs_work","","",null,null],[5,"dpbrfs_work","","",null,null],[5,"cpbrfs_work","","",null,null],[5,"zpbrfs_work","","",null,null],[5,"spbstf_work","","",null,null],[5,"dpbstf_work","","",null,null],[5,"cpbstf_work","","",null,null],[5,"zpbstf_work","","",null,null],[5,"spbsv_work","","",null,null],[5,"dpbsv_work","","",null,null],[5,"cpbsv_work","","",null,null],[5,"zpbsv_work","","",null,null],[5,"spbsvx_work","","",null,null],[5,"dpbsvx_work","","",null,null],[5,"cpbsvx_work","","",null,null],[5,"zpbsvx_work","","",null,null],[5,"spbtrf_work","","",null,null],[5,"dpbtrf_work","","",null,null],[5,"cpbtrf_work","","",null,null],[5,"zpbtrf_work","","",null,null],[5,"spbtrs_work","","",null,null],[5,"dpbtrs_work","","",null,null],[5,"cpbtrs_work","","",null,null],[5,"zpbtrs_work","","",null,null],[5,"spftrf_work","","",null,null],[5,"dpftrf_work","","",null,null],[5,"cpftrf_work","","",null,null],[5,"zpftrf_work","","",null,null],[5,"spftri_work","","",null,null],[5,"dpftri_work","","",null,null],[5,"cpftri_work","","",null,null],[5,"zpftri_work","","",null,null],[5,"spftrs_work","","",null,null],[5,"dpftrs_work","","",null,null],[5,"cpftrs_work","","",null,null],[5,"zpftrs_work","","",null,null],[5,"spocon_work","","",null,null],[5,"dpocon_work","","",null,null],[5,"cpocon_work","","",null,null],[5,"zpocon_work","","",null,null],[5,"spoequ_work","","",null,null],[5,"dpoequ_work","","",null,null],[5,"cpoequ_work","","",null,null],[5,"zpoequ_work","","",null,null],[5,"spoequb_work","","",null,null],[5,"dpoequb_work","","",null,null],[5,"cpoequb_work","","",null,null],[5,"zpoequb_work","","",null,null],[5,"sporfs_work","","",null,null],[5,"dporfs_work","","",null,null],[5,"cporfs_work","","",null,null],[5,"zporfs_work","","",null,null],[5,"sporfsx_work","","",null,null],[5,"dporfsx_work","","",null,null],[5,"cporfsx_work","","",null,null],[5,"zporfsx_work","","",null,null],[5,"sposv_work","","",null,null],[5,"dposv_work","","",null,null],[5,"cposv_work","","",null,null],[5,"zposv_work","","",null,null],[5,"dsposv_work","","",null,null],[5,"zcposv_work","","",null,null],[5,"sposvx_work","","",null,null],[5,"dposvx_work","","",null,null],[5,"cposvx_work","","",null,null],[5,"zposvx_work","","",null,null],[5,"sposvxx_work","","",null,null],[5,"dposvxx_work","","",null,null],[5,"cposvxx_work","","",null,null],[5,"zposvxx_work","","",null,null],[5,"spotrf2_work","","",null,null],[5,"dpotrf2_work","","",null,null],[5,"cpotrf2_work","","",null,null],[5,"zpotrf2_work","","",null,null],[5,"spotrf_work","","",null,null],[5,"dpotrf_work","","",null,null],[5,"cpotrf_work","","",null,null],[5,"zpotrf_work","","",null,null],[5,"spotri_work","","",null,null],[5,"dpotri_work","","",null,null],[5,"cpotri_work","","",null,null],[5,"zpotri_work","","",null,null],[5,"spotrs_work","","",null,null],[5,"dpotrs_work","","",null,null],[5,"cpotrs_work","","",null,null],[5,"zpotrs_work","","",null,null],[5,"sppcon_work","","",null,null],[5,"dppcon_work","","",null,null],[5,"cppcon_work","","",null,null],[5,"zppcon_work","","",null,null],[5,"sppequ_work","","",null,null],[5,"dppequ_work","","",null,null],[5,"cppequ_work","","",null,null],[5,"zppequ_work","","",null,null],[5,"spprfs_work","","",null,null],[5,"dpprfs_work","","",null,null],[5,"cpprfs_work","","",null,null],[5,"zpprfs_work","","",null,null],[5,"sppsv_work","","",null,null],[5,"dppsv_work","","",null,null],[5,"cppsv_work","","",null,null],[5,"zppsv_work","","",null,null],[5,"sppsvx_work","","",null,null],[5,"dppsvx_work","","",null,null],[5,"cppsvx_work","","",null,null],[5,"zppsvx_work","","",null,null],[5,"spptrf_work","","",null,null],[5,"dpptrf_work","","",null,null],[5,"cpptrf_work","","",null,null],[5,"zpptrf_work","","",null,null],[5,"spptri_work","","",null,null],[5,"dpptri_work","","",null,null],[5,"cpptri_work","","",null,null],[5,"zpptri_work","","",null,null],[5,"spptrs_work","","",null,null],[5,"dpptrs_work","","",null,null],[5,"cpptrs_work","","",null,null],[5,"zpptrs_work","","",null,null],[5,"spstrf_work","","",null,null],[5,"dpstrf_work","","",null,null],[5,"cpstrf_work","","",null,null],[5,"zpstrf_work","","",null,null],[5,"sptcon_work","","",null,null],[5,"dptcon_work","","",null,null],[5,"cptcon_work","","",null,null],[5,"zptcon_work","","",null,null],[5,"spteqr_work","","",null,null],[5,"dpteqr_work","","",null,null],[5,"cpteqr_work","","",null,null],[5,"zpteqr_work","","",null,null],[5,"sptrfs_work","","",null,null],[5,"dptrfs_work","","",null,null],[5,"cptrfs_work","","",null,null],[5,"zptrfs_work","","",null,null],[5,"sptsv_work","","",null,null],[5,"dptsv_work","","",null,null],[5,"cptsv_work","","",null,null],[5,"zptsv_work","","",null,null],[5,"sptsvx_work","","",null,null],[5,"dptsvx_work","","",null,null],[5,"cptsvx_work","","",null,null],[5,"zptsvx_work","","",null,null],[5,"spttrf_work","","",null,null],[5,"dpttrf_work","","",null,null],[5,"cpttrf_work","","",null,null],[5,"zpttrf_work","","",null,null],[5,"spttrs_work","","",null,null],[5,"dpttrs_work","","",null,null],[5,"cpttrs_work","","",null,null],[5,"zpttrs_work","","",null,null],[5,"ssbev_work","","",null,null],[5,"dsbev_work","","",null,null],[5,"ssbevd_work","","",null,null],[5,"dsbevd_work","","",null,null],[5,"ssbevx_work","","",null,null],[5,"dsbevx_work","","",null,null],[5,"ssbgst_work","","",null,null],[5,"dsbgst_work","","",null,null],[5,"ssbgv_work","","",null,null],[5,"dsbgv_work","","",null,null],[5,"ssbgvd_work","","",null,null],[5,"dsbgvd_work","","",null,null],[5,"ssbgvx_work","","",null,null],[5,"dsbgvx_work","","",null,null],[5,"ssbtrd_work","","",null,null],[5,"dsbtrd_work","","",null,null],[5,"ssfrk_work","","",null,null],[5,"dsfrk_work","","",null,null],[5,"sspcon_work","","",null,null],[5,"dspcon_work","","",null,null],[5,"cspcon_work","","",null,null],[5,"zspcon_work","","",null,null],[5,"sspev_work","","",null,null],[5,"dspev_work","","",null,null],[5,"sspevd_work","","",null,null],[5,"dspevd_work","","",null,null],[5,"sspevx_work","","",null,null],[5,"dspevx_work","","",null,null],[5,"sspgst_work","","",null,null],[5,"dspgst_work","","",null,null],[5,"sspgv_work","","",null,null],[5,"dspgv_work","","",null,null],[5,"sspgvd_work","","",null,null],[5,"dspgvd_work","","",null,null],[5,"sspgvx_work","","",null,null],[5,"dspgvx_work","","",null,null],[5,"ssprfs_work","","",null,null],[5,"dsprfs_work","","",null,null],[5,"csprfs_work","","",null,null],[5,"zsprfs_work","","",null,null],[5,"sspsv_work","","",null,null],[5,"dspsv_work","","",null,null],[5,"cspsv_work","","",null,null],[5,"zspsv_work","","",null,null],[5,"sspsvx_work","","",null,null],[5,"dspsvx_work","","",null,null],[5,"cspsvx_work","","",null,null],[5,"zspsvx_work","","",null,null],[5,"ssptrd_work","","",null,null],[5,"dsptrd_work","","",null,null],[5,"ssptrf_work","","",null,null],[5,"dsptrf_work","","",null,null],[5,"csptrf_work","","",null,null],[5,"zsptrf_work","","",null,null],[5,"ssptri_work","","",null,null],[5,"dsptri_work","","",null,null],[5,"csptri_work","","",null,null],[5,"zsptri_work","","",null,null],[5,"ssptrs_work","","",null,null],[5,"dsptrs_work","","",null,null],[5,"csptrs_work","","",null,null],[5,"zsptrs_work","","",null,null],[5,"sstebz_work","","",null,null],[5,"dstebz_work","","",null,null],[5,"sstedc_work","","",null,null],[5,"dstedc_work","","",null,null],[5,"cstedc_work","","",null,null],[5,"zstedc_work","","",null,null],[5,"sstegr_work","","",null,null],[5,"dstegr_work","","",null,null],[5,"cstegr_work","","",null,null],[5,"zstegr_work","","",null,null],[5,"sstein_work","","",null,null],[5,"dstein_work","","",null,null],[5,"cstein_work","","",null,null],[5,"zstein_work","","",null,null],[5,"sstemr_work","","",null,null],[5,"dstemr_work","","",null,null],[5,"cstemr_work","","",null,null],[5,"zstemr_work","","",null,null],[5,"ssteqr_work","","",null,null],[5,"dsteqr_work","","",null,null],[5,"csteqr_work","","",null,null],[5,"zsteqr_work","","",null,null],[5,"ssterf_work","","",null,null],[5,"dsterf_work","","",null,null],[5,"sstev_work","","",null,null],[5,"dstev_work","","",null,null],[5,"sstevd_work","","",null,null],[5,"dstevd_work","","",null,null],[5,"sstevr_work","","",null,null],[5,"dstevr_work","","",null,null],[5,"sstevx_work","","",null,null],[5,"dstevx_work","","",null,null],[5,"ssycon_work","","",null,null],[5,"dsycon_work","","",null,null],[5,"csycon_work","","",null,null],[5,"zsycon_work","","",null,null],[5,"ssyequb_work","","",null,null],[5,"dsyequb_work","","",null,null],[5,"csyequb_work","","",null,null],[5,"zsyequb_work","","",null,null],[5,"ssyev_work","","",null,null],[5,"dsyev_work","","",null,null],[5,"ssyevd_work","","",null,null],[5,"dsyevd_work","","",null,null],[5,"ssyevr_work","","",null,null],[5,"dsyevr_work","","",null,null],[5,"ssyevx_work","","",null,null],[5,"dsyevx_work","","",null,null],[5,"ssygst_work","","",null,null],[5,"dsygst_work","","",null,null],[5,"ssygv_work","","",null,null],[5,"dsygv_work","","",null,null],[5,"ssygvd_work","","",null,null],[5,"dsygvd_work","","",null,null],[5,"ssygvx_work","","",null,null],[5,"dsygvx_work","","",null,null],[5,"ssyrfs_work","","",null,null],[5,"dsyrfs_work","","",null,null],[5,"csyrfs_work","","",null,null],[5,"zsyrfs_work","","",null,null],[5,"ssyrfsx_work","","",null,null],[5,"dsyrfsx_work","","",null,null],[5,"csyrfsx_work","","",null,null],[5,"zsyrfsx_work","","",null,null],[5,"ssysv_work","","",null,null],[5,"dsysv_work","","",null,null],[5,"csysv_work","","",null,null],[5,"zsysv_work","","",null,null],[5,"ssysvx_work","","",null,null],[5,"dsysvx_work","","",null,null],[5,"csysvx_work","","",null,null],[5,"zsysvx_work","","",null,null],[5,"ssysvxx_work","","",null,null],[5,"dsysvxx_work","","",null,null],[5,"csysvxx_work","","",null,null],[5,"zsysvxx_work","","",null,null],[5,"ssytrd_work","","",null,null],[5,"dsytrd_work","","",null,null],[5,"ssytrf_work","","",null,null],[5,"dsytrf_work","","",null,null],[5,"csytrf_work","","",null,null],[5,"zsytrf_work","","",null,null],[5,"ssytri_work","","",null,null],[5,"dsytri_work","","",null,null],[5,"csytri_work","","",null,null],[5,"zsytri_work","","",null,null],[5,"ssytrs_work","","",null,null],[5,"dsytrs_work","","",null,null],[5,"csytrs_work","","",null,null],[5,"zsytrs_work","","",null,null],[5,"stbcon_work","","",null,null],[5,"dtbcon_work","","",null,null],[5,"ctbcon_work","","",null,null],[5,"ztbcon_work","","",null,null],[5,"stbrfs_work","","",null,null],[5,"dtbrfs_work","","",null,null],[5,"ctbrfs_work","","",null,null],[5,"ztbrfs_work","","",null,null],[5,"stbtrs_work","","",null,null],[5,"dtbtrs_work","","",null,null],[5,"ctbtrs_work","","",null,null],[5,"ztbtrs_work","","",null,null],[5,"stfsm_work","","",null,null],[5,"dtfsm_work","","",null,null],[5,"ctfsm_work","","",null,null],[5,"ztfsm_work","","",null,null],[5,"stftri_work","","",null,null],[5,"dtftri_work","","",null,null],[5,"ctftri_work","","",null,null],[5,"ztftri_work","","",null,null],[5,"stfttp_work","","",null,null],[5,"dtfttp_work","","",null,null],[5,"ctfttp_work","","",null,null],[5,"ztfttp_work","","",null,null],[5,"stfttr_work","","",null,null],[5,"dtfttr_work","","",null,null],[5,"ctfttr_work","","",null,null],[5,"ztfttr_work","","",null,null],[5,"stgevc_work","","",null,null],[5,"dtgevc_work","","",null,null],[5,"ctgevc_work","","",null,null],[5,"ztgevc_work","","",null,null],[5,"stgexc_work","","",null,null],[5,"dtgexc_work","","",null,null],[5,"ctgexc_work","","",null,null],[5,"ztgexc_work","","",null,null],[5,"stgsen_work","","",null,null],[5,"dtgsen_work","","",null,null],[5,"ctgsen_work","","",null,null],[5,"ztgsen_work","","",null,null],[5,"stgsja_work","","",null,null],[5,"dtgsja_work","","",null,null],[5,"ctgsja_work","","",null,null],[5,"ztgsja_work","","",null,null],[5,"stgsna_work","","",null,null],[5,"dtgsna_work","","",null,null],[5,"ctgsna_work","","",null,null],[5,"ztgsna_work","","",null,null],[5,"stgsyl_work","","",null,null],[5,"dtgsyl_work","","",null,null],[5,"ctgsyl_work","","",null,null],[5,"ztgsyl_work","","",null,null],[5,"stpcon_work","","",null,null],[5,"dtpcon_work","","",null,null],[5,"ctpcon_work","","",null,null],[5,"ztpcon_work","","",null,null],[5,"stprfs_work","","",null,null],[5,"dtprfs_work","","",null,null],[5,"ctprfs_work","","",null,null],[5,"ztprfs_work","","",null,null],[5,"stptri_work","","",null,null],[5,"dtptri_work","","",null,null],[5,"ctptri_work","","",null,null],[5,"ztptri_work","","",null,null],[5,"stptrs_work","","",null,null],[5,"dtptrs_work","","",null,null],[5,"ctptrs_work","","",null,null],[5,"ztptrs_work","","",null,null],[5,"stpttf_work","","",null,null],[5,"dtpttf_work","","",null,null],[5,"ctpttf_work","","",null,null],[5,"ztpttf_work","","",null,null],[5,"stpttr_work","","",null,null],[5,"dtpttr_work","","",null,null],[5,"ctpttr_work","","",null,null],[5,"ztpttr_work","","",null,null],[5,"strcon_work","","",null,null],[5,"dtrcon_work","","",null,null],[5,"ctrcon_work","","",null,null],[5,"ztrcon_work","","",null,null],[5,"strevc_work","","",null,null],[5,"dtrevc_work","","",null,null],[5,"ctrevc_work","","",null,null],[5,"ztrevc_work","","",null,null],[5,"strexc_work","","",null,null],[5,"dtrexc_work","","",null,null],[5,"ctrexc_work","","",null,null],[5,"ztrexc_work","","",null,null],[5,"strrfs_work","","",null,null],[5,"dtrrfs_work","","",null,null],[5,"ctrrfs_work","","",null,null],[5,"ztrrfs_work","","",null,null],[5,"strsen_work","","",null,null],[5,"dtrsen_work","","",null,null],[5,"ctrsen_work","","",null,null],[5,"ztrsen_work","","",null,null],[5,"strsna_work","","",null,null],[5,"dtrsna_work","","",null,null],[5,"ctrsna_work","","",null,null],[5,"ztrsna_work","","",null,null],[5,"strsyl_work","","",null,null],[5,"dtrsyl_work","","",null,null],[5,"ctrsyl_work","","",null,null],[5,"ztrsyl_work","","",null,null],[5,"strtri_work","","",null,null],[5,"dtrtri_work","","",null,null],[5,"ctrtri_work","","",null,null],[5,"ztrtri_work","","",null,null],[5,"strtrs_work","","",null,null],[5,"dtrtrs_work","","",null,null],[5,"ctrtrs_work","","",null,null],[5,"ztrtrs_work","","",null,null],[5,"strttf_work","","",null,null],[5,"dtrttf_work","","",null,null],[5,"ctrttf_work","","",null,null],[5,"ztrttf_work","","",null,null],[5,"strttp_work","","",null,null],[5,"dtrttp_work","","",null,null],[5,"ctrttp_work","","",null,null],[5,"ztrttp_work","","",null,null],[5,"stzrzf_work","","",null,null],[5,"dtzrzf_work","","",null,null],[5,"ctzrzf_work","","",null,null],[5,"ztzrzf_work","","",null,null],[5,"cungbr_work","","",null,null],[5,"zungbr_work","","",null,null],[5,"cunghr_work","","",null,null],[5,"zunghr_work","","",null,null],[5,"cunglq_work","","",null,null],[5,"zunglq_work","","",null,null],[5,"cungql_work","","",null,null],[5,"zungql_work","","",null,null],[5,"cungqr_work","","",null,null],[5,"zungqr_work","","",null,null],[5,"cungrq_work","","",null,null],[5,"zungrq_work","","",null,null],[5,"cungtr_work","","",null,null],[5,"zungtr_work","","",null,null],[5,"cunmbr_work","","",null,null],[5,"zunmbr_work","","",null,null],[5,"cunmhr_work","","",null,null],[5,"zunmhr_work","","",null,null],[5,"cunmlq_work","","",null,null],[5,"zunmlq_work","","",null,null],[5,"cunmql_work","","",null,null],[5,"zunmql_work","","",null,null],[5,"cunmqr_work","","",null,null],[5,"zunmqr_work","","",null,null],[5,"cunmrq_work","","",null,null],[5,"zunmrq_work","","",null,null],[5,"cunmrz_work","","",null,null],[5,"zunmrz_work","","",null,null],[5,"cunmtr_work","","",null,null],[5,"zunmtr_work","","",null,null],[5,"cupgtr_work","","",null,null],[5,"zupgtr_work","","",null,null],[5,"cupmtr_work","","",null,null],[5,"zupmtr_work","","",null,null],[5,"claghe","","",null,null],[5,"zlaghe","","",null,null],[5,"slagsy","","",null,null],[5,"dlagsy","","",null,null],[5,"clagsy","","",null,null],[5,"zlagsy","","",null,null],[5,"slapmr","","",null,null],[5,"dlapmr","","",null,null],[5,"clapmr","","",null,null],[5,"zlapmr","","",null,null],[5,"slapmt","","",null,null],[5,"dlapmt","","",null,null],[5,"clapmt","","",null,null],[5,"zlapmt","","",null,null],[5,"slapy2","","",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"dlapy2","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"slapy3","","",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"dlapy3","","",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"slartgp","","",null,null],[5,"dlartgp","","",null,null],[5,"slartgs","","",null,null],[5,"dlartgs","","",null,null],[5,"cbbcsd","","",null,null],[5,"cbbcsd_work","","",null,null],[5,"cheswapr","","",null,null],[5,"cheswapr_work","","",null,null],[5,"chetri2","","",null,null],[5,"chetri2_work","","",null,null],[5,"chetri2x","","",null,null],[5,"chetri2x_work","","",null,null],[5,"chetrs2","","",null,null],[5,"chetrs2_work","","",null,null],[5,"csyconv","","",null,null],[5,"csyconv_work","","",null,null],[5,"csyswapr","","",null,null],[5,"csyswapr_work","","",null,null],[5,"csytri2","","",null,null],[5,"csytri2_work","","",null,null],[5,"csytri2x","","",null,null],[5,"csytri2x_work","","",null,null],[5,"csytrs2","","",null,null],[5,"csytrs2_work","","",null,null],[5,"cunbdb","","",null,null],[5,"cunbdb_work","","",null,null],[5,"cuncsd","","",null,null],[5,"cuncsd_work","","",null,null],[5,"cuncsd2by1","","",null,null],[5,"cuncsd2by1_work","","",null,null],[5,"dbbcsd","","",null,null],[5,"dbbcsd_work","","",null,null],[5,"dorbdb","","",null,null],[5,"dorbdb_work","","",null,null],[5,"dorcsd","","",null,null],[5,"dorcsd_work","","",null,null],[5,"dorcsd2by1","","",null,null],[5,"dorcsd2by1_work","","",null,null],[5,"dsyconv","","",null,null],[5,"dsyconv_work","","",null,null],[5,"dsyswapr","","",null,null],[5,"dsyswapr_work","","",null,null],[5,"dsytri2","","",null,null],[5,"dsytri2_work","","",null,null],[5,"dsytri2x","","",null,null],[5,"dsytri2x_work","","",null,null],[5,"dsytrs2","","",null,null],[5,"dsytrs2_work","","",null,null],[5,"sbbcsd","","",null,null],[5,"sbbcsd_work","","",null,null],[5,"sorbdb","","",null,null],[5,"sorbdb_work","","",null,null],[5,"sorcsd","","",null,null],[5,"sorcsd_work","","",null,null],[5,"sorcsd2by1","","",null,null],[5,"sorcsd2by1_work","","",null,null],[5,"ssyconv","","",null,null],[5,"ssyconv_work","","",null,null],[5,"ssyswapr","","",null,null],[5,"ssyswapr_work","","",null,null],[5,"ssytri2","","",null,null],[5,"ssytri2_work","","",null,null],[5,"ssytri2x","","",null,null],[5,"ssytri2x_work","","",null,null],[5,"ssytrs2","","",null,null],[5,"ssytrs2_work","","",null,null],[5,"zbbcsd","","",null,null],[5,"zbbcsd_work","","",null,null],[5,"zheswapr","","",null,null],[5,"zheswapr_work","","",null,null],[5,"zhetri2","","",null,null],[5,"zhetri2_work","","",null,null],[5,"zhetri2x","","",null,null],[5,"zhetri2x_work","","",null,null],[5,"zhetrs2","","",null,null],[5,"zhetrs2_work","","",null,null],[5,"zsyconv","","",null,null],[5,"zsyconv_work","","",null,null],[5,"zsyswapr","","",null,null],[5,"zsyswapr_work","","",null,null],[5,"zsytri2","","",null,null],[5,"zsytri2_work","","",null,null],[5,"zsytri2x","","",null,null],[5,"zsytri2x_work","","",null,null],[5,"zsytrs2","","",null,null],[5,"zsytrs2_work","","",null,null],[5,"zunbdb","","",null,null],[5,"zunbdb_work","","",null,null],[5,"zuncsd","","",null,null],[5,"zuncsd_work","","",null,null],[5,"zuncsd2by1","","",null,null],[5,"zuncsd2by1_work","","",null,null],[5,"sgemqrt","","",null,null],[5,"dgemqrt","","",null,null],[5,"cgemqrt","","",null,null],[5,"zgemqrt","","",null,null],[5,"sgeqrt","","",null,null],[5,"dgeqrt","","",null,null],[5,"cgeqrt","","",null,null],[5,"zgeqrt","","",null,null],[5,"sgeqrt2","","",null,null],[5,"dgeqrt2","","",null,null],[5,"cgeqrt2","","",null,null],[5,"zgeqrt2","","",null,null],[5,"sgeqrt3","","",null,null],[5,"dgeqrt3","","",null,null],[5,"cgeqrt3","","",null,null],[5,"zgeqrt3","","",null,null],[5,"stpmqrt","","",null,null],[5,"dtpmqrt","","",null,null],[5,"ctpmqrt","","",null,null],[5,"ztpmqrt","","",null,null],[5,"stpqrt","","",null,null],[5,"dtpqrt","","",null,null],[5,"ctpqrt","","",null,null],[5,"ztpqrt","","",null,null],[5,"stpqrt2","","",null,null],[5,"dtpqrt2","","",null,null],[5,"ctpqrt2","","",null,null],[5,"ztpqrt2","","",null,null],[5,"stprfb","","",null,null],[5,"dtprfb","","",null,null],[5,"ctprfb","","",null,null],[5,"ztprfb","","",null,null],[5,"sgemqrt_work","","",null,null],[5,"dgemqrt_work","","",null,null],[5,"cgemqrt_work","","",null,null],[5,"zgemqrt_work","","",null,null],[5,"sgeqrt_work","","",null,null],[5,"dgeqrt_work","","",null,null],[5,"cgeqrt_work","","",null,null],[5,"zgeqrt_work","","",null,null],[5,"sgeqrt2_work","","",null,null],[5,"dgeqrt2_work","","",null,null],[5,"cgeqrt2_work","","",null,null],[5,"zgeqrt2_work","","",null,null],[5,"sgeqrt3_work","","",null,null],[5,"dgeqrt3_work","","",null,null],[5,"cgeqrt3_work","","",null,null],[5,"zgeqrt3_work","","",null,null],[5,"stpmqrt_work","","",null,null],[5,"dtpmqrt_work","","",null,null],[5,"ctpmqrt_work","","",null,null],[5,"ztpmqrt_work","","",null,null],[5,"stpqrt_work","","",null,null],[5,"dtpqrt_work","","",null,null],[5,"ctpqrt_work","","",null,null],[5,"ztpqrt_work","","",null,null],[5,"stpqrt2_work","","",null,null],[5,"dtpqrt2_work","","",null,null],[5,"ctpqrt2_work","","",null,null],[5,"ztpqrt2_work","","",null,null],[5,"stprfb_work","","",null,null],[5,"dtprfb_work","","",null,null],[5,"ctprfb_work","","",null,null],[5,"ztprfb_work","","",null,null],[5,"ssysv_rook","","",null,null],[5,"dsysv_rook","","",null,null],[5,"csysv_rook","","",null,null],[5,"zsysv_rook","","",null,null],[5,"ssytrf_rook","","",null,null],[5,"dsytrf_rook","","",null,null],[5,"csytrf_rook","","",null,null],[5,"zsytrf_rook","","",null,null],[5,"ssytrs_rook","","",null,null],[5,"dsytrs_rook","","",null,null],[5,"csytrs_rook","","",null,null],[5,"zsytrs_rook","","",null,null],[5,"chetrf_rook","","",null,null],[5,"zhetrf_rook","","",null,null],[5,"chetrs_rook","","",null,null],[5,"zhetrs_rook","","",null,null],[5,"csyr","","",null,null],[5,"zsyr","","",null,null],[5,"ssysv_rook_work","","",null,null],[5,"dsysv_rook_work","","",null,null],[5,"csysv_rook_work","","",null,null],[5,"zsysv_rook_work","","",null,null],[5,"ssytrf_rook_work","","",null,null],[5,"dsytrf_rook_work","","",null,null],[5,"csytrf_rook_work","","",null,null],[5,"zsytrf_rook_work","","",null,null],[5,"ssytrs_rook_work","","",null,null],[5,"dsytrs_rook_work","","",null,null],[5,"csytrs_rook_work","","",null,null],[5,"zsytrs_rook_work","","",null,null],[5,"chetrf_rook_work","","",null,null],[5,"zhetrf_rook_work","","",null,null],[5,"chetrs_rook_work","","",null,null],[5,"zhetrs_rook_work","","",null,null],[5,"csyr_work","","",null,null],[5,"zsyr_work","","",null,null],[5,"ilaver","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[6,"Select2F32","","",null,null],[6,"Select3F32","","",null,null],[6,"Select2F64","","",null,null],[6,"Select3F64","","",null,null],[6,"Select1C32","","",null,null],[6,"Select2C32","","",null,null],[6,"Select1C64","","",null,null],[6,"Select2C64","","",null,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",0,null],[0,"fortran","lapack","The Fortran interface.",null,null],[5,"sgetrf","lapack::fortran","",null,null],[5,"dgetrf","","",null,null],[5,"cgetrf","","",null,null],[5,"zgetrf","","",null,null],[5,"sgetrf2","","",null,null],[5,"dgetrf2","","",null,null],[5,"cgetrf2","","",null,null],[5,"zgetrf2","","",null,null],[5,"sgbtrf","","",null,null],[5,"dgbtrf","","",null,null],[5,"cgbtrf","","",null,null],[5,"zgbtrf","","",null,null],[5,"sgttrf","","",null,null],[5,"dgttrf","","",null,null],[5,"cgttrf","","",null,null],[5,"zgttrf","","",null,null],[5,"spotrf2","","",null,null],[5,"dpotrf2","","",null,null],[5,"cpotrf2","","",null,null],[5,"zpotrf2","","",null,null],[5,"spotrf","","",null,null],[5,"dpotrf","","",null,null],[5,"cpotrf","","",null,null],[5,"zpotrf","","",null,null],[5,"dpstrf","","",null,null],[5,"spstrf","","",null,null],[5,"zpstrf","","",null,null],[5,"cpstrf","","",null,null],[5,"dpftrf","","",null,null],[5,"spftrf","","",null,null],[5,"zpftrf","","",null,null],[5,"cpftrf","","",null,null],[5,"spptrf","","",null,null],[5,"dpptrf","","",null,null],[5,"cpptrf","","",null,null],[5,"zpptrf","","",null,null],[5,"spbtrf","","",null,null],[5,"dpbtrf","","",null,null],[5,"cpbtrf","","",null,null],[5,"zpbtrf","","",null,null],[5,"spttrf","","",null,null],[5,"dpttrf","","",null,null],[5,"cpttrf","","",null,null],[5,"zpttrf","","",null,null],[5,"ssytrf","","",null,null],[5,"dsytrf","","",null,null],[5,"csytrf","","",null,null],[5,"zsytrf","","",null,null],[5,"chetrf","","",null,null],[5,"zhetrf","","",null,null],[5,"ssptrf","","",null,null],[5,"dsptrf","","",null,null],[5,"csptrf","","",null,null],[5,"zsptrf","","",null,null],[5,"chptrf","","",null,null],[5,"zhptrf","","",null,null],[5,"sgetrs","","",null,null],[5,"dgetrs","","",null,null],[5,"cgetrs","","",null,null],[5,"zgetrs","","",null,null],[5,"sgbtrs","","",null,null],[5,"dgbtrs","","",null,null],[5,"cgbtrs","","",null,null],[5,"zgbtrs","","",null,null],[5,"sgttrs","","",null,null],[5,"dgttrs","","",null,null],[5,"cgttrs","","",null,null],[5,"zgttrs","","",null,null],[5,"spotrs","","",null,null],[5,"dpotrs","","",null,null],[5,"cpotrs","","",null,null],[5,"zpotrs","","",null,null],[5,"dpftrs","","",null,null],[5,"spftrs","","",null,null],[5,"zpftrs","","",null,null],[5,"cpftrs","","",null,null],[5,"spptrs","","",null,null],[5,"dpptrs","","",null,null],[5,"cpptrs","","",null,null],[5,"zpptrs","","",null,null],[5,"spbtrs","","",null,null],[5,"dpbtrs","","",null,null],[5,"cpbtrs","","",null,null],[5,"zpbtrs","","",null,null],[5,"spttrs","","",null,null],[5,"dpttrs","","",null,null],[5,"cpttrs","","",null,null],[5,"zpttrs","","",null,null],[5,"ssytrs","","",null,null],[5,"dsytrs","","",null,null],[5,"csytrs","","",null,null],[5,"zsytrs","","",null,null],[5,"chetrs","","",null,null],[5,"zhetrs","","",null,null],[5,"ssptrs","","",null,null],[5,"dsptrs","","",null,null],[5,"csptrs","","",null,null],[5,"zsptrs","","",null,null],[5,"chptrs","","",null,null],[5,"zhptrs","","",null,null],[5,"strtrs","","",null,null],[5,"dtrtrs","","",null,null],[5,"ctrtrs","","",null,null],[5,"ztrtrs","","",null,null],[5,"stptrs","","",null,null],[5,"dtptrs","","",null,null],[5,"ctptrs","","",null,null],[5,"ztptrs","","",null,null],[5,"stbtrs","","",null,null],[5,"dtbtrs","","",null,null],[5,"ctbtrs","","",null,null],[5,"ztbtrs","","",null,null],[5,"sgecon","","",null,null],[5,"dgecon","","",null,null],[5,"cgecon","","",null,null],[5,"zgecon","","",null,null],[5,"sgbcon","","",null,null],[5,"dgbcon","","",null,null],[5,"cgbcon","","",null,null],[5,"zgbcon","","",null,null],[5,"sgtcon","","",null,null],[5,"dgtcon","","",null,null],[5,"cgtcon","","",null,null],[5,"zgtcon","","",null,null],[5,"spocon","","",null,null],[5,"dpocon","","",null,null],[5,"cpocon","","",null,null],[5,"zpocon","","",null,null],[5,"sppcon","","",null,null],[5,"dppcon","","",null,null],[5,"cppcon","","",null,null],[5,"zppcon","","",null,null],[5,"spbcon","","",null,null],[5,"dpbcon","","",null,null],[5,"cpbcon","","",null,null],[5,"zpbcon","","",null,null],[5,"sptcon","","",null,null],[5,"dptcon","","",null,null],[5,"cptcon","","",null,null],[5,"zptcon","","",null,null],[5,"ssycon","","",null,null],[5,"dsycon","","",null,null],[5,"csycon","","",null,null],[5,"zsycon","","",null,null],[5,"checon","","",null,null],[5,"zhecon","","",null,null],[5,"sspcon","","",null,null],[5,"dspcon","","",null,null],[5,"cspcon","","",null,null],[5,"zspcon","","",null,null],[5,"chpcon","","",null,null],[5,"zhpcon","","",null,null],[5,"strcon","","",null,null],[5,"dtrcon","","",null,null],[5,"ctrcon","","",null,null],[5,"ztrcon","","",null,null],[5,"stpcon","","",null,null],[5,"dtpcon","","",null,null],[5,"ctpcon","","",null,null],[5,"ztpcon","","",null,null],[5,"stbcon","","",null,null],[5,"dtbcon","","",null,null],[5,"ctbcon","","",null,null],[5,"ztbcon","","",null,null],[5,"sgerfs","","",null,null],[5,"dgerfs","","",null,null],[5,"cgerfs","","",null,null],[5,"zgerfs","","",null,null],[5,"dgerfsx","","",null,null],[5,"sgerfsx","","",null,null],[5,"zgerfsx","","",null,null],[5,"cgerfsx","","",null,null],[5,"sgbrfs","","",null,null],[5,"dgbrfs","","",null,null],[5,"cgbrfs","","",null,null],[5,"zgbrfs","","",null,null],[5,"dgbrfsx","","",null,null],[5,"sgbrfsx","","",null,null],[5,"zgbrfsx","","",null,null],[5,"cgbrfsx","","",null,null],[5,"sgtrfs","","",null,null],[5,"dgtrfs","","",null,null],[5,"cgtrfs","","",null,null],[5,"zgtrfs","","",null,null],[5,"sporfs","","",null,null],[5,"dporfs","","",null,null],[5,"cporfs","","",null,null],[5,"zporfs","","",null,null],[5,"dporfsx","","",null,null],[5,"sporfsx","","",null,null],[5,"zporfsx","","",null,null],[5,"cporfsx","","",null,null],[5,"spprfs","","",null,null],[5,"dpprfs","","",null,null],[5,"cpprfs","","",null,null],[5,"zpprfs","","",null,null],[5,"spbrfs","","",null,null],[5,"dpbrfs","","",null,null],[5,"cpbrfs","","",null,null],[5,"zpbrfs","","",null,null],[5,"sptrfs","","",null,null],[5,"dptrfs","","",null,null],[5,"cptrfs","","",null,null],[5,"zptrfs","","",null,null],[5,"ssyrfs","","",null,null],[5,"dsyrfs","","",null,null],[5,"csyrfs","","",null,null],[5,"zsyrfs","","",null,null],[5,"dsyrfsx","","",null,null],[5,"ssyrfsx","","",null,null],[5,"zsyrfsx","","",null,null],[5,"csyrfsx","","",null,null],[5,"cherfs","","",null,null],[5,"zherfs","","",null,null],[5,"zherfsx","","",null,null],[5,"cherfsx","","",null,null],[5,"ssprfs","","",null,null],[5,"dsprfs","","",null,null],[5,"csprfs","","",null,null],[5,"zsprfs","","",null,null],[5,"chprfs","","",null,null],[5,"zhprfs","","",null,null],[5,"strrfs","","",null,null],[5,"dtrrfs","","",null,null],[5,"ctrrfs","","",null,null],[5,"ztrrfs","","",null,null],[5,"stprfs","","",null,null],[5,"dtprfs","","",null,null],[5,"ctprfs","","",null,null],[5,"ztprfs","","",null,null],[5,"stbrfs","","",null,null],[5,"dtbrfs","","",null,null],[5,"ctbrfs","","",null,null],[5,"ztbrfs","","",null,null],[5,"sgetri","","",null,null],[5,"dgetri","","",null,null],[5,"cgetri","","",null,null],[5,"zgetri","","",null,null],[5,"spotri","","",null,null],[5,"dpotri","","",null,null],[5,"cpotri","","",null,null],[5,"zpotri","","",null,null],[5,"dpftri","","",null,null],[5,"spftri","","",null,null],[5,"zpftri","","",null,null],[5,"cpftri","","",null,null],[5,"spptri","","",null,null],[5,"dpptri","","",null,null],[5,"cpptri","","",null,null],[5,"zpptri","","",null,null],[5,"ssytri","","",null,null],[5,"dsytri","","",null,null],[5,"csytri","","",null,null],[5,"zsytri","","",null,null],[5,"chetri","","",null,null],[5,"zhetri","","",null,null],[5,"ssptri","","",null,null],[5,"dsptri","","",null,null],[5,"csptri","","",null,null],[5,"zsptri","","",null,null],[5,"chptri","","",null,null],[5,"zhptri","","",null,null],[5,"strtri","","",null,null],[5,"dtrtri","","",null,null],[5,"ctrtri","","",null,null],[5,"ztrtri","","",null,null],[5,"dtftri","","",null,null],[5,"stftri","","",null,null],[5,"ztftri","","",null,null],[5,"ctftri","","",null,null],[5,"stptri","","",null,null],[5,"dtptri","","",null,null],[5,"ctptri","","",null,null],[5,"ztptri","","",null,null],[5,"sgeequ","","",null,null],[5,"dgeequ","","",null,null],[5,"cgeequ","","",null,null],[5,"zgeequ","","",null,null],[5,"dgeequb","","",null,null],[5,"sgeequb","","",null,null],[5,"zgeequb","","",null,null],[5,"cgeequb","","",null,null],[5,"sgbequ","","",null,null],[5,"dgbequ","","",null,null],[5,"cgbequ","","",null,null],[5,"zgbequ","","",null,null],[5,"dgbequb","","",null,null],[5,"sgbequb","","",null,null],[5,"zgbequb","","",null,null],[5,"cgbequb","","",null,null],[5,"spoequ","","",null,null],[5,"dpoequ","","",null,null],[5,"cpoequ","","",null,null],[5,"zpoequ","","",null,null],[5,"dpoequb","","",null,null],[5,"spoequb","","",null,null],[5,"zpoequb","","",null,null],[5,"cpoequb","","",null,null],[5,"sppequ","","",null,null],[5,"dppequ","","",null,null],[5,"cppequ","","",null,null],[5,"zppequ","","",null,null],[5,"spbequ","","",null,null],[5,"dpbequ","","",null,null],[5,"cpbequ","","",null,null],[5,"zpbequ","","",null,null],[5,"dsyequb","","",null,null],[5,"ssyequb","","",null,null],[5,"zsyequb","","",null,null],[5,"csyequb","","",null,null],[5,"zheequb","","",null,null],[5,"cheequb","","",null,null],[5,"sgesv","","",null,null],[5,"dgesv","","",null,null],[5,"cgesv","","",null,null],[5,"zgesv","","",null,null],[5,"dsgesv","","",null,null],[5,"zcgesv","","",null,null],[5,"sgesvx","","",null,null],[5,"dgesvx","","",null,null],[5,"cgesvx","","",null,null],[5,"zgesvx","","",null,null],[5,"dgesvxx","","",null,null],[5,"sgesvxx","","",null,null],[5,"zgesvxx","","",null,null],[5,"cgesvxx","","",null,null],[5,"sgbsv","","",null,null],[5,"dgbsv","","",null,null],[5,"cgbsv","","",null,null],[5,"zgbsv","","",null,null],[5,"sgbsvx","","",null,null],[5,"dgbsvx","","",null,null],[5,"cgbsvx","","",null,null],[5,"zgbsvx","","",null,null],[5,"dgbsvxx","","",null,null],[5,"sgbsvxx","","",null,null],[5,"zgbsvxx","","",null,null],[5,"cgbsvxx","","",null,null],[5,"sgtsv","","",null,null],[5,"dgtsv","","",null,null],[5,"cgtsv","","",null,null],[5,"zgtsv","","",null,null],[5,"sgtsvx","","",null,null],[5,"dgtsvx","","",null,null],[5,"cgtsvx","","",null,null],[5,"zgtsvx","","",null,null],[5,"sposv","","",null,null],[5,"dposv","","",null,null],[5,"cposv","","",null,null],[5,"zposv","","",null,null],[5,"dsposv","","",null,null],[5,"zcposv","","",null,null],[5,"sposvx","","",null,null],[5,"dposvx","","",null,null],[5,"cposvx","","",null,null],[5,"zposvx","","",null,null],[5,"dposvxx","","",null,null],[5,"sposvxx","","",null,null],[5,"zposvxx","","",null,null],[5,"cposvxx","","",null,null],[5,"sppsv","","",null,null],[5,"dppsv","","",null,null],[5,"cppsv","","",null,null],[5,"zppsv","","",null,null],[5,"sppsvx","","",null,null],[5,"dppsvx","","",null,null],[5,"cppsvx","","",null,null],[5,"zppsvx","","",null,null],[5,"spbsv","","",null,null],[5,"dpbsv","","",null,null],[5,"cpbsv","","",null,null],[5,"zpbsv","","",null,null],[5,"spbsvx","","",null,null],[5,"dpbsvx","","",null,null],[5,"cpbsvx","","",null,null],[5,"zpbsvx","","",null,null],[5,"sptsv","","",null,null],[5,"dptsv","","",null,null],[5,"cptsv","","",null,null],[5,"zptsv","","",null,null],[5,"sptsvx","","",null,null],[5,"dptsvx","","",null,null],[5,"cptsvx","","",null,null],[5,"zptsvx","","",null,null],[5,"ssysv","","",null,null],[5,"dsysv","","",null,null],[5,"csysv","","",null,null],[5,"zsysv","","",null,null],[5,"ssysvx","","",null,null],[5,"dsysvx","","",null,null],[5,"csysvx","","",null,null],[5,"zsysvx","","",null,null],[5,"dsysvxx","","",null,null],[5,"ssysvxx","","",null,null],[5,"zsysvxx","","",null,null],[5,"csysvxx","","",null,null],[5,"chesv","","",null,null],[5,"zhesv","","",null,null],[5,"chesvx","","",null,null],[5,"zhesvx","","",null,null],[5,"zhesvxx","","",null,null],[5,"chesvxx","","",null,null],[5,"sspsv","","",null,null],[5,"dspsv","","",null,null],[5,"cspsv","","",null,null],[5,"zspsv","","",null,null],[5,"sspsvx","","",null,null],[5,"dspsvx","","",null,null],[5,"cspsvx","","",null,null],[5,"zspsvx","","",null,null],[5,"chpsv","","",null,null],[5,"zhpsv","","",null,null],[5,"chpsvx","","",null,null],[5,"zhpsvx","","",null,null],[5,"sgeqrf","","",null,null],[5,"dgeqrf","","",null,null],[5,"cgeqrf","","",null,null],[5,"zgeqrf","","",null,null],[5,"sgeqpf","","",null,null],[5,"dgeqpf","","",null,null],[5,"cgeqpf","","",null,null],[5,"zgeqpf","","",null,null],[5,"sgeqp3","","",null,null],[5,"dgeqp3","","",null,null],[5,"cgeqp3","","",null,null],[5,"zgeqp3","","",null,null],[5,"sorgqr","","",null,null],[5,"dorgqr","","",null,null],[5,"sormqr","","",null,null],[5,"dormqr","","",null,null],[5,"cungqr","","",null,null],[5,"zungqr","","",null,null],[5,"cunmqr","","",null,null],[5,"zunmqr","","",null,null],[5,"sgelqf","","",null,null],[5,"dgelqf","","",null,null],[5,"cgelqf","","",null,null],[5,"zgelqf","","",null,null],[5,"sorglq","","",null,null],[5,"dorglq","","",null,null],[5,"sormlq","","",null,null],[5,"dormlq","","",null,null],[5,"cunglq","","",null,null],[5,"zunglq","","",null,null],[5,"cunmlq","","",null,null],[5,"zunmlq","","",null,null],[5,"sgeqlf","","",null,null],[5,"dgeqlf","","",null,null],[5,"cgeqlf","","",null,null],[5,"zgeqlf","","",null,null],[5,"sorgql","","",null,null],[5,"dorgql","","",null,null],[5,"cungql","","",null,null],[5,"zungql","","",null,null],[5,"sormql","","",null,null],[5,"dormql","","",null,null],[5,"cunmql","","",null,null],[5,"zunmql","","",null,null],[5,"sgerqf","","",null,null],[5,"dgerqf","","",null,null],[5,"cgerqf","","",null,null],[5,"zgerqf","","",null,null],[5,"sorgrq","","",null,null],[5,"dorgrq","","",null,null],[5,"cungrq","","",null,null],[5,"zungrq","","",null,null],[5,"sormrq","","",null,null],[5,"dormrq","","",null,null],[5,"cunmrq","","",null,null],[5,"zunmrq","","",null,null],[5,"stzrzf","","",null,null],[5,"dtzrzf","","",null,null],[5,"ctzrzf","","",null,null],[5,"ztzrzf","","",null,null],[5,"sormrz","","",null,null],[5,"dormrz","","",null,null],[5,"cunmrz","","",null,null],[5,"zunmrz","","",null,null],[5,"sggqrf","","",null,null],[5,"dggqrf","","",null,null],[5,"cggqrf","","",null,null],[5,"zggqrf","","",null,null],[5,"sggrqf","","",null,null],[5,"dggrqf","","",null,null],[5,"cggrqf","","",null,null],[5,"zggrqf","","",null,null],[5,"sgebrd","","",null,null],[5,"dgebrd","","",null,null],[5,"cgebrd","","",null,null],[5,"zgebrd","","",null,null],[5,"sgbbrd","","",null,null],[5,"dgbbrd","","",null,null],[5,"cgbbrd","","",null,null],[5,"zgbbrd","","",null,null],[5,"sorgbr","","",null,null],[5,"dorgbr","","",null,null],[5,"sormbr","","",null,null],[5,"dormbr","","",null,null],[5,"cungbr","","",null,null],[5,"zungbr","","",null,null],[5,"cunmbr","","",null,null],[5,"zunmbr","","",null,null],[5,"sbdsqr","","",null,null],[5,"dbdsqr","","",null,null],[5,"cbdsqr","","",null,null],[5,"zbdsqr","","",null,null],[5,"sbdsdc","","",null,null],[5,"dbdsdc","","",null,null],[5,"sbdsvdx","","",null,null],[5,"dbdsvdx","","",null,null],[5,"ssytrd","","",null,null],[5,"dsytrd","","",null,null],[5,"sorgtr","","",null,null],[5,"dorgtr","","",null,null],[5,"sormtr","","",null,null],[5,"dormtr","","",null,null],[5,"chetrd","","",null,null],[5,"zhetrd","","",null,null],[5,"cungtr","","",null,null],[5,"zungtr","","",null,null],[5,"cunmtr","","",null,null],[5,"zunmtr","","",null,null],[5,"ssptrd","","",null,null],[5,"dsptrd","","",null,null],[5,"sopgtr","","",null,null],[5,"dopgtr","","",null,null],[5,"sopmtr","","",null,null],[5,"dopmtr","","",null,null],[5,"chptrd","","",null,null],[5,"zhptrd","","",null,null],[5,"cupgtr","","",null,null],[5,"zupgtr","","",null,null],[5,"cupmtr","","",null,null],[5,"zupmtr","","",null,null],[5,"ssbtrd","","",null,null],[5,"dsbtrd","","",null,null],[5,"chbtrd","","",null,null],[5,"zhbtrd","","",null,null],[5,"ssterf","","",null,null],[5,"dsterf","","",null,null],[5,"ssteqr","","",null,null],[5,"dsteqr","","",null,null],[5,"csteqr","","",null,null],[5,"zsteqr","","",null,null],[5,"sstemr","","",null,null],[5,"dstemr","","",null,null],[5,"cstemr","","",null,null],[5,"zstemr","","",null,null],[5,"sstedc","","",null,null],[5,"dstedc","","",null,null],[5,"cstedc","","",null,null],[5,"zstedc","","",null,null],[5,"sstegr","","",null,null],[5,"dstegr","","",null,null],[5,"cstegr","","",null,null],[5,"zstegr","","",null,null],[5,"spteqr","","",null,null],[5,"dpteqr","","",null,null],[5,"cpteqr","","",null,null],[5,"zpteqr","","",null,null],[5,"sstebz","","",null,null],[5,"dstebz","","",null,null],[5,"sstein","","",null,null],[5,"dstein","","",null,null],[5,"cstein","","",null,null],[5,"zstein","","",null,null],[5,"sdisna","","",null,null],[5,"ddisna","","",null,null],[5,"ssygst","","",null,null],[5,"dsygst","","",null,null],[5,"chegst","","",null,null],[5,"zhegst","","",null,null],[5,"sspgst","","",null,null],[5,"dspgst","","",null,null],[5,"chpgst","","",null,null],[5,"zhpgst","","",null,null],[5,"ssbgst","","",null,null],[5,"dsbgst","","",null,null],[5,"chbgst","","",null,null],[5,"zhbgst","","",null,null],[5,"spbstf","","",null,null],[5,"dpbstf","","",null,null],[5,"cpbstf","","",null,null],[5,"zpbstf","","",null,null],[5,"sgehrd","","",null,null],[5,"dgehrd","","",null,null],[5,"cgehrd","","",null,null],[5,"zgehrd","","",null,null],[5,"sorghr","","",null,null],[5,"dorghr","","",null,null],[5,"sormhr","","",null,null],[5,"dormhr","","",null,null],[5,"cunghr","","",null,null],[5,"zunghr","","",null,null],[5,"cunmhr","","",null,null],[5,"zunmhr","","",null,null],[5,"sgebal","","",null,null],[5,"dgebal","","",null,null],[5,"cgebal","","",null,null],[5,"zgebal","","",null,null],[5,"sgebak","","",null,null],[5,"dgebak","","",null,null],[5,"cgebak","","",null,null],[5,"zgebak","","",null,null],[5,"shseqr","","",null,null],[5,"dhseqr","","",null,null],[5,"chseqr","","",null,null],[5,"zhseqr","","",null,null],[5,"shsein","","",null,null],[5,"dhsein","","",null,null],[5,"chsein","","",null,null],[5,"zhsein","","",null,null],[5,"strevc","","",null,null],[5,"dtrevc","","",null,null],[5,"ctrevc","","",null,null],[5,"ztrevc","","",null,null],[5,"strsna","","",null,null],[5,"dtrsna","","",null,null],[5,"ctrsna","","",null,null],[5,"ztrsna","","",null,null],[5,"strexc","","",null,null],[5,"dtrexc","","",null,null],[5,"ctrexc","","",null,null],[5,"ztrexc","","",null,null],[5,"strsen","","",null,null],[5,"dtrsen","","",null,null],[5,"ctrsen","","",null,null],[5,"ztrsen","","",null,null],[5,"strsyl","","",null,null],[5,"dtrsyl","","",null,null],[5,"ctrsyl","","",null,null],[5,"ztrsyl","","",null,null],[5,"sgghrd","","",null,null],[5,"dgghrd","","",null,null],[5,"cgghrd","","",null,null],[5,"zgghrd","","",null,null],[5,"sgghd3","","",null,null],[5,"dgghd3","","",null,null],[5,"cgghd3","","",null,null],[5,"zgghd3","","",null,null],[5,"sggbal","","",null,null],[5,"dggbal","","",null,null],[5,"cggbal","","",null,null],[5,"zggbal","","",null,null],[5,"sggbak","","",null,null],[5,"dggbak","","",null,null],[5,"cggbak","","",null,null],[5,"zggbak","","",null,null],[5,"shgeqz","","",null,null],[5,"dhgeqz","","",null,null],[5,"chgeqz","","",null,null],[5,"zhgeqz","","",null,null],[5,"stgevc","","",null,null],[5,"dtgevc","","",null,null],[5,"ctgevc","","",null,null],[5,"ztgevc","","",null,null],[5,"stgexc","","",null,null],[5,"dtgexc","","",null,null],[5,"ctgexc","","",null,null],[5,"ztgexc","","",null,null],[5,"stgsen","","",null,null],[5,"dtgsen","","",null,null],[5,"ctgsen","","",null,null],[5,"ztgsen","","",null,null],[5,"stgsyl","","",null,null],[5,"dtgsyl","","",null,null],[5,"ctgsyl","","",null,null],[5,"ztgsyl","","",null,null],[5,"stgsna","","",null,null],[5,"dtgsna","","",null,null],[5,"ctgsna","","",null,null],[5,"ztgsna","","",null,null],[5,"sggsvp","","",null,null],[5,"dggsvp","","",null,null],[5,"cggsvp","","",null,null],[5,"zggsvp","","",null,null],[5,"sggsvp3","","",null,null],[5,"dggsvp3","","",null,null],[5,"cggsvp3","","",null,null],[5,"zggsvp3","","",null,null],[5,"stgsja","","",null,null],[5,"dtgsja","","",null,null],[5,"ctgsja","","",null,null],[5,"ztgsja","","",null,null],[5,"sgels","","",null,null],[5,"dgels","","",null,null],[5,"cgels","","",null,null],[5,"zgels","","",null,null],[5,"sgelsy","","",null,null],[5,"dgelsy","","",null,null],[5,"cgelsy","","",null,null],[5,"zgelsy","","",null,null],[5,"sgelss","","",null,null],[5,"dgelss","","",null,null],[5,"cgelss","","",null,null],[5,"zgelss","","",null,null],[5,"sgelsd","","",null,null],[5,"dgelsd","","",null,null],[5,"cgelsd","","",null,null],[5,"zgelsd","","",null,null],[5,"sgglse","","",null,null],[5,"dgglse","","",null,null],[5,"cgglse","","",null,null],[5,"zgglse","","",null,null],[5,"sggglm","","",null,null],[5,"dggglm","","",null,null],[5,"cggglm","","",null,null],[5,"zggglm","","",null,null],[5,"ssyev","","",null,null],[5,"dsyev","","",null,null],[5,"cheev","","",null,null],[5,"zheev","","",null,null],[5,"ssyevd","","",null,null],[5,"dsyevd","","",null,null],[5,"cheevd","","",null,null],[5,"zheevd","","",null,null],[5,"ssyevx","","",null,null],[5,"dsyevx","","",null,null],[5,"cheevx","","",null,null],[5,"zheevx","","",null,null],[5,"ssyevr","","",null,null],[5,"dsyevr","","",null,null],[5,"cheevr","","",null,null],[5,"zheevr","","",null,null],[5,"sspev","","",null,null],[5,"dspev","","",null,null],[5,"chpev","","",null,null],[5,"zhpev","","",null,null],[5,"sspevd","","",null,null],[5,"dspevd","","",null,null],[5,"chpevd","","",null,null],[5,"zhpevd","","",null,null],[5,"sspevx","","",null,null],[5,"dspevx","","",null,null],[5,"chpevx","","",null,null],[5,"zhpevx","","",null,null],[5,"ssbev","","",null,null],[5,"dsbev","","",null,null],[5,"chbev","","",null,null],[5,"zhbev","","",null,null],[5,"ssbevd","","",null,null],[5,"dsbevd","","",null,null],[5,"chbevd","","",null,null],[5,"zhbevd","","",null,null],[5,"ssbevx","","",null,null],[5,"dsbevx","","",null,null],[5,"chbevx","","",null,null],[5,"zhbevx","","",null,null],[5,"sstev","","",null,null],[5,"dstev","","",null,null],[5,"sstevd","","",null,null],[5,"dstevd","","",null,null],[5,"sstevx","","",null,null],[5,"dstevx","","",null,null],[5,"sstevr","","",null,null],[5,"dstevr","","",null,null],[5,"sgees","","",null,null],[5,"dgees","","",null,null],[5,"cgees","","",null,null],[5,"zgees","","",null,null],[5,"sgeesx","","",null,null],[5,"dgeesx","","",null,null],[5,"cgeesx","","",null,null],[5,"zgeesx","","",null,null],[5,"sgeev","","",null,null],[5,"dgeev","","",null,null],[5,"cgeev","","",null,null],[5,"zgeev","","",null,null],[5,"sgeevx","","",null,null],[5,"dgeevx","","",null,null],[5,"cgeevx","","",null,null],[5,"zgeevx","","",null,null],[5,"sgesvd","","",null,null],[5,"dgesvd","","",null,null],[5,"cgesvd","","",null,null],[5,"zgesvd","","",null,null],[5,"sgesvdx","","",null,null],[5,"dgesvdx","","",null,null],[5,"cgesvdx","","",null,null],[5,"zgesvdx","","",null,null],[5,"sgesdd","","",null,null],[5,"dgesdd","","",null,null],[5,"cgesdd","","",null,null],[5,"zgesdd","","",null,null],[5,"dgejsv","","",null,null],[5,"sgejsv","","",null,null],[5,"cgejsv","","",null,null],[5,"zgejsv","","",null,null],[5,"dgesvj","","",null,null],[5,"sgesvj","","",null,null],[5,"cgesvj","","",null,null],[5,"zgesvj","","",null,null],[5,"sggsvd","","",null,null],[5,"dggsvd","","",null,null],[5,"cggsvd","","",null,null],[5,"zggsvd","","",null,null],[5,"sggsvd3","","",null,null],[5,"dggsvd3","","",null,null],[5,"cggsvd3","","",null,null],[5,"zggsvd3","","",null,null],[5,"ssygv","","",null,null],[5,"dsygv","","",null,null],[5,"chegv","","",null,null],[5,"zhegv","","",null,null],[5,"ssygvd","","",null,null],[5,"dsygvd","","",null,null],[5,"chegvd","","",null,null],[5,"zhegvd","","",null,null],[5,"ssygvx","","",null,null],[5,"dsygvx","","",null,null],[5,"chegvx","","",null,null],[5,"zhegvx","","",null,null],[5,"sspgv","","",null,null],[5,"dspgv","","",null,null],[5,"chpgv","","",null,null],[5,"zhpgv","","",null,null],[5,"sspgvd","","",null,null],[5,"dspgvd","","",null,null],[5,"chpgvd","","",null,null],[5,"zhpgvd","","",null,null],[5,"sspgvx","","",null,null],[5,"dspgvx","","",null,null],[5,"chpgvx","","",null,null],[5,"zhpgvx","","",null,null],[5,"ssbgv","","",null,null],[5,"dsbgv","","",null,null],[5,"chbgv","","",null,null],[5,"zhbgv","","",null,null],[5,"ssbgvd","","",null,null],[5,"dsbgvd","","",null,null],[5,"chbgvd","","",null,null],[5,"zhbgvd","","",null,null],[5,"ssbgvx","","",null,null],[5,"dsbgvx","","",null,null],[5,"chbgvx","","",null,null],[5,"zhbgvx","","",null,null],[5,"sgges","","",null,null],[5,"dgges","","",null,null],[5,"cgges","","",null,null],[5,"zgges","","",null,null],[5,"sgges3","","",null,null],[5,"dgges3","","",null,null],[5,"cgges3","","",null,null],[5,"zgges3","","",null,null],[5,"sggesx","","",null,null],[5,"dggesx","","",null,null],[5,"cggesx","","",null,null],[5,"zggesx","","",null,null],[5,"sggev","","",null,null],[5,"dggev","","",null,null],[5,"cggev","","",null,null],[5,"zggev","","",null,null],[5,"sggev3","","",null,null],[5,"dggev3","","",null,null],[5,"cggev3","","",null,null],[5,"zggev3","","",null,null],[5,"sggevx","","",null,null],[5,"dggevx","","",null,null],[5,"cggevx","","",null,null],[5,"zggevx","","",null,null],[5,"dsfrk","","",null,null],[5,"ssfrk","","",null,null],[5,"zhfrk","","",null,null],[5,"chfrk","","",null,null],[5,"dtfsm","","",null,null],[5,"stfsm","","",null,null],[5,"ztfsm","","",null,null],[5,"ctfsm","","",null,null],[5,"dtfttp","","",null,null],[5,"stfttp","","",null,null],[5,"ztfttp","","",null,null],[5,"ctfttp","","",null,null],[5,"dtfttr","","",null,null],[5,"stfttr","","",null,null],[5,"ztfttr","","",null,null],[5,"ctfttr","","",null,null],[5,"dtpttf","","",null,null],[5,"stpttf","","",null,null],[5,"ztpttf","","",null,null],[5,"ctpttf","","",null,null],[5,"dtpttr","","",null,null],[5,"stpttr","","",null,null],[5,"ztpttr","","",null,null],[5,"ctpttr","","",null,null],[5,"dtrttf","","",null,null],[5,"strttf","","",null,null],[5,"ztrttf","","",null,null],[5,"ctrttf","","",null,null],[5,"dtrttp","","",null,null],[5,"strttp","","",null,null],[5,"ztrttp","","",null,null],[5,"ctrttp","","",null,null],[5,"sgeqrfp","","",null,null],[5,"dgeqrfp","","",null,null],[5,"cgeqrfp","","",null,null],[5,"zgeqrfp","","",null,null],[5,"clacgv","","",null,null],[5,"zlacgv","","",null,null],[5,"slarnv","","",null,null],[5,"dlarnv","","",null,null],[5,"clarnv","","",null,null],[5,"zlarnv","","",null,null],[5,"sgeqr2","","",null,null],[5,"dgeqr2","","",null,null],[5,"cgeqr2","","",null,null],[5,"zgeqr2","","",null,null],[5,"slacn2","","",null,null],[5,"dlacn2","","",null,null],[5,"clacn2","","",null,null],[5,"zlacn2","","",null,null],[5,"slacpy","","",null,null],[5,"dlacpy","","",null,null],[5,"clacpy","","",null,null],[5,"zlacpy","","",null,null],[5,"clacp2","","",null,null],[5,"zlacp2","","",null,null],[5,"sgetf2","","",null,null],[5,"dgetf2","","",null,null],[5,"cgetf2","","",null,null],[5,"zgetf2","","",null,null],[5,"slaswp","","",null,null],[5,"dlaswp","","",null,null],[5,"claswp","","",null,null],[5,"zlaswp","","",null,null],[5,"slange","","",null,null],[5,"dlange","","",null,null],[5,"clange","","",null,null],[5,"zlange","","",null,null],[5,"clanhe","","",null,null],[5,"zlanhe","","",null,null],[5,"slansy","","",null,null],[5,"dlansy","","",null,null],[5,"clansy","","",null,null],[5,"zlansy","","",null,null],[5,"slantr","","",null,null],[5,"dlantr","","",null,null],[5,"clantr","","",null,null],[5,"zlantr","","",null,null],[5,"slamch","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f32"}}],[5,"dlamch","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"f64"}}],[5,"sgelq2","","",null,null],[5,"dgelq2","","",null,null],[5,"cgelq2","","",null,null],[5,"zgelq2","","",null,null],[5,"slarfb","","",null,null],[5,"dlarfb","","",null,null],[5,"clarfb","","",null,null],[5,"zlarfb","","",null,null],[5,"slarfg","","",null,null],[5,"dlarfg","","",null,null],[5,"clarfg","","",null,null],[5,"zlarfg","","",null,null],[5,"slarft","","",null,null],[5,"dlarft","","",null,null],[5,"clarft","","",null,null],[5,"zlarft","","",null,null],[5,"slarfx","","",null,null],[5,"dlarfx","","",null,null],[5,"clarfx","","",null,null],[5,"zlarfx","","",null,null],[5,"slatms","","",null,null],[5,"dlatms","","",null,null],[5,"clatms","","",null,null],[5,"zlatms","","",null,null],[5,"slag2d","","",null,null],[5,"dlag2s","","",null,null],[5,"clag2z","","",null,null],[5,"zlag2c","","",null,null],[5,"slauum","","",null,null],[5,"dlauum","","",null,null],[5,"clauum","","",null,null],[5,"zlauum","","",null,null],[5,"slagge","","",null,null],[5,"dlagge","","",null,null],[5,"clagge","","",null,null],[5,"zlagge","","",null,null],[5,"slascl","","",null,null],[5,"dlascl","","",null,null],[5,"clascl","","",null,null],[5,"zlascl","","",null,null],[5,"slaset","","",null,null],[5,"dlaset","","",null,null],[5,"claset","","",null,null],[5,"zlaset","","",null,null],[5,"slasrt","","",null,null],[5,"dlasrt","","",null,null],[5,"claghe","","",null,null],[5,"zlaghe","","",null,null],[5,"slagsy","","",null,null],[5,"dlagsy","","",null,null],[5,"clagsy","","",null,null],[5,"zlagsy","","",null,null],[5,"slapmr","","",null,null],[5,"dlapmr","","",null,null],[5,"clapmr","","",null,null],[5,"zlapmr","","",null,null],[5,"slapmt","","",null,null],[5,"dlapmt","","",null,null],[5,"clapmt","","",null,null],[5,"zlapmt","","",null,null],[5,"slapy2","","",null,null],[5,"dlapy2","","",null,null],[5,"slapy3","","",null,null],[5,"dlapy3","","",null,null],[5,"slartgp","","",null,null],[5,"dlartgp","","",null,null],[5,"slartgs","","",null,null],[5,"dlartgs","","",null,null],[5,"cbbcsd","","",null,null],[5,"cheswapr","","",null,null],[5,"chetri2","","",null,null],[5,"chetri2x","","",null,null],[5,"chetrs2","","",null,null],[5,"csyconv","","",null,null],[5,"csyswapr","","",null,null],[5,"csytri2","","",null,null],[5,"csytri2x","","",null,null],[5,"csytrs2","","",null,null],[5,"cunbdb","","",null,null],[5,"cuncsd","","",null,null],[5,"cuncsd2by1","","",null,null],[5,"dbbcsd","","",null,null],[5,"dorbdb","","",null,null],[5,"dorcsd","","",null,null],[5,"dorcsd2by1","","",null,null],[5,"dsyconv","","",null,null],[5,"dsyswapr","","",null,null],[5,"dsytri2","","",null,null],[5,"dsytri2x","","",null,null],[5,"dsytrs2","","",null,null],[5,"sbbcsd","","",null,null],[5,"sorbdb","","",null,null],[5,"sorcsd","","",null,null],[5,"sorcsd2by1","","",null,null],[5,"ssyconv","","",null,null],[5,"ssyswapr","","",null,null],[5,"ssytri2","","",null,null],[5,"ssytri2x","","",null,null],[5,"ssytrs2","","",null,null],[5,"zbbcsd","","",null,null],[5,"zheswapr","","",null,null],[5,"zhetri2","","",null,null],[5,"zhetri2x","","",null,null],[5,"zhetrs2","","",null,null],[5,"zsyconv","","",null,null],[5,"zsyswapr","","",null,null],[5,"zsytri2","","",null,null],[5,"zsytri2x","","",null,null],[5,"zsytrs2","","",null,null],[5,"zunbdb","","",null,null],[5,"zuncsd","","",null,null],[5,"zuncsd2by1","","",null,null],[5,"sgemqrt","","",null,null],[5,"dgemqrt","","",null,null],[5,"cgemqrt","","",null,null],[5,"zgemqrt","","",null,null],[5,"sgeqrt","","",null,null],[5,"dgeqrt","","",null,null],[5,"cgeqrt","","",null,null],[5,"zgeqrt","","",null,null],[5,"sgeqrt2","","",null,null],[5,"dgeqrt2","","",null,null],[5,"cgeqrt2","","",null,null],[5,"zgeqrt2","","",null,null],[5,"sgeqrt3","","",null,null],[5,"dgeqrt3","","",null,null],[5,"cgeqrt3","","",null,null],[5,"zgeqrt3","","",null,null],[5,"stpmqrt","","",null,null],[5,"dtpmqrt","","",null,null],[5,"ctpmqrt","","",null,null],[5,"ztpmqrt","","",null,null],[5,"stpqrt","","",null,null],[5,"dtpqrt","","",null,null],[5,"ctpqrt","","",null,null],[5,"ztpqrt","","",null,null],[5,"stpqrt2","","",null,null],[5,"dtpqrt2","","",null,null],[5,"ctpqrt2","","",null,null],[5,"ztpqrt2","","",null,null],[5,"stprfb","","",null,null],[5,"dtprfb","","",null,null],[5,"ctprfb","","",null,null],[5,"ztprfb","","",null,null],[5,"ssysv_rook","","",null,null],[5,"dsysv_rook","","",null,null],[5,"csysv_rook","","",null,null],[5,"zsysv_rook","","",null,null],[5,"ssytrf_rook","","",null,null],[5,"dsytrf_rook","","",null,null],[5,"csytrf_rook","","",null,null],[5,"zsytrf_rook","","",null,null],[5,"ssytrs_rook","","",null,null],[5,"dsytrs_rook","","",null,null],[5,"csytrs_rook","","",null,null],[5,"zsytrs_rook","","",null,null],[5,"chetrf_rook","","",null,null],[5,"zhetrf_rook","","",null,null],[5,"chetrs_rook","","",null,null],[5,"zhetrs_rook","","",null,null],[5,"csyr","","",null,null],[5,"zsyr","","",null,null],[5,"ilaver","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[6,"Select2F32","","",null,null],[6,"Select3F32","","",null,null],[6,"Select2F64","","",null,null],[6,"Select3F64","","",null,null],[6,"Select1C32","","",null,null],[6,"Select2C32","","",null,null],[6,"Select1C64","","",null,null],[6,"Select2C64","","",null,null],[6,"c32","lapack","A complex number with 32-bit parts.",null,null],[6,"c64","","A complex number with 64-bit parts.",null,null]],"paths":[[4,"Error"],[4,"Layout"]]};
searchIndex["ndarray"] = {"doc":"The `ndarray` crate provides an N-dimensional container for general elements\nand for numerics.","items":[[3,"Axis","ndarray","An axis index.",null,null],[12,"0","","",0,null],[3,"Indexes","","An iterator over the indexes of an array shape.",null,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[3,"Si","","A slice, a description of a range of an array axis.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"InnerIter","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",null,null],[3,"InnerIterMut","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row (mutable).",null,null],[3,"AxisIter","","An iterator that traverses over an axis and\nand yields each subview.",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and\nand yields each subview (mutable)",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis\nand yields views of the specified size on this axis.",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis\nand yields mutable views of the specified size on this axis.",null,null],[3,"ArrayBase","","An *N*-dimensional array.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Elements","","An iterator over the elements of an array.",null,null],[3,"ElementsMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Indexed","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedMut","","An iterator over the indexes and elements of an array (mutable).",null,null],[3,"Shape","","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions c-order, f-order or custom strides.",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",2,null],[13,"IncompatibleLayout","","incompatible memory layout",2,null],[13,"RangeLimited","","the shape does not fit inside type limits",2,null],[13,"OutOfBounds","","out of bounds indexing",2,null],[13,"Unsupported","","aliasing array elements",2,null],[5,"stack","","Stack arrays along the given axis.",null,null],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"array0"}}],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,null],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,null],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"arrayview0"}}],[5,"aview1","","Create a one-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview2","","Create a two-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview_mut1","","Create a one-dimensional read-write array view with elements borrowing `xs`.",null,null],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,null],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,null],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,null],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"eq","","",3,null],[11,"from_iter","","",3,{"inputs":[{"name":"i"}],"output":{"name":"arraybase"}}],[11,"hash","","",3,null],[11,"from","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"arraybase"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"arraybase"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"_data_slice","","",4,null],[11,"clone_with_ptr","","",4,null],[11,"_data_slice","","",4,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"axis","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"clone","","",0,null],[11,"clone","","",5,null],[11,"new","","Create an iterator over the array shape `dim`.",5,{"inputs":[{"name":"d"}],"output":{"name":"indexes"}}],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"fold","","",6,null],[11,"next_back","","",6,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"fold","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"split_at","","Split the iterator at index, yielding two disjoint iterators.",12,null],[11,"clone","","",12,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null],[11,"split_at","","Split the iterator at index, yielding two disjoint iterators.",13,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"from","","",1,{"inputs":[{"name":"range"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangefrom"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangeto"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangefull"}],"output":{"name":"si"}}],[11,"step","","",1,null],[11,"clone","","",1,null],[11,"clone","","",16,null],[11,"kind","","Return the `ErrorKind` of this error.",16,null],[11,"from_kind","","Create a new `ShapeError`",16,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"eq","","",16,null],[11,"description","","",16,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"from","","",17,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"from","","",18,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"from","","",18,{"inputs":[{"name":"shape"}],"output":{"name":"self"}}],[11,"f","","",17,null],[11,"set_f","","",17,null],[11,"strides","","",17,null],[0,"prelude","","ndarray prelude.",null,null],[11,"clone","","",3,null],[11,"from_vec","","Create a one-dimensional array from a vector (no copying needed).",3,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from_iter","","Create a one-dimensional array from an iterable.",3,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"linspace","","Create a one-dimensional array from the inclusive interval\n`[start, end]` with `n` elements. `F` must be a floating point type.",3,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"self"}}],[11,"range","","Create a one-dimensional array from the half-open interval\n`[start, end)` with elements spaced by `step`. `F` must be a floating point type.",3,{"inputs":[{"name":"f"},{"name":"f"},{"name":"f"}],"output":{"name":"self"}}],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",3,{"inputs":[{"name":"ix"}],"output":{"name":"self"}}],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",3,{"inputs":[{"name":"sh"},{"name":"a"}],"output":{"name":"self"}}],[11,"zeros","","Create an array with zeros, shape `shape`.",3,{"inputs":[{"name":"sh"}],"output":{"name":"self"}}],[11,"default","","Create an array with default values, shape `shape`",3,{"inputs":[{"name":"sh"}],"output":{"name":"self"}}],[11,"from_shape_fn","","Create an array with values created by the function `f`.",3,{"inputs":[{"name":"sh"},{"name":"f"}],"output":{"name":"self"}}],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No cloning of\nelements needed.)",3,{"inputs":[{"name":"sh"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_shape_vec_unchecked","","Create an array from a vector and interpret it according to the\nprovided dimensions and strides. (No cloning of elements needed.)",3,{"inputs":[{"name":"sh"},{"name":"vec"}],"output":{"name":"self"}}],[11,"len","","Return the total number of elements in the array.",3,null],[11,"dim","","Return the shape of the array.",3,null],[11,"shape","","Return the shape of the array as a slice.",3,null],[11,"strides","","Return the strides of the array",3,null],[11,"ndim","","Return the number of dimensions (axes) in the array",3,null],[11,"view","","Return a read-only view of the array",3,null],[11,"view_mut","","Return a read-write view of the array",3,null],[11,"to_owned","","Return an uniquely owned copy of the array",3,null],[11,"to_shared","","Return a shared ownership (copy on write) array.",3,null],[11,"into_shared","","Turn the array into a shared ownership (copy on write) array,\nwithout any copying.",3,null],[11,"iter","","Return an iterator of references to the elements of the array.",3,null],[11,"iter_mut","","Return an iterator of mutable references to the elements of the array.",3,null],[11,"indexed_iter","","Return an iterator of indexes and references to the elements of the array.",3,null],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to the elements of the array.",3,null],[11,"slice","","Return a sliced array.",3,null],[11,"slice_mut","","Return a sliced read-write view of the array.",3,null],[11,"islice","","Slice the array’s view in place.",3,null],[11,"get","","Return a reference to the element at `index`, or return `None`\nif the index is out of bounds.",3,null],[11,"get_mut","","Return a mutable reference to the element at `index`, or return `None`\nif the index is out of bounds.",3,null],[11,"uget","","Perform *unchecked* array indexing.",3,null],[11,"uget_mut","","Perform *unchecked* array indexing.",3,null],[11,"swap","","Swap elements at indices `index1` and `index2`.",3,null],[11,"subview","","Along `axis`, select the subview `index` and return a\nview with that axis removed.",3,null],[11,"subview_mut","","Along `axis`, select the subview `index` and return a read-write view\nwith the axis removed.",3,null],[11,"isubview","","Collapse dimension `axis` into length one,\nand select the subview of `index` along that axis.",3,null],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`\nwith that axis removed.",3,null],[11,"select","","Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.",3,null],[11,"inner_iter","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",3,null],[11,"inner_iter_mut","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",3,null],[11,"outer_iter","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",3,null],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",3,null],[11,"axis_iter","","Return an iterator that traverses over `axis`\nand yields each subview along it.",3,null],[11,"axis_iter_mut","","Return an iterator that traverses over `axis`\nand yields each mutable subview along it.",3,null],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of `size`,\nyielding non-overlapping views along that axis.",3,null],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of `size`,\nyielding non-overlapping read-write views along that axis.",3,null],[11,"diag","","Return an view of the diagonal elements of the array.",3,null],[11,"diag_mut","","Return a read-write view over the diagonal elements of the array.",3,null],[11,"into_diag","","Return the diagonal as a one-dimensional array.",3,null],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous “C order” in\nmemory (where the last index is the most rapidly varying).",3,null],[11,"as_ptr","","Return a pointer to the first element in the array.",3,null],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",3,null],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous and in standard order.\nReturn `None` otherwise.",3,null],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous and in standard order.\nReturn `None` otherwise.",3,null],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,\nreturn `None` otherwise.",3,null],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,\nreturn `None` otherwise.",3,null],[11,"reshape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted.",3,null],[11,"into_shape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted, but the source array or view must be\ncontiguous, otherwise we cannot rearrange the dimension.",3,null],[11,"broadcast","","Act like a larger size and/or shape array by *broadcasting*\ninto a larger shape, if possible.",3,null],[11,"swap_axes","","Swap axes `ax` and `bx`.",3,null],[11,"reversed_axes","","Transpose the array by reversing axes.",3,null],[11,"t","","Return a transposed view of the array.",3,null],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",3,null],[11,"assign_scalar","","Perform an elementwise assigment to `self` from scalar `x`.",3,null],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,\ncalling the closure `f` on each element pair.",3,null],[11,"fold","","Traverse the array elements and apply a fold,\nreturning the resulting value.",3,null],[11,"map","","Call `f` by reference on each element and create a new array\nwith the new values.",3,null],[11,"mapv","","Call `f` by **v**alue on each element and create a new array\nwith the new values.",3,null],[11,"mapv_into","","Call `f` by **v**alue on each element, update the array with the new values\nand return it.",3,null],[11,"map_inplace","","Modify the array in place by calling `f` by mutable reference on each element.",3,null],[11,"mapv_inplace","","Modify the array in place by calling `f` by **v**alue on each element.\nThe array is updated with the new values.",3,null],[11,"visit","","Visit each element in the array by calling `f` by reference\non each element.",3,null],[11,"fold_axis","","Fold along an axis.",3,null],[11,"map_axis","","Reduce the values along an axis into just one value, producing a new\narray with one less dimension.",3,null],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way they are\nstored internally.",3,null],[11,"row","","Return an array view of row `index`.",3,null],[11,"row_mut","","Return a mutable array view of row `index`.",3,null],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the two-dimensional array.",3,null],[11,"column","","Return an array view of column `index`.",3,null],[11,"column_mut","","Return a mutable array view of column `index`.",3,null],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the two-dimensional array.",3,null],[11,"scalar_sum","","Return the sum of all elements in the array.",3,null],[11,"sum","","Return sum along `axis`.",3,null],[11,"mean","","Return mean along `axis`.",3,null],[11,"all_close","","Return `true` if the arrays&#39; elementwise differences are all within\nthe given absolute tolerance, `false` otherwise.",3,null],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","ndarray::linalg","General matrix multiplication.",null,{"inputs":[{"name":"a"},{"name":"arraybase"},{"name":"arraybase"},{"name":"a"},{"name":"arraybase"}],"output":null}],[11,"dot","ndarray","Compute the dot product of one-dimensional arrays.",3,null],[11,"dot","","Perform matrix multiplication of rectangular arrays `self` and `rhs`.",3,null],[11,"dot","","",3,null],[11,"dot","","",3,null],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently, where\n`alpha` is a scalar and `rhs` is another array. This operation is\nalso known as `axpy` in BLAS.",3,null],[8,"Dot","ndarray::linalg","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",19,null],[10,"dot","","",19,null],[11,"add","ndarray","",3,null],[11,"add","","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"bitand","","",3,null],[11,"bitand","","",3,null],[11,"bitand","","",3,null],[11,"bitor","","",3,null],[11,"bitor","","",3,null],[11,"bitor","","",3,null],[11,"bitxor","","",3,null],[11,"bitxor","","",3,null],[11,"bitxor","","",3,null],[11,"shl","","",3,null],[11,"shl","","",3,null],[11,"shl","","",3,null],[11,"shr","","",3,null],[11,"shr","","",3,null],[11,"shr","","",3,null],[11,"neg","","Perform an elementwise negation of `self` and return the result.",3,null],[11,"not","","Perform an elementwise unary not of `self` and return the result.",3,null],[11,"add_assign","","",3,null],[11,"add_assign","","",3,null],[11,"sub_assign","","",3,null],[11,"sub_assign","","",3,null],[11,"mul_assign","","",3,null],[11,"mul_assign","","",3,null],[11,"div_assign","","",3,null],[11,"div_assign","","",3,null],[11,"rem_assign","","",3,null],[11,"rem_assign","","",3,null],[11,"bitand_assign","","",3,null],[11,"bitand_assign","","",3,null],[11,"bitor_assign","","",3,null],[11,"bitor_assign","","",3,null],[11,"bitxor_assign","","",3,null],[11,"bitxor_assign","","",3,null],[11,"shl_assign","","",3,null],[11,"shl_assign","","",3,null],[11,"shr_assign","","",3,null],[11,"shr_assign","","",3,null],[11,"from_shape","","Create a read-only array view borrowing its data from a slice.",3,null],[11,"from_shape_ptr","","Create an `ArrayView&lt;A, D&gt;` from shape information and a\nraw pointer to the elements.",3,null],[11,"split_at","","Split the array along `axis` and return one view strictly before the\nsplit and one view after the split.",3,null],[11,"from_shape","","Create a read-write array view borrowing its data from a slice.",3,null],[11,"from_shape_ptr","","Create an `ArrayViewMut&lt;A, D&gt;` from shape information and a\nraw pointer to the elements.",3,null],[11,"split_at","","Split the array along `axis` and return one mutable view strictly\nbefore the split and one mutable view after the split.",3,null],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"RcArray","","Array where the data is reference counted and copy on write, it\ncan act as both an owner as the data as well as a lightweight view.",null,null],[6,"Array","","Array where the data is owned uniquely.",null,null],[6,"OwnedArray","","Array where the data is owned uniquely.",null,null],[6,"ArrayView","","A lightweight array view.",null,null],[6,"ArrayViewMut","","A lightweight read-write array view.",null,null],[17,"S","","Slice value for the full range of an axis.",null,null],[8,"Dimension","","Array shape and index trait.",null,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing for this\ndimension.",20,null],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[16,"Smaller","","",21,null],[10,"remove_axis","","",21,null],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an array.",null,null],[16,"Dim","","",22,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows\ncustomizing the memory layout (strides) of an array shape.",null,null],[16,"Dim","","",23,null],[10,"f","","",23,null],[10,"set_f","","",23,null],[10,"strides","","",23,null],[8,"Data","","Array representation trait.",null,null],[16,"Elem","","The array element type.",24,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",25,null],[10,"as_init_slice","","",25,null],[10,"len","","",25,{"inputs":[],"output":{"name":"usize"}}],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic with arrays.",null,null],[11,"clone","","",4,null],[11,"clone","","",7,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[14,"s!","","Slice argument constructor.",null,null],[14,"stack!","","Stack arrays along the given axis.",null,null],[11,"into_iter","","",26,null],[11,"into_iter","","",27,null],[11,"ndim","","",28,null],[11,"size","","",28,null],[11,"size_checked","","",28,null],[11,"default_strides","","",28,null],[11,"_fastest_varying_stride_order","","",28,null],[11,"first_index","","",28,null],[11,"next_for","","",28,null],[11,"stride_offset","","Self is an index, return the stride offset",28,{"inputs":[{"name":"ix"},{"name":"ix"}],"output":{"name":"isize"}}],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",28,null],[11,"remove_axis","","",28,null]],"paths":[[3,"Axis"],[3,"Si"],[4,"ErrorKind"],[3,"ArrayBase"],[3,"ViewRepr"],[3,"Indexes"],[3,"Elements"],[3,"Indexed"],[3,"ElementsMut"],[3,"IndexedMut"],[3,"InnerIter"],[3,"InnerIterMut"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"ShapeError"],[3,"Shape"],[3,"StrideShape"],[8,"Dot"],[8,"Dimension"],[8,"RemoveAxis"],[8,"NdIndex"],[8,"ShapeBuilder"],[8,"Data"],[8,"FixedInitializer"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"Ix"]]};
searchIndex["vptree"] = {"doc":"&#39;vptree-rs` is a crate for vantage point trees.","items":[[0,"vptree","vptree","Vantage-Point Trees are a data structure for fast\nk-nearest-neighbor searches.",null,null],[3,"VPTree","vptree::vptree","Vantage Point Tree",null,null],[8,"MetricItem","","Defines a metric for items in a metric space.",null,null],[10,"distance","","Return the distance to another element in the metric space.",0,null],[11,"new","","Construct a new vantage point tree from a set of elements.",1,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"within_radius","","Return all elements with a given radius of the target.",1,null],[11,"nearest_neighbor","","Find the closest point in tree to `query`.",1,null],[11,"nearest_neighbors","","Find the `k` points in the tree closest to `query`.",1,null],[11,"dump","","Return a pretty-printed recursive description of the entire tree.",1,null]],"paths":[[8,"MetricItem"],[3,"VPTree"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[6,"Rational","","",null,null],[6,"BigRational","","",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,null],[10,"mod_floor","","Floored integer modulo, satisfying:",1,null],[10,"gcd","","Greatest Common Divisor (GCD).",1,null],[10,"lcm","","Lowest Common Multiple (LCM).",1,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,null],[10,"is_even","","Returns `true` if the number is even.",1,null],[10,"is_odd","","Returns `true` if the number is odd.",1,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",2,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",5,null],[10,"abs_sub","","The positive difference of two numbers.",5,null],[10,"signum","","Returns the sign of the number.",5,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",5,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",5,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",7,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",7,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",8,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",9,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",10,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",11,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",12,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",12,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",12,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",12,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",12,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",12,null],[10,"swap_bytes","","Reverses the byte order of the integer.",12,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",12,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",12,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",13,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",13,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",13,null],[10,"floor","","Returns the largest integer less than or equal to a number.",13,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",13,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",13,null],[10,"trunc","","Return the integer part of a number.",13,null],[10,"fract","","Returns the fractional part of a number.",13,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",13,null],[10,"signum","","Returns a number that represents the sign of `self`.",13,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",13,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",13,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",13,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,null],[10,"powi","","Raise a number to an integer power.",13,null],[10,"powf","","Raise a number to a floating point power.",13,null],[10,"sqrt","","Take the square root of a number.",13,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,null],[10,"exp2","","Returns `2^(self)`.",13,null],[10,"ln","","Returns the natural logarithm of the number.",13,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",13,null],[10,"log2","","Returns the base 2 logarithm of the number.",13,null],[10,"log10","","Returns the base 10 logarithm of the number.",13,null],[11,"to_degrees","","Converts radians to degrees.",13,null],[11,"to_radians","","Converts degrees to radians.",13,null],[10,"max","","Returns the maximum of the two numbers.",13,null],[10,"min","","Returns the minimum of the two numbers.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"cbrt","","Take the cubic root of a number.",13,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",13,null],[10,"sin","","Computes the sine of a number (in radians).",13,null],[10,"cos","","Computes the cosine of a number (in radians).",13,null],[10,"tan","","Computes the tangent of a number (in radians).",13,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",13,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",13,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",13,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",13,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",13,null],[10,"sinh","","Hyperbolic sine function.",13,null],[10,"cosh","","Hyperbolic cosine function.",13,null],[10,"tanh","","Hyperbolic tangent function.",13,null],[10,"asinh","","Inverse hyperbolic sine function.",13,null],[10,"acosh","","Inverse hyperbolic cosine function.",13,null],[10,"atanh","","Inverse hyperbolic tangent function.",13,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",13,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"bigint","","",null,null],[0,"complex","","",null,null],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null],[0,"rational","","",null,null],[11,"new","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",17,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",17,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",17,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",17,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",17,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",17,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",17,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",17,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"hash","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",18,null],[11,"eq","","",18,null],[11,"partial_cmp","","",18,null],[11,"cmp","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",18,null],[11,"bitand","","",18,null],[11,"bitor","","",18,null],[11,"bitor","","",18,null],[11,"bitxor","","",18,null],[11,"bitxor","","",18,null],[11,"shl","","",18,null],[11,"shr","","",18,null],[11,"zero","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",18,null],[11,"one","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",18,null],[11,"add","","",18,null],[11,"sub","","",18,null],[11,"sub","","",18,null],[11,"mul","","",18,null],[11,"mul","","",18,null],[11,"div","","",18,null],[11,"div","","",18,null],[11,"rem","","",18,null],[11,"rem","","",18,null],[11,"neg","","",18,null],[11,"checked_add","","",18,null],[11,"checked_sub","","",18,null],[11,"checked_mul","","",18,null],[11,"checked_div","","",18,null],[11,"div_rem","","",18,null],[11,"div_floor","","",18,null],[11,"mod_floor","","",18,null],[11,"div_mod_floor","","",18,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",18,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",18,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",18,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",18,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",18,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",18,null],[11,"to_i64","","",18,null],[11,"to_u64","","",18,null],[11,"to_f32","","",18,null],[11,"to_f64","","",18,null],[11,"from_i64","","",18,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",18,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u8"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"usize"}],"output":{"name":"biguint"}}],[11,"to_biguint","","",18,null],[11,"new","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",18,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",18,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",18,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",18,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",18,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",18,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"eq","","",17,null],[11,"partial_cmp","","",17,null],[11,"cmp","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",17,null],[11,"shr","","",17,null],[11,"zero","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",17,null],[11,"one","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",17,null],[11,"abs_sub","","",17,null],[11,"signum","","",17,null],[11,"is_positive","","",17,null],[11,"is_negative","","",17,null],[11,"add","","",17,null],[11,"add","","",17,null],[11,"sub","","",17,null],[11,"sub","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"div","","",17,null],[11,"div","","",17,null],[11,"rem","","",17,null],[11,"rem","","",17,null],[11,"neg","","",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"div_rem","","",17,null],[11,"div_floor","","",17,null],[11,"mod_floor","","",17,null],[11,"div_mod_floor","","",17,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",17,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",17,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",17,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",17,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",17,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",17,null],[11,"to_i64","","",17,null],[11,"to_u64","","",17,null],[11,"to_f32","","",17,null],[11,"to_f64","","",17,null],[11,"from_i64","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"isize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"usize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"to_bigint","","",17,null],[11,"to_bigint","","",18,null],[11,"to_biguint","","",17,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[3,"BigInt"],[3,"BigUint"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or reducing.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,null],[11,"numer","","Gets an immutable reference to the numerator.",0,null],[11,"denom","","Gets an immutable reference to the denominator.",0,null],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,null],[11,"reduced","","Returns a reduced copy of self.",0,null],[11,"recip","","Returns the reciprocal.",0,null],[11,"floor","","Rounds towards minus infinity.",0,null],[11,"ceil","","Rounds towards plus infinity.",0,null],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,null],[11,"trunc","","Rounds towards zero.",0,null],[11,"fract","","Returns the fractional part of a number, with division rounded towards zero.",0,null],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,null],[11,"from_float","","Converts a float into a rational number.",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"rem","","",0,null],[11,"rem","","",0,null],[11,"neg","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",0,null],[11,"abs_sub","","",0,null],[11,"signum","","",0,null],[11,"is_positive","","",0,null],[11,"is_negative","","",0,null],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["blas"] = {"doc":"Interface to the [Basic Linear Algebra Subprograms][1].","items":[[0,"c","blas","The C interface (CBLAS).",null,null],[4,"Diagonal","blas::c","",null,null],[13,"Generic","","",0,null],[13,"Unit","","",0,null],[4,"Layout","","",null,null],[13,"RowMajor","","",1,null],[13,"ColumnMajor","","",1,null],[4,"Part","","",null,null],[13,"Upper","","",2,null],[13,"Lower","","",2,null],[4,"Side","","",null,null],[13,"Left","","",3,null],[13,"Right","","",3,null],[4,"Transpose","","",null,null],[13,"None","","",4,null],[13,"Ordinary","","",4,null],[13,"Conjugate","","",4,null],[5,"dcabs1","","",null,{"inputs":[{"name":"c64"}],"output":{"name":"f64"}}],[5,"scabs1","","",null,{"inputs":[{"name":"c32"}],"output":{"name":"f32"}}],[5,"sdsdot","","",null,null],[5,"dsdot","","",null,null],[5,"sdot","","",null,null],[5,"ddot","","",null,null],[5,"cdotu_sub","","",null,null],[5,"cdotc_sub","","",null,null],[5,"zdotu_sub","","",null,null],[5,"zdotc_sub","","",null,null],[5,"snrm2","","",null,null],[5,"sasum","","",null,null],[5,"dnrm2","","",null,null],[5,"dasum","","",null,null],[5,"scnrm2","","",null,null],[5,"scasum","","",null,null],[5,"dznrm2","","",null,null],[5,"dzasum","","",null,null],[5,"isamax","","",null,null],[5,"idamax","","",null,null],[5,"icamax","","",null,null],[5,"izamax","","",null,null],[5,"sswap","","",null,null],[5,"scopy","","",null,null],[5,"saxpy","","",null,null],[5,"dswap","","",null,null],[5,"dcopy","","",null,null],[5,"daxpy","","",null,null],[5,"cswap","","",null,null],[5,"ccopy","","",null,null],[5,"caxpy","","",null,null],[5,"zswap","","",null,null],[5,"zcopy","","",null,null],[5,"zaxpy","","",null,null],[5,"srotg","","",null,null],[5,"srotmg","","",null,null],[5,"srot","","",null,null],[5,"srotm","","",null,null],[5,"drotg","","",null,null],[5,"drotmg","","",null,null],[5,"drot","","",null,null],[5,"drotm","","",null,null],[5,"sscal","","",null,null],[5,"dscal","","",null,null],[5,"cscal","","",null,null],[5,"zscal","","",null,null],[5,"csscal","","",null,null],[5,"zdscal","","",null,null],[5,"sgemv","","",null,null],[5,"sgbmv","","",null,null],[5,"strmv","","",null,null],[5,"stbmv","","",null,null],[5,"stpmv","","",null,null],[5,"strsv","","",null,null],[5,"stbsv","","",null,null],[5,"stpsv","","",null,null],[5,"dgemv","","",null,null],[5,"dgbmv","","",null,null],[5,"dtrmv","","",null,null],[5,"dtbmv","","",null,null],[5,"dtpmv","","",null,null],[5,"dtrsv","","",null,null],[5,"dtbsv","","",null,null],[5,"dtpsv","","",null,null],[5,"cgemv","","",null,null],[5,"cgbmv","","",null,null],[5,"ctrmv","","",null,null],[5,"ctbmv","","",null,null],[5,"ctpmv","","",null,null],[5,"ctrsv","","",null,null],[5,"ctbsv","","",null,null],[5,"ctpsv","","",null,null],[5,"zgemv","","",null,null],[5,"zgbmv","","",null,null],[5,"ztrmv","","",null,null],[5,"ztbmv","","",null,null],[5,"ztpmv","","",null,null],[5,"ztrsv","","",null,null],[5,"ztbsv","","",null,null],[5,"ztpsv","","",null,null],[5,"ssymv","","",null,null],[5,"ssbmv","","",null,null],[5,"sspmv","","",null,null],[5,"sger","","",null,null],[5,"ssyr","","",null,null],[5,"sspr","","",null,null],[5,"ssyr2","","",null,null],[5,"sspr2","","",null,null],[5,"dsymv","","",null,null],[5,"dsbmv","","",null,null],[5,"dspmv","","",null,null],[5,"dger","","",null,null],[5,"dsyr","","",null,null],[5,"dspr","","",null,null],[5,"dsyr2","","",null,null],[5,"dspr2","","",null,null],[5,"chemv","","",null,null],[5,"chbmv","","",null,null],[5,"chpmv","","",null,null],[5,"cgeru","","",null,null],[5,"cgerc","","",null,null],[5,"cher","","",null,null],[5,"chpr","","",null,null],[5,"cher2","","",null,null],[5,"chpr2","","",null,null],[5,"zhemv","","",null,null],[5,"zhbmv","","",null,null],[5,"zhpmv","","",null,null],[5,"zgeru","","",null,null],[5,"zgerc","","",null,null],[5,"zher","","",null,null],[5,"zhpr","","",null,null],[5,"zher2","","",null,null],[5,"zhpr2","","",null,null],[5,"sgemm","","",null,null],[5,"ssymm","","",null,null],[5,"ssyrk","","",null,null],[5,"ssyr2k","","",null,null],[5,"strmm","","",null,null],[5,"strsm","","",null,null],[5,"dgemm","","",null,null],[5,"dsymm","","",null,null],[5,"dsyrk","","",null,null],[5,"dsyr2k","","",null,null],[5,"dtrmm","","",null,null],[5,"dtrsm","","",null,null],[5,"cgemm","","",null,null],[5,"csymm","","",null,null],[5,"csyrk","","",null,null],[5,"csyr2k","","",null,null],[5,"ctrmm","","",null,null],[5,"ctrsm","","",null,null],[5,"zgemm","","",null,null],[5,"zsymm","","",null,null],[5,"zsyrk","","",null,null],[5,"zsyr2k","","",null,null],[5,"ztrmm","","",null,null],[5,"ztrsm","","",null,null],[5,"chemm","","",null,null],[5,"cherk","","",null,null],[5,"cher2k","","",null,null],[5,"zhemm","","",null,null],[5,"zherk","","",null,null],[5,"zher2k","","",null,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[0,"fortran","blas","The Fortran interface.",null,null],[5,"srotg","blas::fortran","",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[5,"srotmg","","",null,null],[5,"srot","","",null,null],[5,"srotm","","",null,null],[5,"sswap","","",null,null],[5,"sscal","","",null,null],[5,"scopy","","",null,null],[5,"saxpy","","",null,null],[5,"sdot","","",null,null],[5,"sdsdot","","",null,null],[5,"snrm2","","",null,null],[5,"scnrm2","","",null,null],[5,"sasum","","",null,null],[5,"isamax","","",null,null],[5,"drotg","","",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"drotmg","","",null,null],[5,"drot","","",null,null],[5,"drotm","","",null,null],[5,"dswap","","",null,null],[5,"dscal","","",null,null],[5,"dcopy","","",null,null],[5,"daxpy","","",null,null],[5,"ddot","","",null,null],[5,"dsdot","","",null,null],[5,"dnrm2","","",null,null],[5,"dznrm2","","",null,null],[5,"dasum","","",null,null],[5,"idamax","","",null,null],[5,"crotg","","",null,{"inputs":[{"name":"c32"},{"name":"c32"},{"name":"f32"},{"name":"c32"}],"output":null}],[5,"csrot","","",null,null],[5,"cswap","","",null,null],[5,"cscal","","",null,null],[5,"csscal","","",null,null],[5,"ccopy","","",null,null],[5,"caxpy","","",null,null],[5,"cdotu","","",null,null],[5,"cdotc","","",null,null],[5,"scasum","","",null,null],[5,"icamax","","",null,null],[5,"zrotg","","",null,{"inputs":[{"name":"c64"},{"name":"c64"},{"name":"f64"},{"name":"c64"}],"output":null}],[5,"zdrot","","",null,null],[5,"zswap","","",null,null],[5,"zscal","","",null,null],[5,"zdscal","","",null,null],[5,"zcopy","","",null,null],[5,"zaxpy","","",null,null],[5,"zdotu","","",null,null],[5,"zdotc","","",null,null],[5,"dzasum","","",null,null],[5,"izamax","","",null,null],[5,"sgemv","","",null,null],[5,"sgbmv","","",null,null],[5,"ssymv","","",null,null],[5,"ssbmv","","",null,null],[5,"sspmv","","",null,null],[5,"strmv","","",null,null],[5,"stbmv","","",null,null],[5,"stpmv","","",null,null],[5,"strsv","","",null,null],[5,"stbsv","","",null,null],[5,"stpsv","","",null,null],[5,"sger","","",null,null],[5,"ssyr","","",null,null],[5,"sspr","","",null,null],[5,"ssyr2","","",null,null],[5,"sspr2","","",null,null],[5,"dgemv","","",null,null],[5,"dgbmv","","",null,null],[5,"dsymv","","",null,null],[5,"dsbmv","","",null,null],[5,"dspmv","","",null,null],[5,"dtrmv","","",null,null],[5,"dtbmv","","",null,null],[5,"dtpmv","","",null,null],[5,"dtrsv","","",null,null],[5,"dtbsv","","",null,null],[5,"dtpsv","","",null,null],[5,"dger","","",null,null],[5,"dsyr","","",null,null],[5,"dspr","","",null,null],[5,"dsyr2","","",null,null],[5,"dspr2","","",null,null],[5,"cgemv","","",null,null],[5,"cgbmv","","",null,null],[5,"chemv","","",null,null],[5,"chbmv","","",null,null],[5,"chpmv","","",null,null],[5,"ctrmv","","",null,null],[5,"ctbmv","","",null,null],[5,"ctpmv","","",null,null],[5,"ctrsv","","",null,null],[5,"ctbsv","","",null,null],[5,"ctpsv","","",null,null],[5,"cgeru","","",null,null],[5,"cgerc","","",null,null],[5,"cher","","",null,null],[5,"chpr","","",null,null],[5,"chpr2","","",null,null],[5,"cher2","","",null,null],[5,"zgemv","","",null,null],[5,"zgbmv","","",null,null],[5,"zhemv","","",null,null],[5,"zhbmv","","",null,null],[5,"zhpmv","","",null,null],[5,"ztrmv","","",null,null],[5,"ztbmv","","",null,null],[5,"ztpmv","","",null,null],[5,"ztrsv","","",null,null],[5,"ztbsv","","",null,null],[5,"ztpsv","","",null,null],[5,"zgeru","","",null,null],[5,"zgerc","","",null,null],[5,"zher","","",null,null],[5,"zhpr","","",null,null],[5,"zher2","","",null,null],[5,"zhpr2","","",null,null],[5,"sgemm","","",null,null],[5,"ssymm","","",null,null],[5,"ssyrk","","",null,null],[5,"ssyr2k","","",null,null],[5,"strmm","","",null,null],[5,"strsm","","",null,null],[5,"dgemm","","",null,null],[5,"dsymm","","",null,null],[5,"dsyrk","","",null,null],[5,"dsyr2k","","",null,null],[5,"dtrmm","","",null,null],[5,"dtrsm","","",null,null],[5,"cgemm","","",null,null],[5,"csymm","","",null,null],[5,"chemm","","",null,null],[5,"csyrk","","",null,null],[5,"cherk","","",null,null],[5,"csyr2k","","",null,null],[5,"cher2k","","",null,null],[5,"ctrmm","","",null,null],[5,"ctrsm","","",null,null],[5,"zgemm","","",null,null],[5,"zsymm","","",null,null],[5,"zhemm","","",null,null],[5,"zsyrk","","",null,null],[5,"zherk","","",null,null],[5,"zsyr2k","","",null,null],[5,"zher2k","","",null,null],[5,"ztrmm","","",null,null],[5,"ztrsm","","",null,null],[6,"c32","blas","A complex number with 32-bit parts.",null,null],[6,"c64","","A complex number with 64-bit parts.",null,null]],"paths":[[4,"Diagonal"],[4,"Layout"],[4,"Part"],[4,"Side"],[4,"Transpose"]]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",0,null],[13,"Other","","",0,null],[4,"Sign","","A Sign is a `BigInt`&#39;s composing element.",null,null],[13,"Minus","","",1,null],[13,"NoSign","","",1,null],[13,"Plus","","",1,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"cmp","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",2,null],[11,"bitand","","",2,null],[11,"bitor","","",2,null],[11,"bitor","","",2,null],[11,"bitxor","","",2,null],[11,"bitxor","","",2,null],[11,"shl","","",2,null],[11,"shr","","",2,null],[11,"zero","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",2,null],[11,"one","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",2,null],[11,"add","","",2,null],[11,"sub","","",2,null],[11,"sub","","",2,null],[11,"mul","","",2,null],[11,"mul","","",2,null],[11,"div","","",2,null],[11,"div","","",2,null],[11,"rem","","",2,null],[11,"rem","","",2,null],[11,"neg","","",2,null],[11,"checked_add","","",2,null],[11,"checked_sub","","",2,null],[11,"checked_mul","","",2,null],[11,"checked_div","","",2,null],[11,"div_rem","","",2,null],[11,"div_floor","","",2,null],[11,"mod_floor","","",2,null],[11,"div_mod_floor","","",2,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",2,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",2,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,null],[11,"to_i64","","",2,null],[11,"to_u64","","",2,null],[11,"to_f32","","",2,null],[11,"to_f64","","",2,null],[11,"from_i64","","",2,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",2,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",2,null],[11,"new","","Creates and initializes a `BigUint`.",2,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",2,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",2,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",2,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",2,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",2,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",2,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",1,null],[11,"neg","","Negate Sign value.",1,null],[11,"mul","","",1,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"eq","","",3,null],[11,"partial_cmp","","",3,null],[11,"cmp","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",3,null],[11,"shr","","",3,null],[11,"zero","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",3,null],[11,"one","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",3,null],[11,"abs_sub","","",3,null],[11,"signum","","",3,null],[11,"is_positive","","",3,null],[11,"is_negative","","",3,null],[11,"add","","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"neg","","",3,null],[11,"checked_add","","",3,null],[11,"checked_sub","","",3,null],[11,"checked_mul","","",3,null],[11,"checked_div","","",3,null],[11,"div_rem","","",3,null],[11,"div_floor","","",3,null],[11,"mod_floor","","",3,null],[11,"div_mod_floor","","",3,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",3,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",3,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",3,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",3,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",3,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",3,null],[11,"to_i64","","",3,null],[11,"to_u64","","",3,null],[11,"to_f32","","",3,null],[11,"to_f64","","",3,null],[11,"from_i64","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",3,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",3,null],[11,"to_bigint","","",2,null],[11,"to_biguint","","",3,null],[11,"new","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",3,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",3,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",3,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",3,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",3,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",3,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",3,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",3,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",3,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",3,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",3,null],[11,"checked_add","","",3,null],[11,"checked_sub","","",3,null],[11,"checked_mul","","",3,null],[11,"checked_div","","",3,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[6,"BigDigit","","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",4,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",5,null],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",6,null],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",6,null],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",6,null],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",6,null],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",6,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"from","","",0,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}]],"paths":[[4,"ParseBigIntError"],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","`Either` represents an alternative holding one value out of\neither of the two possible values.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the [`diff_with`](./fn.diff_with.html) function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator&#39;s remaining elements\nstarting with the first mis-match.",1,null],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",1,null],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\nmore detail.",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",2,null],[13,"MinMax","","More than one element in the iterator, the first element is not larger\nthan the second",2,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`.\nContains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",3,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the `self` iterator.",3,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the parameter iterator.",3,null],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",null,null],[13,"Continue","","Continue folding with this value",4,null],[13,"Done","","Fold is complete and will return this value",4,null],[5,"cons_tuples","","Create an iterator that maps for example iterators of\n`((A, B), C)` to `(A, B, C)`.",null,{"inputs":[{"name":"i"}],"output":{"name":"constuples"}}],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and\nreturns a `Diff` which describes how `j` differs from `i`.",null,{"inputs":[{"name":"i"},{"name":"j"},{"name":"f"}],"output":{"name":"option"}}],[5,"repeat_n","","Create an iterator that produces `n` repetitions of `element`.",null,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"repeatn"}}],[5,"repeat_call","","An iterator source that produces elements indefinitely by calling\na given closure.",null,{"inputs":[{"name":"f"}],"output":{"name":"repeatcall"}}],[5,"unfold","","Creates a new unfold source with the specified closure as the &quot;iterator\nfunction&quot; and an initial state to eventually pass to the closure",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"iterate","","Creates a new iterator that infinitely applies function to value and yields results.",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"iterate"}}],[5,"multizip","","An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.",null,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"merge"}}],[5,"multipeek","","An iterator adaptor that allows the user to peek at multiple `.next()`\nvalues without advancing the base iterator.",null,{"inputs":[{"name":"i"}],"output":{"name":"multipeek"}}],[5,"put_back","","Create an iterator where you can put back a single item",null,{"inputs":[{"name":"i"}],"output":{"name":"putback"}}],[5,"put_back_n","","Create an iterator where you can put back multiple values to the front\nof the iteration.",null,{"inputs":[{"name":"i"}],"output":{"name":"putbackn"}}],[5,"kmerge","","Create an iterator that merges elements of the contained iterators.",null,{"inputs":[{"name":"i"}],"output":{"name":"kmerge"}}],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zipeq"}}],[5,"rciter","","Return an iterator inside a `Rc&lt;RefCell&lt;_&gt;&gt;` wrapper.",null,{"inputs":[{"name":"i"}],"output":{"name":"rciter"}}],[5,"enumerate","","Iterate `iterable` with a running index.",null,{"inputs":[{"name":"i"}],"output":{"name":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"inputs":[{"name":"i"}],"output":{"name":"rev"}}],[5,"zip","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zip"}}],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"chain"}}],[5,"cloned","","Create an iterator that clones each element from &amp;T to T",null,{"inputs":[{"name":"i"}],"output":{"name":"cloned"}}],[5,"fold","","Perform a fold operation over the iterable.",null,{"inputs":[{"name":"i"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[5,"all","","Test whether the predicate holds for all elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"any","","Test whether the predicate holds for any elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"max","","Return the maximum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"min","","Return the minimum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",null,{"inputs":[{"name":"i"},{"name":"str"}],"output":{"name":"string"}}],[5,"sorted","","Collect all the iterable&#39;s elements into a sorted vector in ascending order.",null,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[5,"equal","","Return `true` if both iterators produce equal sequences\n(elements pairwise equal and sequences of the same length),\n`false` otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same\nsemantics as *equal(a, b)*.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":null}],[5,"partition","","Partition a sequence using predicate `pred` so that elements\nthat map to `true` are placed before elements which map to `false`.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[0,"structs","","The concrete iterator types.",null,null],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both\nrun out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until\none of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single\nitem to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple\nitems in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","See [`multipeek()`](../fn.multipeek.html) for more information.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\nof a specific size.",null,null],[3,"Combinations","","An iterator to iterate through all the `n`-length combinations in an iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",null,null],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order.\nIf all base iterators are sorted (ascending), the result is sorted.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling\nmissing elements using a closure.",null,null],[3,"RcIter","","A wrapper for `Rc&lt;RefCell&lt;I&gt;&gt;`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",5,null],[3,"RepeatN","","An iterator that produces *n* repetitions of an element.",null,null],[3,"RepeatCall","","See [`repeat_call`](../fn.repeat_call.html) for more information.",null,null],[3,"Unfold","","See [`unfold`](../fn.unfold.html) for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",6,null],[3,"Iterate","","An iterator that infinitely applies function to value and yields results.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces tuples of a specific size.",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific size.",null,null],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","See [`multizip`](../fn.multizip.html) for more information.",null,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"with_value","","put back value `value` (builder method)",9,null],[11,"into_parts","","Split the `PutBack` into its parts.",9,null],[11,"put_back","","Put back a single value to the front of the iterator.",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"all","","",9,null],[11,"fold","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"put_back","","Puts x in front of the iterator.\nThe values are yielded in order of the most recently put back\nvalues first.",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"peek","","Works exactly like `.next()` with the only difference that it doesn&#39;t\nadvance itself. `.peek()` can be called multiple times, to peek\nfurther ahead.",16,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"next","","",18,null],[11,"size_hint","","",18,null],[11,"fold","","",18,null],[11,"fmt","","",19,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"fmt","","",21,null],[11,"next","","",21,null],[11,"fmt","","",22,null],[11,"next","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"next","","",25,null],[11,"fold","","",25,null],[11,"next_back","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",28,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"next","","",29,null],[11,"drop","","",30,null],[11,"next","","",30,null],[11,"next","","",31,null],[11,"drop","","",32,null],[11,"next","","",32,null],[11,"clone","","",33,null],[11,"next","","",33,null],[11,"size_hint","","",33,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"fmt","itertools","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x, y)` is returned where `x &lt;= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",2,null],[11,"clone","itertools::structs","",35,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"next_back","","",35,null],[11,"clone","","",5,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"next_back","","",5,null],[11,"new","","",36,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"fmt","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"next","","",40,null],[11,"next","","",41,null],[11,"into_buffer","","Return a buffer with the produced items that was not enough to be grouped in a tuple.",41,null],[11,"next","","",42,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"fmt","itertools","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"clone","itertools::structs","",45,null],[11,"new","","Deprecated: renamed to multizip",45,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"from","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[8,"Itertools","itertools","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",46,null],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",46,null],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",46,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",46,null],[11,"zip_eq","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.",46,null],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the\niterator and may pick off as many elements as it likes, to produce the\nnext iterator element.",46,null],[11,"group_by","","Return an *iterable* that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",46,null],[11,"group_by_lazy","","",46,null],[11,"chunks","","Return an *iterable* that can chunk the iterator.",46,null],[11,"chunks_lazy","","",46,null],[11,"tuple_windows","","Return an iterator over all contiguous windows producing tuples of\na specific size (up to 4).",46,null],[11,"tuples","","Return an iterator that groups the items in tuples of a specific size\n(up to 4).",46,null],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",46,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",46,null],[11,"merge","","Return an iterator adaptor that merges the two base iterators in\nascending order.  If both base iterators are sorted (ascending), the\nresult is sorted.",46,null],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",46,null],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.",46,null],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",46,null],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.",46,null],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",46,null],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",46,null],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",46,null],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",46,null],[11,"while_some","","Return an iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",46,null],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the combinations of the\nelements from an iterator.",46,null],[11,"combinations","","Return an iterator adaptor that iterates over the `n`-length combinations of\nthe elements from an iterator.",46,null],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",46,null],[11,"flatten","","Unravel a nested iterator.",46,null],[11,"next_tuple","","Advances the iterator and returns the next items grouped in a tuple of\na specific size (up to 4).",46,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",46,null],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",46,null],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",46,null],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",46,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",46,null],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",46,null],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",46,null],[11,"format","","Format all iterator elements, separated by `sep`.",46,null],[11,"format_default","","",46,null],[11,"format_with","","Format all iterator elements, separated by `sep`.",46,null],[11,"fold_results","","Fold `Result` values from an iterator.",46,null],[11,"fold_options","","Fold `Option` values from an iterator.",46,null],[11,"fold1","","Accumulator of the elements in the iterator.",46,null],[11,"fold_while","","An iterator method that applies a function, producing a single, final value.",46,null],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",46,null],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",46,null],[11,"partition_map","","Collect all iterator elements into one of two\npartitions. Unlike `Iterator::partition`, each partition may\nhave a distinct type.",46,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",46,null],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by\nthe specified function.",46,null],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as determined by\nthe specified comparison function.",46,null],[14,"iproduct!","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip!","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,null],[11,"is_right","","Return true if the value is the `Right` variant.",0,null],[11,"left","","Convert the left side of `Either&lt;L, R&gt;` to an `Option&lt;L&gt;`.",0,null],[11,"right","","Convert the right side of `Either&lt;L, R&gt;` to an `Option&lt;R&gt;`.",0,null],[11,"as_ref","","Convert `&amp;Either&lt;L, R&gt;` to `Either&lt;&amp;L, &amp;R&gt;`.",0,null],[11,"as_mut","","Convert `&amp;mut Either&lt;L, R&gt;` to `Either&lt;&amp;mut L, &amp;mut R&gt;`.",0,null],[11,"flip","","Convert `Either&lt;L, R&gt;` to `Either&lt;R, L&gt;`.",0,null],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present.",0,null],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present.",0,null],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is\n`Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\nfunction `g` is applied.",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"either"}}],[11,"into","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"fold","","",0,null],[11,"next_back","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"TupleCombinations"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"KMerge"],[3,"PadUsing"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"Tuples"],[3,"TupleWindows"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[8,"Itertools"]]};
searchIndex["lapack_sys"] = {"doc":"Bindings to the [Linear Algebra PACKage][1].","items":[[0,"c","lapack_sys","The C bindings (LAPACKE).",null,null],[5,"LAPACKE_sbdsdc","lapack_sys::c","",null,null],[5,"LAPACKE_dbdsdc","","",null,null],[5,"LAPACKE_sbdsqr","","",null,null],[5,"LAPACKE_dbdsqr","","",null,null],[5,"LAPACKE_cbdsqr","","",null,null],[5,"LAPACKE_zbdsqr","","",null,null],[5,"LAPACKE_sbdsvdx","","",null,null],[5,"LAPACKE_dbdsvdx","","",null,null],[5,"LAPACKE_sdisna","","",null,null],[5,"LAPACKE_ddisna","","",null,null],[5,"LAPACKE_sgbbrd","","",null,null],[5,"LAPACKE_dgbbrd","","",null,null],[5,"LAPACKE_cgbbrd","","",null,null],[5,"LAPACKE_zgbbrd","","",null,null],[5,"LAPACKE_sgbcon","","",null,null],[5,"LAPACKE_dgbcon","","",null,null],[5,"LAPACKE_cgbcon","","",null,null],[5,"LAPACKE_zgbcon","","",null,null],[5,"LAPACKE_sgbequ","","",null,null],[5,"LAPACKE_dgbequ","","",null,null],[5,"LAPACKE_cgbequ","","",null,null],[5,"LAPACKE_zgbequ","","",null,null],[5,"LAPACKE_sgbequb","","",null,null],[5,"LAPACKE_dgbequb","","",null,null],[5,"LAPACKE_cgbequb","","",null,null],[5,"LAPACKE_zgbequb","","",null,null],[5,"LAPACKE_sgbrfs","","",null,null],[5,"LAPACKE_dgbrfs","","",null,null],[5,"LAPACKE_cgbrfs","","",null,null],[5,"LAPACKE_zgbrfs","","",null,null],[5,"LAPACKE_sgbrfsx","","",null,null],[5,"LAPACKE_dgbrfsx","","",null,null],[5,"LAPACKE_cgbrfsx","","",null,null],[5,"LAPACKE_zgbrfsx","","",null,null],[5,"LAPACKE_sgbsv","","",null,null],[5,"LAPACKE_dgbsv","","",null,null],[5,"LAPACKE_cgbsv","","",null,null],[5,"LAPACKE_zgbsv","","",null,null],[5,"LAPACKE_sgbsvx","","",null,null],[5,"LAPACKE_dgbsvx","","",null,null],[5,"LAPACKE_cgbsvx","","",null,null],[5,"LAPACKE_zgbsvx","","",null,null],[5,"LAPACKE_sgbsvxx","","",null,null],[5,"LAPACKE_dgbsvxx","","",null,null],[5,"LAPACKE_cgbsvxx","","",null,null],[5,"LAPACKE_zgbsvxx","","",null,null],[5,"LAPACKE_sgbtrf","","",null,null],[5,"LAPACKE_dgbtrf","","",null,null],[5,"LAPACKE_cgbtrf","","",null,null],[5,"LAPACKE_zgbtrf","","",null,null],[5,"LAPACKE_sgbtrs","","",null,null],[5,"LAPACKE_dgbtrs","","",null,null],[5,"LAPACKE_cgbtrs","","",null,null],[5,"LAPACKE_zgbtrs","","",null,null],[5,"LAPACKE_sgebak","","",null,null],[5,"LAPACKE_dgebak","","",null,null],[5,"LAPACKE_cgebak","","",null,null],[5,"LAPACKE_zgebak","","",null,null],[5,"LAPACKE_sgebal","","",null,null],[5,"LAPACKE_dgebal","","",null,null],[5,"LAPACKE_cgebal","","",null,null],[5,"LAPACKE_zgebal","","",null,null],[5,"LAPACKE_sgebrd","","",null,null],[5,"LAPACKE_dgebrd","","",null,null],[5,"LAPACKE_cgebrd","","",null,null],[5,"LAPACKE_zgebrd","","",null,null],[5,"LAPACKE_sgecon","","",null,null],[5,"LAPACKE_dgecon","","",null,null],[5,"LAPACKE_cgecon","","",null,null],[5,"LAPACKE_zgecon","","",null,null],[5,"LAPACKE_sgeequ","","",null,null],[5,"LAPACKE_dgeequ","","",null,null],[5,"LAPACKE_cgeequ","","",null,null],[5,"LAPACKE_zgeequ","","",null,null],[5,"LAPACKE_sgeequb","","",null,null],[5,"LAPACKE_dgeequb","","",null,null],[5,"LAPACKE_cgeequb","","",null,null],[5,"LAPACKE_zgeequb","","",null,null],[5,"LAPACKE_sgees","","",null,null],[5,"LAPACKE_dgees","","",null,null],[5,"LAPACKE_cgees","","",null,null],[5,"LAPACKE_zgees","","",null,null],[5,"LAPACKE_sgeesx","","",null,null],[5,"LAPACKE_dgeesx","","",null,null],[5,"LAPACKE_cgeesx","","",null,null],[5,"LAPACKE_zgeesx","","",null,null],[5,"LAPACKE_sgeev","","",null,null],[5,"LAPACKE_dgeev","","",null,null],[5,"LAPACKE_cgeev","","",null,null],[5,"LAPACKE_zgeev","","",null,null],[5,"LAPACKE_sgeevx","","",null,null],[5,"LAPACKE_dgeevx","","",null,null],[5,"LAPACKE_cgeevx","","",null,null],[5,"LAPACKE_zgeevx","","",null,null],[5,"LAPACKE_sgehrd","","",null,null],[5,"LAPACKE_dgehrd","","",null,null],[5,"LAPACKE_cgehrd","","",null,null],[5,"LAPACKE_zgehrd","","",null,null],[5,"LAPACKE_sgejsv","","",null,null],[5,"LAPACKE_dgejsv","","",null,null],[5,"LAPACKE_cgejsv","","",null,null],[5,"LAPACKE_zgejsv","","",null,null],[5,"LAPACKE_sgelq2","","",null,null],[5,"LAPACKE_dgelq2","","",null,null],[5,"LAPACKE_cgelq2","","",null,null],[5,"LAPACKE_zgelq2","","",null,null],[5,"LAPACKE_sgelqf","","",null,null],[5,"LAPACKE_dgelqf","","",null,null],[5,"LAPACKE_cgelqf","","",null,null],[5,"LAPACKE_zgelqf","","",null,null],[5,"LAPACKE_sgels","","",null,null],[5,"LAPACKE_dgels","","",null,null],[5,"LAPACKE_cgels","","",null,null],[5,"LAPACKE_zgels","","",null,null],[5,"LAPACKE_sgelsd","","",null,null],[5,"LAPACKE_dgelsd","","",null,null],[5,"LAPACKE_cgelsd","","",null,null],[5,"LAPACKE_zgelsd","","",null,null],[5,"LAPACKE_sgelss","","",null,null],[5,"LAPACKE_dgelss","","",null,null],[5,"LAPACKE_cgelss","","",null,null],[5,"LAPACKE_zgelss","","",null,null],[5,"LAPACKE_sgelsy","","",null,null],[5,"LAPACKE_dgelsy","","",null,null],[5,"LAPACKE_cgelsy","","",null,null],[5,"LAPACKE_zgelsy","","",null,null],[5,"LAPACKE_sgeqlf","","",null,null],[5,"LAPACKE_dgeqlf","","",null,null],[5,"LAPACKE_cgeqlf","","",null,null],[5,"LAPACKE_zgeqlf","","",null,null],[5,"LAPACKE_sgeqp3","","",null,null],[5,"LAPACKE_dgeqp3","","",null,null],[5,"LAPACKE_cgeqp3","","",null,null],[5,"LAPACKE_zgeqp3","","",null,null],[5,"LAPACKE_sgeqpf","","",null,null],[5,"LAPACKE_dgeqpf","","",null,null],[5,"LAPACKE_cgeqpf","","",null,null],[5,"LAPACKE_zgeqpf","","",null,null],[5,"LAPACKE_sgeqr2","","",null,null],[5,"LAPACKE_dgeqr2","","",null,null],[5,"LAPACKE_cgeqr2","","",null,null],[5,"LAPACKE_zgeqr2","","",null,null],[5,"LAPACKE_sgeqrf","","",null,null],[5,"LAPACKE_dgeqrf","","",null,null],[5,"LAPACKE_cgeqrf","","",null,null],[5,"LAPACKE_zgeqrf","","",null,null],[5,"LAPACKE_sgeqrfp","","",null,null],[5,"LAPACKE_dgeqrfp","","",null,null],[5,"LAPACKE_cgeqrfp","","",null,null],[5,"LAPACKE_zgeqrfp","","",null,null],[5,"LAPACKE_sgerfs","","",null,null],[5,"LAPACKE_dgerfs","","",null,null],[5,"LAPACKE_cgerfs","","",null,null],[5,"LAPACKE_zgerfs","","",null,null],[5,"LAPACKE_sgerfsx","","",null,null],[5,"LAPACKE_dgerfsx","","",null,null],[5,"LAPACKE_cgerfsx","","",null,null],[5,"LAPACKE_zgerfsx","","",null,null],[5,"LAPACKE_sgerqf","","",null,null],[5,"LAPACKE_dgerqf","","",null,null],[5,"LAPACKE_cgerqf","","",null,null],[5,"LAPACKE_zgerqf","","",null,null],[5,"LAPACKE_sgesdd","","",null,null],[5,"LAPACKE_dgesdd","","",null,null],[5,"LAPACKE_cgesdd","","",null,null],[5,"LAPACKE_zgesdd","","",null,null],[5,"LAPACKE_sgesv","","",null,null],[5,"LAPACKE_dgesv","","",null,null],[5,"LAPACKE_cgesv","","",null,null],[5,"LAPACKE_zgesv","","",null,null],[5,"LAPACKE_dsgesv","","",null,null],[5,"LAPACKE_zcgesv","","",null,null],[5,"LAPACKE_sgesvd","","",null,null],[5,"LAPACKE_dgesvd","","",null,null],[5,"LAPACKE_cgesvd","","",null,null],[5,"LAPACKE_zgesvd","","",null,null],[5,"LAPACKE_sgesvdx","","",null,null],[5,"LAPACKE_dgesvdx","","",null,null],[5,"LAPACKE_cgesvdx","","",null,null],[5,"LAPACKE_zgesvdx","","",null,null],[5,"LAPACKE_sgesvj","","",null,null],[5,"LAPACKE_dgesvj","","",null,null],[5,"LAPACKE_cgesvj","","",null,null],[5,"LAPACKE_zgesvj","","",null,null],[5,"LAPACKE_sgesvx","","",null,null],[5,"LAPACKE_dgesvx","","",null,null],[5,"LAPACKE_cgesvx","","",null,null],[5,"LAPACKE_zgesvx","","",null,null],[5,"LAPACKE_sgesvxx","","",null,null],[5,"LAPACKE_dgesvxx","","",null,null],[5,"LAPACKE_cgesvxx","","",null,null],[5,"LAPACKE_zgesvxx","","",null,null],[5,"LAPACKE_sgetf2","","",null,null],[5,"LAPACKE_dgetf2","","",null,null],[5,"LAPACKE_cgetf2","","",null,null],[5,"LAPACKE_zgetf2","","",null,null],[5,"LAPACKE_sgetrf","","",null,null],[5,"LAPACKE_dgetrf","","",null,null],[5,"LAPACKE_cgetrf","","",null,null],[5,"LAPACKE_zgetrf","","",null,null],[5,"LAPACKE_sgetrf2","","",null,null],[5,"LAPACKE_dgetrf2","","",null,null],[5,"LAPACKE_cgetrf2","","",null,null],[5,"LAPACKE_zgetrf2","","",null,null],[5,"LAPACKE_sgetri","","",null,null],[5,"LAPACKE_dgetri","","",null,null],[5,"LAPACKE_cgetri","","",null,null],[5,"LAPACKE_zgetri","","",null,null],[5,"LAPACKE_sgetrs","","",null,null],[5,"LAPACKE_dgetrs","","",null,null],[5,"LAPACKE_cgetrs","","",null,null],[5,"LAPACKE_zgetrs","","",null,null],[5,"LAPACKE_sggbak","","",null,null],[5,"LAPACKE_dggbak","","",null,null],[5,"LAPACKE_cggbak","","",null,null],[5,"LAPACKE_zggbak","","",null,null],[5,"LAPACKE_sggbal","","",null,null],[5,"LAPACKE_dggbal","","",null,null],[5,"LAPACKE_cggbal","","",null,null],[5,"LAPACKE_zggbal","","",null,null],[5,"LAPACKE_sgges","","",null,null],[5,"LAPACKE_dgges","","",null,null],[5,"LAPACKE_cgges","","",null,null],[5,"LAPACKE_zgges","","",null,null],[5,"LAPACKE_sgges3","","",null,null],[5,"LAPACKE_dgges3","","",null,null],[5,"LAPACKE_cgges3","","",null,null],[5,"LAPACKE_zgges3","","",null,null],[5,"LAPACKE_sggesx","","",null,null],[5,"LAPACKE_dggesx","","",null,null],[5,"LAPACKE_cggesx","","",null,null],[5,"LAPACKE_zggesx","","",null,null],[5,"LAPACKE_sggev","","",null,null],[5,"LAPACKE_dggev","","",null,null],[5,"LAPACKE_cggev","","",null,null],[5,"LAPACKE_zggev","","",null,null],[5,"LAPACKE_sggev3","","",null,null],[5,"LAPACKE_dggev3","","",null,null],[5,"LAPACKE_cggev3","","",null,null],[5,"LAPACKE_zggev3","","",null,null],[5,"LAPACKE_sggevx","","",null,null],[5,"LAPACKE_dggevx","","",null,null],[5,"LAPACKE_cggevx","","",null,null],[5,"LAPACKE_zggevx","","",null,null],[5,"LAPACKE_sggglm","","",null,null],[5,"LAPACKE_dggglm","","",null,null],[5,"LAPACKE_cggglm","","",null,null],[5,"LAPACKE_zggglm","","",null,null],[5,"LAPACKE_sgghrd","","",null,null],[5,"LAPACKE_dgghrd","","",null,null],[5,"LAPACKE_cgghrd","","",null,null],[5,"LAPACKE_zgghrd","","",null,null],[5,"LAPACKE_sgghd3","","",null,null],[5,"LAPACKE_dgghd3","","",null,null],[5,"LAPACKE_cgghd3","","",null,null],[5,"LAPACKE_zgghd3","","",null,null],[5,"LAPACKE_sgglse","","",null,null],[5,"LAPACKE_dgglse","","",null,null],[5,"LAPACKE_cgglse","","",null,null],[5,"LAPACKE_zgglse","","",null,null],[5,"LAPACKE_sggqrf","","",null,null],[5,"LAPACKE_dggqrf","","",null,null],[5,"LAPACKE_cggqrf","","",null,null],[5,"LAPACKE_zggqrf","","",null,null],[5,"LAPACKE_sggrqf","","",null,null],[5,"LAPACKE_dggrqf","","",null,null],[5,"LAPACKE_cggrqf","","",null,null],[5,"LAPACKE_zggrqf","","",null,null],[5,"LAPACKE_sggsvd","","",null,null],[5,"LAPACKE_dggsvd","","",null,null],[5,"LAPACKE_cggsvd","","",null,null],[5,"LAPACKE_zggsvd","","",null,null],[5,"LAPACKE_sggsvd3","","",null,null],[5,"LAPACKE_dggsvd3","","",null,null],[5,"LAPACKE_cggsvd3","","",null,null],[5,"LAPACKE_zggsvd3","","",null,null],[5,"LAPACKE_sggsvp","","",null,null],[5,"LAPACKE_dggsvp","","",null,null],[5,"LAPACKE_cggsvp","","",null,null],[5,"LAPACKE_zggsvp","","",null,null],[5,"LAPACKE_sggsvp3","","",null,null],[5,"LAPACKE_dggsvp3","","",null,null],[5,"LAPACKE_cggsvp3","","",null,null],[5,"LAPACKE_zggsvp3","","",null,null],[5,"LAPACKE_sgtcon","","",null,null],[5,"LAPACKE_dgtcon","","",null,null],[5,"LAPACKE_cgtcon","","",null,null],[5,"LAPACKE_zgtcon","","",null,null],[5,"LAPACKE_sgtrfs","","",null,null],[5,"LAPACKE_dgtrfs","","",null,null],[5,"LAPACKE_cgtrfs","","",null,null],[5,"LAPACKE_zgtrfs","","",null,null],[5,"LAPACKE_sgtsv","","",null,null],[5,"LAPACKE_dgtsv","","",null,null],[5,"LAPACKE_cgtsv","","",null,null],[5,"LAPACKE_zgtsv","","",null,null],[5,"LAPACKE_sgtsvx","","",null,null],[5,"LAPACKE_dgtsvx","","",null,null],[5,"LAPACKE_cgtsvx","","",null,null],[5,"LAPACKE_zgtsvx","","",null,null],[5,"LAPACKE_sgttrf","","",null,null],[5,"LAPACKE_dgttrf","","",null,null],[5,"LAPACKE_cgttrf","","",null,null],[5,"LAPACKE_zgttrf","","",null,null],[5,"LAPACKE_sgttrs","","",null,null],[5,"LAPACKE_dgttrs","","",null,null],[5,"LAPACKE_cgttrs","","",null,null],[5,"LAPACKE_zgttrs","","",null,null],[5,"LAPACKE_chbev","","",null,null],[5,"LAPACKE_zhbev","","",null,null],[5,"LAPACKE_chbevd","","",null,null],[5,"LAPACKE_zhbevd","","",null,null],[5,"LAPACKE_chbevx","","",null,null],[5,"LAPACKE_zhbevx","","",null,null],[5,"LAPACKE_chbgst","","",null,null],[5,"LAPACKE_zhbgst","","",null,null],[5,"LAPACKE_chbgv","","",null,null],[5,"LAPACKE_zhbgv","","",null,null],[5,"LAPACKE_chbgvd","","",null,null],[5,"LAPACKE_zhbgvd","","",null,null],[5,"LAPACKE_chbgvx","","",null,null],[5,"LAPACKE_zhbgvx","","",null,null],[5,"LAPACKE_chbtrd","","",null,null],[5,"LAPACKE_zhbtrd","","",null,null],[5,"LAPACKE_checon","","",null,null],[5,"LAPACKE_zhecon","","",null,null],[5,"LAPACKE_cheequb","","",null,null],[5,"LAPACKE_zheequb","","",null,null],[5,"LAPACKE_cheev","","",null,null],[5,"LAPACKE_zheev","","",null,null],[5,"LAPACKE_cheevd","","",null,null],[5,"LAPACKE_zheevd","","",null,null],[5,"LAPACKE_cheevr","","",null,null],[5,"LAPACKE_zheevr","","",null,null],[5,"LAPACKE_cheevx","","",null,null],[5,"LAPACKE_zheevx","","",null,null],[5,"LAPACKE_chegst","","",null,null],[5,"LAPACKE_zhegst","","",null,null],[5,"LAPACKE_chegv","","",null,null],[5,"LAPACKE_zhegv","","",null,null],[5,"LAPACKE_chegvd","","",null,null],[5,"LAPACKE_zhegvd","","",null,null],[5,"LAPACKE_chegvx","","",null,null],[5,"LAPACKE_zhegvx","","",null,null],[5,"LAPACKE_cherfs","","",null,null],[5,"LAPACKE_zherfs","","",null,null],[5,"LAPACKE_cherfsx","","",null,null],[5,"LAPACKE_zherfsx","","",null,null],[5,"LAPACKE_chesv","","",null,null],[5,"LAPACKE_zhesv","","",null,null],[5,"LAPACKE_chesvx","","",null,null],[5,"LAPACKE_zhesvx","","",null,null],[5,"LAPACKE_chesvxx","","",null,null],[5,"LAPACKE_zhesvxx","","",null,null],[5,"LAPACKE_chetrd","","",null,null],[5,"LAPACKE_zhetrd","","",null,null],[5,"LAPACKE_chetrf","","",null,null],[5,"LAPACKE_zhetrf","","",null,null],[5,"LAPACKE_chetri","","",null,null],[5,"LAPACKE_zhetri","","",null,null],[5,"LAPACKE_chetrs","","",null,null],[5,"LAPACKE_zhetrs","","",null,null],[5,"LAPACKE_chfrk","","",null,null],[5,"LAPACKE_zhfrk","","",null,null],[5,"LAPACKE_shgeqz","","",null,null],[5,"LAPACKE_dhgeqz","","",null,null],[5,"LAPACKE_chgeqz","","",null,null],[5,"LAPACKE_zhgeqz","","",null,null],[5,"LAPACKE_chpcon","","",null,null],[5,"LAPACKE_zhpcon","","",null,null],[5,"LAPACKE_chpev","","",null,null],[5,"LAPACKE_zhpev","","",null,null],[5,"LAPACKE_chpevd","","",null,null],[5,"LAPACKE_zhpevd","","",null,null],[5,"LAPACKE_chpevx","","",null,null],[5,"LAPACKE_zhpevx","","",null,null],[5,"LAPACKE_chpgst","","",null,null],[5,"LAPACKE_zhpgst","","",null,null],[5,"LAPACKE_chpgv","","",null,null],[5,"LAPACKE_zhpgv","","",null,null],[5,"LAPACKE_chpgvd","","",null,null],[5,"LAPACKE_zhpgvd","","",null,null],[5,"LAPACKE_chpgvx","","",null,null],[5,"LAPACKE_zhpgvx","","",null,null],[5,"LAPACKE_chprfs","","",null,null],[5,"LAPACKE_zhprfs","","",null,null],[5,"LAPACKE_chpsv","","",null,null],[5,"LAPACKE_zhpsv","","",null,null],[5,"LAPACKE_chpsvx","","",null,null],[5,"LAPACKE_zhpsvx","","",null,null],[5,"LAPACKE_chptrd","","",null,null],[5,"LAPACKE_zhptrd","","",null,null],[5,"LAPACKE_chptrf","","",null,null],[5,"LAPACKE_zhptrf","","",null,null],[5,"LAPACKE_chptri","","",null,null],[5,"LAPACKE_zhptri","","",null,null],[5,"LAPACKE_chptrs","","",null,null],[5,"LAPACKE_zhptrs","","",null,null],[5,"LAPACKE_shsein","","",null,null],[5,"LAPACKE_dhsein","","",null,null],[5,"LAPACKE_chsein","","",null,null],[5,"LAPACKE_zhsein","","",null,null],[5,"LAPACKE_shseqr","","",null,null],[5,"LAPACKE_dhseqr","","",null,null],[5,"LAPACKE_chseqr","","",null,null],[5,"LAPACKE_zhseqr","","",null,null],[5,"LAPACKE_clacgv","","",null,null],[5,"LAPACKE_zlacgv","","",null,null],[5,"LAPACKE_slacn2","","",null,null],[5,"LAPACKE_dlacn2","","",null,null],[5,"LAPACKE_clacn2","","",null,null],[5,"LAPACKE_zlacn2","","",null,null],[5,"LAPACKE_slacpy","","",null,null],[5,"LAPACKE_dlacpy","","",null,null],[5,"LAPACKE_clacpy","","",null,null],[5,"LAPACKE_zlacpy","","",null,null],[5,"LAPACKE_clacp2","","",null,null],[5,"LAPACKE_zlacp2","","",null,null],[5,"LAPACKE_zlag2c","","",null,null],[5,"LAPACKE_slag2d","","",null,null],[5,"LAPACKE_dlag2s","","",null,null],[5,"LAPACKE_clag2z","","",null,null],[5,"LAPACKE_slagge","","",null,null],[5,"LAPACKE_dlagge","","",null,null],[5,"LAPACKE_clagge","","",null,null],[5,"LAPACKE_zlagge","","",null,null],[5,"LAPACKE_slamch","","",null,null],[5,"LAPACKE_dlamch","","",null,null],[5,"LAPACKE_slange","","",null,null],[5,"LAPACKE_dlange","","",null,null],[5,"LAPACKE_clange","","",null,null],[5,"LAPACKE_zlange","","",null,null],[5,"LAPACKE_clanhe","","",null,null],[5,"LAPACKE_zlanhe","","",null,null],[5,"LAPACKE_slansy","","",null,null],[5,"LAPACKE_dlansy","","",null,null],[5,"LAPACKE_clansy","","",null,null],[5,"LAPACKE_zlansy","","",null,null],[5,"LAPACKE_slantr","","",null,null],[5,"LAPACKE_dlantr","","",null,null],[5,"LAPACKE_clantr","","",null,null],[5,"LAPACKE_zlantr","","",null,null],[5,"LAPACKE_slarfb","","",null,null],[5,"LAPACKE_dlarfb","","",null,null],[5,"LAPACKE_clarfb","","",null,null],[5,"LAPACKE_zlarfb","","",null,null],[5,"LAPACKE_slarfg","","",null,null],[5,"LAPACKE_dlarfg","","",null,null],[5,"LAPACKE_clarfg","","",null,null],[5,"LAPACKE_zlarfg","","",null,null],[5,"LAPACKE_slarft","","",null,null],[5,"LAPACKE_dlarft","","",null,null],[5,"LAPACKE_clarft","","",null,null],[5,"LAPACKE_zlarft","","",null,null],[5,"LAPACKE_slarfx","","",null,null],[5,"LAPACKE_dlarfx","","",null,null],[5,"LAPACKE_clarfx","","",null,null],[5,"LAPACKE_zlarfx","","",null,null],[5,"LAPACKE_slarnv","","",null,null],[5,"LAPACKE_dlarnv","","",null,null],[5,"LAPACKE_clarnv","","",null,null],[5,"LAPACKE_zlarnv","","",null,null],[5,"LAPACKE_slascl","","",null,null],[5,"LAPACKE_dlascl","","",null,null],[5,"LAPACKE_clascl","","",null,null],[5,"LAPACKE_zlascl","","",null,null],[5,"LAPACKE_slaset","","",null,null],[5,"LAPACKE_dlaset","","",null,null],[5,"LAPACKE_claset","","",null,null],[5,"LAPACKE_zlaset","","",null,null],[5,"LAPACKE_slasrt","","",null,null],[5,"LAPACKE_dlasrt","","",null,null],[5,"LAPACKE_slaswp","","",null,null],[5,"LAPACKE_dlaswp","","",null,null],[5,"LAPACKE_claswp","","",null,null],[5,"LAPACKE_zlaswp","","",null,null],[5,"LAPACKE_slatms","","",null,null],[5,"LAPACKE_dlatms","","",null,null],[5,"LAPACKE_clatms","","",null,null],[5,"LAPACKE_zlatms","","",null,null],[5,"LAPACKE_slauum","","",null,null],[5,"LAPACKE_dlauum","","",null,null],[5,"LAPACKE_clauum","","",null,null],[5,"LAPACKE_zlauum","","",null,null],[5,"LAPACKE_sopgtr","","",null,null],[5,"LAPACKE_dopgtr","","",null,null],[5,"LAPACKE_sopmtr","","",null,null],[5,"LAPACKE_dopmtr","","",null,null],[5,"LAPACKE_sorgbr","","",null,null],[5,"LAPACKE_dorgbr","","",null,null],[5,"LAPACKE_sorghr","","",null,null],[5,"LAPACKE_dorghr","","",null,null],[5,"LAPACKE_sorglq","","",null,null],[5,"LAPACKE_dorglq","","",null,null],[5,"LAPACKE_sorgql","","",null,null],[5,"LAPACKE_dorgql","","",null,null],[5,"LAPACKE_sorgqr","","",null,null],[5,"LAPACKE_dorgqr","","",null,null],[5,"LAPACKE_sorgrq","","",null,null],[5,"LAPACKE_dorgrq","","",null,null],[5,"LAPACKE_sorgtr","","",null,null],[5,"LAPACKE_dorgtr","","",null,null],[5,"LAPACKE_sormbr","","",null,null],[5,"LAPACKE_dormbr","","",null,null],[5,"LAPACKE_sormhr","","",null,null],[5,"LAPACKE_dormhr","","",null,null],[5,"LAPACKE_sormlq","","",null,null],[5,"LAPACKE_dormlq","","",null,null],[5,"LAPACKE_sormql","","",null,null],[5,"LAPACKE_dormql","","",null,null],[5,"LAPACKE_sormqr","","",null,null],[5,"LAPACKE_dormqr","","",null,null],[5,"LAPACKE_sormrq","","",null,null],[5,"LAPACKE_dormrq","","",null,null],[5,"LAPACKE_sormrz","","",null,null],[5,"LAPACKE_dormrz","","",null,null],[5,"LAPACKE_sormtr","","",null,null],[5,"LAPACKE_dormtr","","",null,null],[5,"LAPACKE_spbcon","","",null,null],[5,"LAPACKE_dpbcon","","",null,null],[5,"LAPACKE_cpbcon","","",null,null],[5,"LAPACKE_zpbcon","","",null,null],[5,"LAPACKE_spbequ","","",null,null],[5,"LAPACKE_dpbequ","","",null,null],[5,"LAPACKE_cpbequ","","",null,null],[5,"LAPACKE_zpbequ","","",null,null],[5,"LAPACKE_spbrfs","","",null,null],[5,"LAPACKE_dpbrfs","","",null,null],[5,"LAPACKE_cpbrfs","","",null,null],[5,"LAPACKE_zpbrfs","","",null,null],[5,"LAPACKE_spbstf","","",null,null],[5,"LAPACKE_dpbstf","","",null,null],[5,"LAPACKE_cpbstf","","",null,null],[5,"LAPACKE_zpbstf","","",null,null],[5,"LAPACKE_spbsv","","",null,null],[5,"LAPACKE_dpbsv","","",null,null],[5,"LAPACKE_cpbsv","","",null,null],[5,"LAPACKE_zpbsv","","",null,null],[5,"LAPACKE_spbsvx","","",null,null],[5,"LAPACKE_dpbsvx","","",null,null],[5,"LAPACKE_cpbsvx","","",null,null],[5,"LAPACKE_zpbsvx","","",null,null],[5,"LAPACKE_spbtrf","","",null,null],[5,"LAPACKE_dpbtrf","","",null,null],[5,"LAPACKE_cpbtrf","","",null,null],[5,"LAPACKE_zpbtrf","","",null,null],[5,"LAPACKE_spbtrs","","",null,null],[5,"LAPACKE_dpbtrs","","",null,null],[5,"LAPACKE_cpbtrs","","",null,null],[5,"LAPACKE_zpbtrs","","",null,null],[5,"LAPACKE_spftrf","","",null,null],[5,"LAPACKE_dpftrf","","",null,null],[5,"LAPACKE_cpftrf","","",null,null],[5,"LAPACKE_zpftrf","","",null,null],[5,"LAPACKE_spftri","","",null,null],[5,"LAPACKE_dpftri","","",null,null],[5,"LAPACKE_cpftri","","",null,null],[5,"LAPACKE_zpftri","","",null,null],[5,"LAPACKE_spftrs","","",null,null],[5,"LAPACKE_dpftrs","","",null,null],[5,"LAPACKE_cpftrs","","",null,null],[5,"LAPACKE_zpftrs","","",null,null],[5,"LAPACKE_spocon","","",null,null],[5,"LAPACKE_dpocon","","",null,null],[5,"LAPACKE_cpocon","","",null,null],[5,"LAPACKE_zpocon","","",null,null],[5,"LAPACKE_spoequ","","",null,null],[5,"LAPACKE_dpoequ","","",null,null],[5,"LAPACKE_cpoequ","","",null,null],[5,"LAPACKE_zpoequ","","",null,null],[5,"LAPACKE_spoequb","","",null,null],[5,"LAPACKE_dpoequb","","",null,null],[5,"LAPACKE_cpoequb","","",null,null],[5,"LAPACKE_zpoequb","","",null,null],[5,"LAPACKE_sporfs","","",null,null],[5,"LAPACKE_dporfs","","",null,null],[5,"LAPACKE_cporfs","","",null,null],[5,"LAPACKE_zporfs","","",null,null],[5,"LAPACKE_sporfsx","","",null,null],[5,"LAPACKE_dporfsx","","",null,null],[5,"LAPACKE_cporfsx","","",null,null],[5,"LAPACKE_zporfsx","","",null,null],[5,"LAPACKE_sposv","","",null,null],[5,"LAPACKE_dposv","","",null,null],[5,"LAPACKE_cposv","","",null,null],[5,"LAPACKE_zposv","","",null,null],[5,"LAPACKE_dsposv","","",null,null],[5,"LAPACKE_zcposv","","",null,null],[5,"LAPACKE_sposvx","","",null,null],[5,"LAPACKE_dposvx","","",null,null],[5,"LAPACKE_cposvx","","",null,null],[5,"LAPACKE_zposvx","","",null,null],[5,"LAPACKE_sposvxx","","",null,null],[5,"LAPACKE_dposvxx","","",null,null],[5,"LAPACKE_cposvxx","","",null,null],[5,"LAPACKE_zposvxx","","",null,null],[5,"LAPACKE_spotrf2","","",null,null],[5,"LAPACKE_dpotrf2","","",null,null],[5,"LAPACKE_cpotrf2","","",null,null],[5,"LAPACKE_zpotrf2","","",null,null],[5,"LAPACKE_spotrf","","",null,null],[5,"LAPACKE_dpotrf","","",null,null],[5,"LAPACKE_cpotrf","","",null,null],[5,"LAPACKE_zpotrf","","",null,null],[5,"LAPACKE_spotri","","",null,null],[5,"LAPACKE_dpotri","","",null,null],[5,"LAPACKE_cpotri","","",null,null],[5,"LAPACKE_zpotri","","",null,null],[5,"LAPACKE_spotrs","","",null,null],[5,"LAPACKE_dpotrs","","",null,null],[5,"LAPACKE_cpotrs","","",null,null],[5,"LAPACKE_zpotrs","","",null,null],[5,"LAPACKE_sppcon","","",null,null],[5,"LAPACKE_dppcon","","",null,null],[5,"LAPACKE_cppcon","","",null,null],[5,"LAPACKE_zppcon","","",null,null],[5,"LAPACKE_sppequ","","",null,null],[5,"LAPACKE_dppequ","","",null,null],[5,"LAPACKE_cppequ","","",null,null],[5,"LAPACKE_zppequ","","",null,null],[5,"LAPACKE_spprfs","","",null,null],[5,"LAPACKE_dpprfs","","",null,null],[5,"LAPACKE_cpprfs","","",null,null],[5,"LAPACKE_zpprfs","","",null,null],[5,"LAPACKE_sppsv","","",null,null],[5,"LAPACKE_dppsv","","",null,null],[5,"LAPACKE_cppsv","","",null,null],[5,"LAPACKE_zppsv","","",null,null],[5,"LAPACKE_sppsvx","","",null,null],[5,"LAPACKE_dppsvx","","",null,null],[5,"LAPACKE_cppsvx","","",null,null],[5,"LAPACKE_zppsvx","","",null,null],[5,"LAPACKE_spptrf","","",null,null],[5,"LAPACKE_dpptrf","","",null,null],[5,"LAPACKE_cpptrf","","",null,null],[5,"LAPACKE_zpptrf","","",null,null],[5,"LAPACKE_spptri","","",null,null],[5,"LAPACKE_dpptri","","",null,null],[5,"LAPACKE_cpptri","","",null,null],[5,"LAPACKE_zpptri","","",null,null],[5,"LAPACKE_spptrs","","",null,null],[5,"LAPACKE_dpptrs","","",null,null],[5,"LAPACKE_cpptrs","","",null,null],[5,"LAPACKE_zpptrs","","",null,null],[5,"LAPACKE_spstrf","","",null,null],[5,"LAPACKE_dpstrf","","",null,null],[5,"LAPACKE_cpstrf","","",null,null],[5,"LAPACKE_zpstrf","","",null,null],[5,"LAPACKE_sptcon","","",null,null],[5,"LAPACKE_dptcon","","",null,null],[5,"LAPACKE_cptcon","","",null,null],[5,"LAPACKE_zptcon","","",null,null],[5,"LAPACKE_spteqr","","",null,null],[5,"LAPACKE_dpteqr","","",null,null],[5,"LAPACKE_cpteqr","","",null,null],[5,"LAPACKE_zpteqr","","",null,null],[5,"LAPACKE_sptrfs","","",null,null],[5,"LAPACKE_dptrfs","","",null,null],[5,"LAPACKE_cptrfs","","",null,null],[5,"LAPACKE_zptrfs","","",null,null],[5,"LAPACKE_sptsv","","",null,null],[5,"LAPACKE_dptsv","","",null,null],[5,"LAPACKE_cptsv","","",null,null],[5,"LAPACKE_zptsv","","",null,null],[5,"LAPACKE_sptsvx","","",null,null],[5,"LAPACKE_dptsvx","","",null,null],[5,"LAPACKE_cptsvx","","",null,null],[5,"LAPACKE_zptsvx","","",null,null],[5,"LAPACKE_spttrf","","",null,null],[5,"LAPACKE_dpttrf","","",null,null],[5,"LAPACKE_cpttrf","","",null,null],[5,"LAPACKE_zpttrf","","",null,null],[5,"LAPACKE_spttrs","","",null,null],[5,"LAPACKE_dpttrs","","",null,null],[5,"LAPACKE_cpttrs","","",null,null],[5,"LAPACKE_zpttrs","","",null,null],[5,"LAPACKE_ssbev","","",null,null],[5,"LAPACKE_dsbev","","",null,null],[5,"LAPACKE_ssbevd","","",null,null],[5,"LAPACKE_dsbevd","","",null,null],[5,"LAPACKE_ssbevx","","",null,null],[5,"LAPACKE_dsbevx","","",null,null],[5,"LAPACKE_ssbgst","","",null,null],[5,"LAPACKE_dsbgst","","",null,null],[5,"LAPACKE_ssbgv","","",null,null],[5,"LAPACKE_dsbgv","","",null,null],[5,"LAPACKE_ssbgvd","","",null,null],[5,"LAPACKE_dsbgvd","","",null,null],[5,"LAPACKE_ssbgvx","","",null,null],[5,"LAPACKE_dsbgvx","","",null,null],[5,"LAPACKE_ssbtrd","","",null,null],[5,"LAPACKE_dsbtrd","","",null,null],[5,"LAPACKE_ssfrk","","",null,null],[5,"LAPACKE_dsfrk","","",null,null],[5,"LAPACKE_sspcon","","",null,null],[5,"LAPACKE_dspcon","","",null,null],[5,"LAPACKE_cspcon","","",null,null],[5,"LAPACKE_zspcon","","",null,null],[5,"LAPACKE_sspev","","",null,null],[5,"LAPACKE_dspev","","",null,null],[5,"LAPACKE_sspevd","","",null,null],[5,"LAPACKE_dspevd","","",null,null],[5,"LAPACKE_sspevx","","",null,null],[5,"LAPACKE_dspevx","","",null,null],[5,"LAPACKE_sspgst","","",null,null],[5,"LAPACKE_dspgst","","",null,null],[5,"LAPACKE_sspgv","","",null,null],[5,"LAPACKE_dspgv","","",null,null],[5,"LAPACKE_sspgvd","","",null,null],[5,"LAPACKE_dspgvd","","",null,null],[5,"LAPACKE_sspgvx","","",null,null],[5,"LAPACKE_dspgvx","","",null,null],[5,"LAPACKE_ssprfs","","",null,null],[5,"LAPACKE_dsprfs","","",null,null],[5,"LAPACKE_csprfs","","",null,null],[5,"LAPACKE_zsprfs","","",null,null],[5,"LAPACKE_sspsv","","",null,null],[5,"LAPACKE_dspsv","","",null,null],[5,"LAPACKE_cspsv","","",null,null],[5,"LAPACKE_zspsv","","",null,null],[5,"LAPACKE_sspsvx","","",null,null],[5,"LAPACKE_dspsvx","","",null,null],[5,"LAPACKE_cspsvx","","",null,null],[5,"LAPACKE_zspsvx","","",null,null],[5,"LAPACKE_ssptrd","","",null,null],[5,"LAPACKE_dsptrd","","",null,null],[5,"LAPACKE_ssptrf","","",null,null],[5,"LAPACKE_dsptrf","","",null,null],[5,"LAPACKE_csptrf","","",null,null],[5,"LAPACKE_zsptrf","","",null,null],[5,"LAPACKE_ssptri","","",null,null],[5,"LAPACKE_dsptri","","",null,null],[5,"LAPACKE_csptri","","",null,null],[5,"LAPACKE_zsptri","","",null,null],[5,"LAPACKE_ssptrs","","",null,null],[5,"LAPACKE_dsptrs","","",null,null],[5,"LAPACKE_csptrs","","",null,null],[5,"LAPACKE_zsptrs","","",null,null],[5,"LAPACKE_sstebz","","",null,null],[5,"LAPACKE_dstebz","","",null,null],[5,"LAPACKE_sstedc","","",null,null],[5,"LAPACKE_dstedc","","",null,null],[5,"LAPACKE_cstedc","","",null,null],[5,"LAPACKE_zstedc","","",null,null],[5,"LAPACKE_sstegr","","",null,null],[5,"LAPACKE_dstegr","","",null,null],[5,"LAPACKE_cstegr","","",null,null],[5,"LAPACKE_zstegr","","",null,null],[5,"LAPACKE_sstein","","",null,null],[5,"LAPACKE_dstein","","",null,null],[5,"LAPACKE_cstein","","",null,null],[5,"LAPACKE_zstein","","",null,null],[5,"LAPACKE_sstemr","","",null,null],[5,"LAPACKE_dstemr","","",null,null],[5,"LAPACKE_cstemr","","",null,null],[5,"LAPACKE_zstemr","","",null,null],[5,"LAPACKE_ssteqr","","",null,null],[5,"LAPACKE_dsteqr","","",null,null],[5,"LAPACKE_csteqr","","",null,null],[5,"LAPACKE_zsteqr","","",null,null],[5,"LAPACKE_ssterf","","",null,null],[5,"LAPACKE_dsterf","","",null,null],[5,"LAPACKE_sstev","","",null,null],[5,"LAPACKE_dstev","","",null,null],[5,"LAPACKE_sstevd","","",null,null],[5,"LAPACKE_dstevd","","",null,null],[5,"LAPACKE_sstevr","","",null,null],[5,"LAPACKE_dstevr","","",null,null],[5,"LAPACKE_sstevx","","",null,null],[5,"LAPACKE_dstevx","","",null,null],[5,"LAPACKE_ssycon","","",null,null],[5,"LAPACKE_dsycon","","",null,null],[5,"LAPACKE_csycon","","",null,null],[5,"LAPACKE_zsycon","","",null,null],[5,"LAPACKE_ssyequb","","",null,null],[5,"LAPACKE_dsyequb","","",null,null],[5,"LAPACKE_csyequb","","",null,null],[5,"LAPACKE_zsyequb","","",null,null],[5,"LAPACKE_ssyev","","",null,null],[5,"LAPACKE_dsyev","","",null,null],[5,"LAPACKE_ssyevd","","",null,null],[5,"LAPACKE_dsyevd","","",null,null],[5,"LAPACKE_ssyevr","","",null,null],[5,"LAPACKE_dsyevr","","",null,null],[5,"LAPACKE_ssyevx","","",null,null],[5,"LAPACKE_dsyevx","","",null,null],[5,"LAPACKE_ssygst","","",null,null],[5,"LAPACKE_dsygst","","",null,null],[5,"LAPACKE_ssygv","","",null,null],[5,"LAPACKE_dsygv","","",null,null],[5,"LAPACKE_ssygvd","","",null,null],[5,"LAPACKE_dsygvd","","",null,null],[5,"LAPACKE_ssygvx","","",null,null],[5,"LAPACKE_dsygvx","","",null,null],[5,"LAPACKE_ssyrfs","","",null,null],[5,"LAPACKE_dsyrfs","","",null,null],[5,"LAPACKE_csyrfs","","",null,null],[5,"LAPACKE_zsyrfs","","",null,null],[5,"LAPACKE_ssyrfsx","","",null,null],[5,"LAPACKE_dsyrfsx","","",null,null],[5,"LAPACKE_csyrfsx","","",null,null],[5,"LAPACKE_zsyrfsx","","",null,null],[5,"LAPACKE_ssysv","","",null,null],[5,"LAPACKE_dsysv","","",null,null],[5,"LAPACKE_csysv","","",null,null],[5,"LAPACKE_zsysv","","",null,null],[5,"LAPACKE_ssysvx","","",null,null],[5,"LAPACKE_dsysvx","","",null,null],[5,"LAPACKE_csysvx","","",null,null],[5,"LAPACKE_zsysvx","","",null,null],[5,"LAPACKE_ssysvxx","","",null,null],[5,"LAPACKE_dsysvxx","","",null,null],[5,"LAPACKE_csysvxx","","",null,null],[5,"LAPACKE_zsysvxx","","",null,null],[5,"LAPACKE_ssytrd","","",null,null],[5,"LAPACKE_dsytrd","","",null,null],[5,"LAPACKE_ssytrf","","",null,null],[5,"LAPACKE_dsytrf","","",null,null],[5,"LAPACKE_csytrf","","",null,null],[5,"LAPACKE_zsytrf","","",null,null],[5,"LAPACKE_ssytri","","",null,null],[5,"LAPACKE_dsytri","","",null,null],[5,"LAPACKE_csytri","","",null,null],[5,"LAPACKE_zsytri","","",null,null],[5,"LAPACKE_ssytrs","","",null,null],[5,"LAPACKE_dsytrs","","",null,null],[5,"LAPACKE_csytrs","","",null,null],[5,"LAPACKE_zsytrs","","",null,null],[5,"LAPACKE_stbcon","","",null,null],[5,"LAPACKE_dtbcon","","",null,null],[5,"LAPACKE_ctbcon","","",null,null],[5,"LAPACKE_ztbcon","","",null,null],[5,"LAPACKE_stbrfs","","",null,null],[5,"LAPACKE_dtbrfs","","",null,null],[5,"LAPACKE_ctbrfs","","",null,null],[5,"LAPACKE_ztbrfs","","",null,null],[5,"LAPACKE_stbtrs","","",null,null],[5,"LAPACKE_dtbtrs","","",null,null],[5,"LAPACKE_ctbtrs","","",null,null],[5,"LAPACKE_ztbtrs","","",null,null],[5,"LAPACKE_stfsm","","",null,null],[5,"LAPACKE_dtfsm","","",null,null],[5,"LAPACKE_ctfsm","","",null,null],[5,"LAPACKE_ztfsm","","",null,null],[5,"LAPACKE_stftri","","",null,null],[5,"LAPACKE_dtftri","","",null,null],[5,"LAPACKE_ctftri","","",null,null],[5,"LAPACKE_ztftri","","",null,null],[5,"LAPACKE_stfttp","","",null,null],[5,"LAPACKE_dtfttp","","",null,null],[5,"LAPACKE_ctfttp","","",null,null],[5,"LAPACKE_ztfttp","","",null,null],[5,"LAPACKE_stfttr","","",null,null],[5,"LAPACKE_dtfttr","","",null,null],[5,"LAPACKE_ctfttr","","",null,null],[5,"LAPACKE_ztfttr","","",null,null],[5,"LAPACKE_stgevc","","",null,null],[5,"LAPACKE_dtgevc","","",null,null],[5,"LAPACKE_ctgevc","","",null,null],[5,"LAPACKE_ztgevc","","",null,null],[5,"LAPACKE_stgexc","","",null,null],[5,"LAPACKE_dtgexc","","",null,null],[5,"LAPACKE_ctgexc","","",null,null],[5,"LAPACKE_ztgexc","","",null,null],[5,"LAPACKE_stgsen","","",null,null],[5,"LAPACKE_dtgsen","","",null,null],[5,"LAPACKE_ctgsen","","",null,null],[5,"LAPACKE_ztgsen","","",null,null],[5,"LAPACKE_stgsja","","",null,null],[5,"LAPACKE_dtgsja","","",null,null],[5,"LAPACKE_ctgsja","","",null,null],[5,"LAPACKE_ztgsja","","",null,null],[5,"LAPACKE_stgsna","","",null,null],[5,"LAPACKE_dtgsna","","",null,null],[5,"LAPACKE_ctgsna","","",null,null],[5,"LAPACKE_ztgsna","","",null,null],[5,"LAPACKE_stgsyl","","",null,null],[5,"LAPACKE_dtgsyl","","",null,null],[5,"LAPACKE_ctgsyl","","",null,null],[5,"LAPACKE_ztgsyl","","",null,null],[5,"LAPACKE_stpcon","","",null,null],[5,"LAPACKE_dtpcon","","",null,null],[5,"LAPACKE_ctpcon","","",null,null],[5,"LAPACKE_ztpcon","","",null,null],[5,"LAPACKE_stprfs","","",null,null],[5,"LAPACKE_dtprfs","","",null,null],[5,"LAPACKE_ctprfs","","",null,null],[5,"LAPACKE_ztprfs","","",null,null],[5,"LAPACKE_stptri","","",null,null],[5,"LAPACKE_dtptri","","",null,null],[5,"LAPACKE_ctptri","","",null,null],[5,"LAPACKE_ztptri","","",null,null],[5,"LAPACKE_stptrs","","",null,null],[5,"LAPACKE_dtptrs","","",null,null],[5,"LAPACKE_ctptrs","","",null,null],[5,"LAPACKE_ztptrs","","",null,null],[5,"LAPACKE_stpttf","","",null,null],[5,"LAPACKE_dtpttf","","",null,null],[5,"LAPACKE_ctpttf","","",null,null],[5,"LAPACKE_ztpttf","","",null,null],[5,"LAPACKE_stpttr","","",null,null],[5,"LAPACKE_dtpttr","","",null,null],[5,"LAPACKE_ctpttr","","",null,null],[5,"LAPACKE_ztpttr","","",null,null],[5,"LAPACKE_strcon","","",null,null],[5,"LAPACKE_dtrcon","","",null,null],[5,"LAPACKE_ctrcon","","",null,null],[5,"LAPACKE_ztrcon","","",null,null],[5,"LAPACKE_strevc","","",null,null],[5,"LAPACKE_dtrevc","","",null,null],[5,"LAPACKE_ctrevc","","",null,null],[5,"LAPACKE_ztrevc","","",null,null],[5,"LAPACKE_strexc","","",null,null],[5,"LAPACKE_dtrexc","","",null,null],[5,"LAPACKE_ctrexc","","",null,null],[5,"LAPACKE_ztrexc","","",null,null],[5,"LAPACKE_strrfs","","",null,null],[5,"LAPACKE_dtrrfs","","",null,null],[5,"LAPACKE_ctrrfs","","",null,null],[5,"LAPACKE_ztrrfs","","",null,null],[5,"LAPACKE_strsen","","",null,null],[5,"LAPACKE_dtrsen","","",null,null],[5,"LAPACKE_ctrsen","","",null,null],[5,"LAPACKE_ztrsen","","",null,null],[5,"LAPACKE_strsna","","",null,null],[5,"LAPACKE_dtrsna","","",null,null],[5,"LAPACKE_ctrsna","","",null,null],[5,"LAPACKE_ztrsna","","",null,null],[5,"LAPACKE_strsyl","","",null,null],[5,"LAPACKE_dtrsyl","","",null,null],[5,"LAPACKE_ctrsyl","","",null,null],[5,"LAPACKE_ztrsyl","","",null,null],[5,"LAPACKE_strtri","","",null,null],[5,"LAPACKE_dtrtri","","",null,null],[5,"LAPACKE_ctrtri","","",null,null],[5,"LAPACKE_ztrtri","","",null,null],[5,"LAPACKE_strtrs","","",null,null],[5,"LAPACKE_dtrtrs","","",null,null],[5,"LAPACKE_ctrtrs","","",null,null],[5,"LAPACKE_ztrtrs","","",null,null],[5,"LAPACKE_strttf","","",null,null],[5,"LAPACKE_dtrttf","","",null,null],[5,"LAPACKE_ctrttf","","",null,null],[5,"LAPACKE_ztrttf","","",null,null],[5,"LAPACKE_strttp","","",null,null],[5,"LAPACKE_dtrttp","","",null,null],[5,"LAPACKE_ctrttp","","",null,null],[5,"LAPACKE_ztrttp","","",null,null],[5,"LAPACKE_stzrzf","","",null,null],[5,"LAPACKE_dtzrzf","","",null,null],[5,"LAPACKE_ctzrzf","","",null,null],[5,"LAPACKE_ztzrzf","","",null,null],[5,"LAPACKE_cungbr","","",null,null],[5,"LAPACKE_zungbr","","",null,null],[5,"LAPACKE_cunghr","","",null,null],[5,"LAPACKE_zunghr","","",null,null],[5,"LAPACKE_cunglq","","",null,null],[5,"LAPACKE_zunglq","","",null,null],[5,"LAPACKE_cungql","","",null,null],[5,"LAPACKE_zungql","","",null,null],[5,"LAPACKE_cungqr","","",null,null],[5,"LAPACKE_zungqr","","",null,null],[5,"LAPACKE_cungrq","","",null,null],[5,"LAPACKE_zungrq","","",null,null],[5,"LAPACKE_cungtr","","",null,null],[5,"LAPACKE_zungtr","","",null,null],[5,"LAPACKE_cunmbr","","",null,null],[5,"LAPACKE_zunmbr","","",null,null],[5,"LAPACKE_cunmhr","","",null,null],[5,"LAPACKE_zunmhr","","",null,null],[5,"LAPACKE_cunmlq","","",null,null],[5,"LAPACKE_zunmlq","","",null,null],[5,"LAPACKE_cunmql","","",null,null],[5,"LAPACKE_zunmql","","",null,null],[5,"LAPACKE_cunmqr","","",null,null],[5,"LAPACKE_zunmqr","","",null,null],[5,"LAPACKE_cunmrq","","",null,null],[5,"LAPACKE_zunmrq","","",null,null],[5,"LAPACKE_cunmrz","","",null,null],[5,"LAPACKE_zunmrz","","",null,null],[5,"LAPACKE_cunmtr","","",null,null],[5,"LAPACKE_zunmtr","","",null,null],[5,"LAPACKE_cupgtr","","",null,null],[5,"LAPACKE_zupgtr","","",null,null],[5,"LAPACKE_cupmtr","","",null,null],[5,"LAPACKE_zupmtr","","",null,null],[5,"LAPACKE_sbdsdc_work","","",null,null],[5,"LAPACKE_dbdsdc_work","","",null,null],[5,"LAPACKE_sbdsvdx_work","","",null,null],[5,"LAPACKE_dbdsvdx_work","","",null,null],[5,"LAPACKE_sbdsqr_work","","",null,null],[5,"LAPACKE_dbdsqr_work","","",null,null],[5,"LAPACKE_cbdsqr_work","","",null,null],[5,"LAPACKE_zbdsqr_work","","",null,null],[5,"LAPACKE_sdisna_work","","",null,null],[5,"LAPACKE_ddisna_work","","",null,null],[5,"LAPACKE_sgbbrd_work","","",null,null],[5,"LAPACKE_dgbbrd_work","","",null,null],[5,"LAPACKE_cgbbrd_work","","",null,null],[5,"LAPACKE_zgbbrd_work","","",null,null],[5,"LAPACKE_sgbcon_work","","",null,null],[5,"LAPACKE_dgbcon_work","","",null,null],[5,"LAPACKE_cgbcon_work","","",null,null],[5,"LAPACKE_zgbcon_work","","",null,null],[5,"LAPACKE_sgbequ_work","","",null,null],[5,"LAPACKE_dgbequ_work","","",null,null],[5,"LAPACKE_cgbequ_work","","",null,null],[5,"LAPACKE_zgbequ_work","","",null,null],[5,"LAPACKE_sgbequb_work","","",null,null],[5,"LAPACKE_dgbequb_work","","",null,null],[5,"LAPACKE_cgbequb_work","","",null,null],[5,"LAPACKE_zgbequb_work","","",null,null],[5,"LAPACKE_sgbrfs_work","","",null,null],[5,"LAPACKE_dgbrfs_work","","",null,null],[5,"LAPACKE_cgbrfs_work","","",null,null],[5,"LAPACKE_zgbrfs_work","","",null,null],[5,"LAPACKE_sgbrfsx_work","","",null,null],[5,"LAPACKE_dgbrfsx_work","","",null,null],[5,"LAPACKE_cgbrfsx_work","","",null,null],[5,"LAPACKE_zgbrfsx_work","","",null,null],[5,"LAPACKE_sgbsv_work","","",null,null],[5,"LAPACKE_dgbsv_work","","",null,null],[5,"LAPACKE_cgbsv_work","","",null,null],[5,"LAPACKE_zgbsv_work","","",null,null],[5,"LAPACKE_sgbsvx_work","","",null,null],[5,"LAPACKE_dgbsvx_work","","",null,null],[5,"LAPACKE_cgbsvx_work","","",null,null],[5,"LAPACKE_zgbsvx_work","","",null,null],[5,"LAPACKE_sgbsvxx_work","","",null,null],[5,"LAPACKE_dgbsvxx_work","","",null,null],[5,"LAPACKE_cgbsvxx_work","","",null,null],[5,"LAPACKE_zgbsvxx_work","","",null,null],[5,"LAPACKE_sgbtrf_work","","",null,null],[5,"LAPACKE_dgbtrf_work","","",null,null],[5,"LAPACKE_cgbtrf_work","","",null,null],[5,"LAPACKE_zgbtrf_work","","",null,null],[5,"LAPACKE_sgbtrs_work","","",null,null],[5,"LAPACKE_dgbtrs_work","","",null,null],[5,"LAPACKE_cgbtrs_work","","",null,null],[5,"LAPACKE_zgbtrs_work","","",null,null],[5,"LAPACKE_sgebak_work","","",null,null],[5,"LAPACKE_dgebak_work","","",null,null],[5,"LAPACKE_cgebak_work","","",null,null],[5,"LAPACKE_zgebak_work","","",null,null],[5,"LAPACKE_sgebal_work","","",null,null],[5,"LAPACKE_dgebal_work","","",null,null],[5,"LAPACKE_cgebal_work","","",null,null],[5,"LAPACKE_zgebal_work","","",null,null],[5,"LAPACKE_sgebrd_work","","",null,null],[5,"LAPACKE_dgebrd_work","","",null,null],[5,"LAPACKE_cgebrd_work","","",null,null],[5,"LAPACKE_zgebrd_work","","",null,null],[5,"LAPACKE_sgecon_work","","",null,null],[5,"LAPACKE_dgecon_work","","",null,null],[5,"LAPACKE_cgecon_work","","",null,null],[5,"LAPACKE_zgecon_work","","",null,null],[5,"LAPACKE_sgeequ_work","","",null,null],[5,"LAPACKE_dgeequ_work","","",null,null],[5,"LAPACKE_cgeequ_work","","",null,null],[5,"LAPACKE_zgeequ_work","","",null,null],[5,"LAPACKE_sgeequb_work","","",null,null],[5,"LAPACKE_dgeequb_work","","",null,null],[5,"LAPACKE_cgeequb_work","","",null,null],[5,"LAPACKE_zgeequb_work","","",null,null],[5,"LAPACKE_sgees_work","","",null,null],[5,"LAPACKE_dgees_work","","",null,null],[5,"LAPACKE_cgees_work","","",null,null],[5,"LAPACKE_zgees_work","","",null,null],[5,"LAPACKE_sgeesx_work","","",null,null],[5,"LAPACKE_dgeesx_work","","",null,null],[5,"LAPACKE_cgeesx_work","","",null,null],[5,"LAPACKE_zgeesx_work","","",null,null],[5,"LAPACKE_sgeev_work","","",null,null],[5,"LAPACKE_dgeev_work","","",null,null],[5,"LAPACKE_cgeev_work","","",null,null],[5,"LAPACKE_zgeev_work","","",null,null],[5,"LAPACKE_sgeevx_work","","",null,null],[5,"LAPACKE_dgeevx_work","","",null,null],[5,"LAPACKE_cgeevx_work","","",null,null],[5,"LAPACKE_zgeevx_work","","",null,null],[5,"LAPACKE_sgehrd_work","","",null,null],[5,"LAPACKE_dgehrd_work","","",null,null],[5,"LAPACKE_cgehrd_work","","",null,null],[5,"LAPACKE_zgehrd_work","","",null,null],[5,"LAPACKE_sgejsv_work","","",null,null],[5,"LAPACKE_dgejsv_work","","",null,null],[5,"LAPACKE_cgejsv_work","","",null,null],[5,"LAPACKE_zgejsv_work","","",null,null],[5,"LAPACKE_sgelq2_work","","",null,null],[5,"LAPACKE_dgelq2_work","","",null,null],[5,"LAPACKE_cgelq2_work","","",null,null],[5,"LAPACKE_zgelq2_work","","",null,null],[5,"LAPACKE_sgelqf_work","","",null,null],[5,"LAPACKE_dgelqf_work","","",null,null],[5,"LAPACKE_cgelqf_work","","",null,null],[5,"LAPACKE_zgelqf_work","","",null,null],[5,"LAPACKE_sgels_work","","",null,null],[5,"LAPACKE_dgels_work","","",null,null],[5,"LAPACKE_cgels_work","","",null,null],[5,"LAPACKE_zgels_work","","",null,null],[5,"LAPACKE_sgelsd_work","","",null,null],[5,"LAPACKE_dgelsd_work","","",null,null],[5,"LAPACKE_cgelsd_work","","",null,null],[5,"LAPACKE_zgelsd_work","","",null,null],[5,"LAPACKE_sgelss_work","","",null,null],[5,"LAPACKE_dgelss_work","","",null,null],[5,"LAPACKE_cgelss_work","","",null,null],[5,"LAPACKE_zgelss_work","","",null,null],[5,"LAPACKE_sgelsy_work","","",null,null],[5,"LAPACKE_dgelsy_work","","",null,null],[5,"LAPACKE_cgelsy_work","","",null,null],[5,"LAPACKE_zgelsy_work","","",null,null],[5,"LAPACKE_sgeqlf_work","","",null,null],[5,"LAPACKE_dgeqlf_work","","",null,null],[5,"LAPACKE_cgeqlf_work","","",null,null],[5,"LAPACKE_zgeqlf_work","","",null,null],[5,"LAPACKE_sgeqp3_work","","",null,null],[5,"LAPACKE_dgeqp3_work","","",null,null],[5,"LAPACKE_cgeqp3_work","","",null,null],[5,"LAPACKE_zgeqp3_work","","",null,null],[5,"LAPACKE_sgeqpf_work","","",null,null],[5,"LAPACKE_dgeqpf_work","","",null,null],[5,"LAPACKE_cgeqpf_work","","",null,null],[5,"LAPACKE_zgeqpf_work","","",null,null],[5,"LAPACKE_sgeqr2_work","","",null,null],[5,"LAPACKE_dgeqr2_work","","",null,null],[5,"LAPACKE_cgeqr2_work","","",null,null],[5,"LAPACKE_zgeqr2_work","","",null,null],[5,"LAPACKE_sgeqrf_work","","",null,null],[5,"LAPACKE_dgeqrf_work","","",null,null],[5,"LAPACKE_cgeqrf_work","","",null,null],[5,"LAPACKE_zgeqrf_work","","",null,null],[5,"LAPACKE_sgeqrfp_work","","",null,null],[5,"LAPACKE_dgeqrfp_work","","",null,null],[5,"LAPACKE_cgeqrfp_work","","",null,null],[5,"LAPACKE_zgeqrfp_work","","",null,null],[5,"LAPACKE_sgerfs_work","","",null,null],[5,"LAPACKE_dgerfs_work","","",null,null],[5,"LAPACKE_cgerfs_work","","",null,null],[5,"LAPACKE_zgerfs_work","","",null,null],[5,"LAPACKE_sgerfsx_work","","",null,null],[5,"LAPACKE_dgerfsx_work","","",null,null],[5,"LAPACKE_cgerfsx_work","","",null,null],[5,"LAPACKE_zgerfsx_work","","",null,null],[5,"LAPACKE_sgerqf_work","","",null,null],[5,"LAPACKE_dgerqf_work","","",null,null],[5,"LAPACKE_cgerqf_work","","",null,null],[5,"LAPACKE_zgerqf_work","","",null,null],[5,"LAPACKE_sgesdd_work","","",null,null],[5,"LAPACKE_dgesdd_work","","",null,null],[5,"LAPACKE_cgesdd_work","","",null,null],[5,"LAPACKE_zgesdd_work","","",null,null],[5,"LAPACKE_sgesv_work","","",null,null],[5,"LAPACKE_dgesv_work","","",null,null],[5,"LAPACKE_cgesv_work","","",null,null],[5,"LAPACKE_zgesv_work","","",null,null],[5,"LAPACKE_dsgesv_work","","",null,null],[5,"LAPACKE_zcgesv_work","","",null,null],[5,"LAPACKE_sgesvd_work","","",null,null],[5,"LAPACKE_dgesvd_work","","",null,null],[5,"LAPACKE_cgesvd_work","","",null,null],[5,"LAPACKE_zgesvd_work","","",null,null],[5,"LAPACKE_sgesvdx_work","","",null,null],[5,"LAPACKE_dgesvdx_work","","",null,null],[5,"LAPACKE_cgesvdx_work","","",null,null],[5,"LAPACKE_zgesvdx_work","","",null,null],[5,"LAPACKE_sgesvj_work","","",null,null],[5,"LAPACKE_dgesvj_work","","",null,null],[5,"LAPACKE_cgesvj_work","","",null,null],[5,"LAPACKE_zgesvj_work","","",null,null],[5,"LAPACKE_sgesvx_work","","",null,null],[5,"LAPACKE_dgesvx_work","","",null,null],[5,"LAPACKE_cgesvx_work","","",null,null],[5,"LAPACKE_zgesvx_work","","",null,null],[5,"LAPACKE_sgesvxx_work","","",null,null],[5,"LAPACKE_dgesvxx_work","","",null,null],[5,"LAPACKE_cgesvxx_work","","",null,null],[5,"LAPACKE_zgesvxx_work","","",null,null],[5,"LAPACKE_sgetf2_work","","",null,null],[5,"LAPACKE_dgetf2_work","","",null,null],[5,"LAPACKE_cgetf2_work","","",null,null],[5,"LAPACKE_zgetf2_work","","",null,null],[5,"LAPACKE_sgetrf_work","","",null,null],[5,"LAPACKE_dgetrf_work","","",null,null],[5,"LAPACKE_cgetrf_work","","",null,null],[5,"LAPACKE_zgetrf_work","","",null,null],[5,"LAPACKE_sgetrf2_work","","",null,null],[5,"LAPACKE_dgetrf2_work","","",null,null],[5,"LAPACKE_cgetrf2_work","","",null,null],[5,"LAPACKE_zgetrf2_work","","",null,null],[5,"LAPACKE_sgetri_work","","",null,null],[5,"LAPACKE_dgetri_work","","",null,null],[5,"LAPACKE_cgetri_work","","",null,null],[5,"LAPACKE_zgetri_work","","",null,null],[5,"LAPACKE_sgetrs_work","","",null,null],[5,"LAPACKE_dgetrs_work","","",null,null],[5,"LAPACKE_cgetrs_work","","",null,null],[5,"LAPACKE_zgetrs_work","","",null,null],[5,"LAPACKE_sggbak_work","","",null,null],[5,"LAPACKE_dggbak_work","","",null,null],[5,"LAPACKE_cggbak_work","","",null,null],[5,"LAPACKE_zggbak_work","","",null,null],[5,"LAPACKE_sggbal_work","","",null,null],[5,"LAPACKE_dggbal_work","","",null,null],[5,"LAPACKE_cggbal_work","","",null,null],[5,"LAPACKE_zggbal_work","","",null,null],[5,"LAPACKE_sgges_work","","",null,null],[5,"LAPACKE_dgges_work","","",null,null],[5,"LAPACKE_cgges_work","","",null,null],[5,"LAPACKE_zgges_work","","",null,null],[5,"LAPACKE_sgges3_work","","",null,null],[5,"LAPACKE_dgges3_work","","",null,null],[5,"LAPACKE_cgges3_work","","",null,null],[5,"LAPACKE_zgges3_work","","",null,null],[5,"LAPACKE_sggesx_work","","",null,null],[5,"LAPACKE_dggesx_work","","",null,null],[5,"LAPACKE_cggesx_work","","",null,null],[5,"LAPACKE_zggesx_work","","",null,null],[5,"LAPACKE_sggev_work","","",null,null],[5,"LAPACKE_dggev_work","","",null,null],[5,"LAPACKE_cggev_work","","",null,null],[5,"LAPACKE_zggev_work","","",null,null],[5,"LAPACKE_sggev3_work","","",null,null],[5,"LAPACKE_dggev3_work","","",null,null],[5,"LAPACKE_cggev3_work","","",null,null],[5,"LAPACKE_zggev3_work","","",null,null],[5,"LAPACKE_sggevx_work","","",null,null],[5,"LAPACKE_dggevx_work","","",null,null],[5,"LAPACKE_cggevx_work","","",null,null],[5,"LAPACKE_zggevx_work","","",null,null],[5,"LAPACKE_sggglm_work","","",null,null],[5,"LAPACKE_dggglm_work","","",null,null],[5,"LAPACKE_cggglm_work","","",null,null],[5,"LAPACKE_zggglm_work","","",null,null],[5,"LAPACKE_sgghrd_work","","",null,null],[5,"LAPACKE_dgghrd_work","","",null,null],[5,"LAPACKE_cgghrd_work","","",null,null],[5,"LAPACKE_zgghrd_work","","",null,null],[5,"LAPACKE_sgghd3_work","","",null,null],[5,"LAPACKE_dgghd3_work","","",null,null],[5,"LAPACKE_cgghd3_work","","",null,null],[5,"LAPACKE_zgghd3_work","","",null,null],[5,"LAPACKE_sgglse_work","","",null,null],[5,"LAPACKE_dgglse_work","","",null,null],[5,"LAPACKE_cgglse_work","","",null,null],[5,"LAPACKE_zgglse_work","","",null,null],[5,"LAPACKE_sggqrf_work","","",null,null],[5,"LAPACKE_dggqrf_work","","",null,null],[5,"LAPACKE_cggqrf_work","","",null,null],[5,"LAPACKE_zggqrf_work","","",null,null],[5,"LAPACKE_sggrqf_work","","",null,null],[5,"LAPACKE_dggrqf_work","","",null,null],[5,"LAPACKE_cggrqf_work","","",null,null],[5,"LAPACKE_zggrqf_work","","",null,null],[5,"LAPACKE_sggsvd_work","","",null,null],[5,"LAPACKE_dggsvd_work","","",null,null],[5,"LAPACKE_cggsvd_work","","",null,null],[5,"LAPACKE_zggsvd_work","","",null,null],[5,"LAPACKE_sggsvd3_work","","",null,null],[5,"LAPACKE_dggsvd3_work","","",null,null],[5,"LAPACKE_cggsvd3_work","","",null,null],[5,"LAPACKE_zggsvd3_work","","",null,null],[5,"LAPACKE_sggsvp_work","","",null,null],[5,"LAPACKE_dggsvp_work","","",null,null],[5,"LAPACKE_cggsvp_work","","",null,null],[5,"LAPACKE_zggsvp_work","","",null,null],[5,"LAPACKE_sggsvp3_work","","",null,null],[5,"LAPACKE_dggsvp3_work","","",null,null],[5,"LAPACKE_cggsvp3_work","","",null,null],[5,"LAPACKE_zggsvp3_work","","",null,null],[5,"LAPACKE_sgtcon_work","","",null,null],[5,"LAPACKE_dgtcon_work","","",null,null],[5,"LAPACKE_cgtcon_work","","",null,null],[5,"LAPACKE_zgtcon_work","","",null,null],[5,"LAPACKE_sgtrfs_work","","",null,null],[5,"LAPACKE_dgtrfs_work","","",null,null],[5,"LAPACKE_cgtrfs_work","","",null,null],[5,"LAPACKE_zgtrfs_work","","",null,null],[5,"LAPACKE_sgtsv_work","","",null,null],[5,"LAPACKE_dgtsv_work","","",null,null],[5,"LAPACKE_cgtsv_work","","",null,null],[5,"LAPACKE_zgtsv_work","","",null,null],[5,"LAPACKE_sgtsvx_work","","",null,null],[5,"LAPACKE_dgtsvx_work","","",null,null],[5,"LAPACKE_cgtsvx_work","","",null,null],[5,"LAPACKE_zgtsvx_work","","",null,null],[5,"LAPACKE_sgttrf_work","","",null,null],[5,"LAPACKE_dgttrf_work","","",null,null],[5,"LAPACKE_cgttrf_work","","",null,null],[5,"LAPACKE_zgttrf_work","","",null,null],[5,"LAPACKE_sgttrs_work","","",null,null],[5,"LAPACKE_dgttrs_work","","",null,null],[5,"LAPACKE_cgttrs_work","","",null,null],[5,"LAPACKE_zgttrs_work","","",null,null],[5,"LAPACKE_chbev_work","","",null,null],[5,"LAPACKE_zhbev_work","","",null,null],[5,"LAPACKE_chbevd_work","","",null,null],[5,"LAPACKE_zhbevd_work","","",null,null],[5,"LAPACKE_chbevx_work","","",null,null],[5,"LAPACKE_zhbevx_work","","",null,null],[5,"LAPACKE_chbgst_work","","",null,null],[5,"LAPACKE_zhbgst_work","","",null,null],[5,"LAPACKE_chbgv_work","","",null,null],[5,"LAPACKE_zhbgv_work","","",null,null],[5,"LAPACKE_chbgvd_work","","",null,null],[5,"LAPACKE_zhbgvd_work","","",null,null],[5,"LAPACKE_chbgvx_work","","",null,null],[5,"LAPACKE_zhbgvx_work","","",null,null],[5,"LAPACKE_chbtrd_work","","",null,null],[5,"LAPACKE_zhbtrd_work","","",null,null],[5,"LAPACKE_checon_work","","",null,null],[5,"LAPACKE_zhecon_work","","",null,null],[5,"LAPACKE_cheequb_work","","",null,null],[5,"LAPACKE_zheequb_work","","",null,null],[5,"LAPACKE_cheev_work","","",null,null],[5,"LAPACKE_zheev_work","","",null,null],[5,"LAPACKE_cheevd_work","","",null,null],[5,"LAPACKE_zheevd_work","","",null,null],[5,"LAPACKE_cheevr_work","","",null,null],[5,"LAPACKE_zheevr_work","","",null,null],[5,"LAPACKE_cheevx_work","","",null,null],[5,"LAPACKE_zheevx_work","","",null,null],[5,"LAPACKE_chegst_work","","",null,null],[5,"LAPACKE_zhegst_work","","",null,null],[5,"LAPACKE_chegv_work","","",null,null],[5,"LAPACKE_zhegv_work","","",null,null],[5,"LAPACKE_chegvd_work","","",null,null],[5,"LAPACKE_zhegvd_work","","",null,null],[5,"LAPACKE_chegvx_work","","",null,null],[5,"LAPACKE_zhegvx_work","","",null,null],[5,"LAPACKE_cherfs_work","","",null,null],[5,"LAPACKE_zherfs_work","","",null,null],[5,"LAPACKE_cherfsx_work","","",null,null],[5,"LAPACKE_zherfsx_work","","",null,null],[5,"LAPACKE_chesv_work","","",null,null],[5,"LAPACKE_zhesv_work","","",null,null],[5,"LAPACKE_chesvx_work","","",null,null],[5,"LAPACKE_zhesvx_work","","",null,null],[5,"LAPACKE_chesvxx_work","","",null,null],[5,"LAPACKE_zhesvxx_work","","",null,null],[5,"LAPACKE_chetrd_work","","",null,null],[5,"LAPACKE_zhetrd_work","","",null,null],[5,"LAPACKE_chetrf_work","","",null,null],[5,"LAPACKE_zhetrf_work","","",null,null],[5,"LAPACKE_chetri_work","","",null,null],[5,"LAPACKE_zhetri_work","","",null,null],[5,"LAPACKE_chetrs_work","","",null,null],[5,"LAPACKE_zhetrs_work","","",null,null],[5,"LAPACKE_chfrk_work","","",null,null],[5,"LAPACKE_zhfrk_work","","",null,null],[5,"LAPACKE_shgeqz_work","","",null,null],[5,"LAPACKE_dhgeqz_work","","",null,null],[5,"LAPACKE_chgeqz_work","","",null,null],[5,"LAPACKE_zhgeqz_work","","",null,null],[5,"LAPACKE_chpcon_work","","",null,null],[5,"LAPACKE_zhpcon_work","","",null,null],[5,"LAPACKE_chpev_work","","",null,null],[5,"LAPACKE_zhpev_work","","",null,null],[5,"LAPACKE_chpevd_work","","",null,null],[5,"LAPACKE_zhpevd_work","","",null,null],[5,"LAPACKE_chpevx_work","","",null,null],[5,"LAPACKE_zhpevx_work","","",null,null],[5,"LAPACKE_chpgst_work","","",null,null],[5,"LAPACKE_zhpgst_work","","",null,null],[5,"LAPACKE_chpgv_work","","",null,null],[5,"LAPACKE_zhpgv_work","","",null,null],[5,"LAPACKE_chpgvd_work","","",null,null],[5,"LAPACKE_zhpgvd_work","","",null,null],[5,"LAPACKE_chpgvx_work","","",null,null],[5,"LAPACKE_zhpgvx_work","","",null,null],[5,"LAPACKE_chprfs_work","","",null,null],[5,"LAPACKE_zhprfs_work","","",null,null],[5,"LAPACKE_chpsv_work","","",null,null],[5,"LAPACKE_zhpsv_work","","",null,null],[5,"LAPACKE_chpsvx_work","","",null,null],[5,"LAPACKE_zhpsvx_work","","",null,null],[5,"LAPACKE_chptrd_work","","",null,null],[5,"LAPACKE_zhptrd_work","","",null,null],[5,"LAPACKE_chptrf_work","","",null,null],[5,"LAPACKE_zhptrf_work","","",null,null],[5,"LAPACKE_chptri_work","","",null,null],[5,"LAPACKE_zhptri_work","","",null,null],[5,"LAPACKE_chptrs_work","","",null,null],[5,"LAPACKE_zhptrs_work","","",null,null],[5,"LAPACKE_shsein_work","","",null,null],[5,"LAPACKE_dhsein_work","","",null,null],[5,"LAPACKE_chsein_work","","",null,null],[5,"LAPACKE_zhsein_work","","",null,null],[5,"LAPACKE_shseqr_work","","",null,null],[5,"LAPACKE_dhseqr_work","","",null,null],[5,"LAPACKE_chseqr_work","","",null,null],[5,"LAPACKE_zhseqr_work","","",null,null],[5,"LAPACKE_clacgv_work","","",null,null],[5,"LAPACKE_zlacgv_work","","",null,null],[5,"LAPACKE_slacn2_work","","",null,null],[5,"LAPACKE_dlacn2_work","","",null,null],[5,"LAPACKE_clacn2_work","","",null,null],[5,"LAPACKE_zlacn2_work","","",null,null],[5,"LAPACKE_slacpy_work","","",null,null],[5,"LAPACKE_dlacpy_work","","",null,null],[5,"LAPACKE_clacpy_work","","",null,null],[5,"LAPACKE_zlacpy_work","","",null,null],[5,"LAPACKE_clacp2_work","","",null,null],[5,"LAPACKE_zlacp2_work","","",null,null],[5,"LAPACKE_zlag2c_work","","",null,null],[5,"LAPACKE_slag2d_work","","",null,null],[5,"LAPACKE_dlag2s_work","","",null,null],[5,"LAPACKE_clag2z_work","","",null,null],[5,"LAPACKE_slagge_work","","",null,null],[5,"LAPACKE_dlagge_work","","",null,null],[5,"LAPACKE_clagge_work","","",null,null],[5,"LAPACKE_zlagge_work","","",null,null],[5,"LAPACKE_claghe_work","","",null,null],[5,"LAPACKE_zlaghe_work","","",null,null],[5,"LAPACKE_slagsy_work","","",null,null],[5,"LAPACKE_dlagsy_work","","",null,null],[5,"LAPACKE_clagsy_work","","",null,null],[5,"LAPACKE_zlagsy_work","","",null,null],[5,"LAPACKE_slapmr_work","","",null,null],[5,"LAPACKE_dlapmr_work","","",null,null],[5,"LAPACKE_clapmr_work","","",null,null],[5,"LAPACKE_zlapmr_work","","",null,null],[5,"LAPACKE_slapmt_work","","",null,null],[5,"LAPACKE_dlapmt_work","","",null,null],[5,"LAPACKE_clapmt_work","","",null,null],[5,"LAPACKE_zlapmt_work","","",null,null],[5,"LAPACKE_slartgp_work","","",null,null],[5,"LAPACKE_dlartgp_work","","",null,null],[5,"LAPACKE_slartgs_work","","",null,null],[5,"LAPACKE_dlartgs_work","","",null,null],[5,"LAPACKE_slapy2_work","","",null,null],[5,"LAPACKE_dlapy2_work","","",null,null],[5,"LAPACKE_slapy3_work","","",null,null],[5,"LAPACKE_dlapy3_work","","",null,null],[5,"LAPACKE_slamch_work","","",null,null],[5,"LAPACKE_dlamch_work","","",null,null],[5,"LAPACKE_slange_work","","",null,null],[5,"LAPACKE_dlange_work","","",null,null],[5,"LAPACKE_clange_work","","",null,null],[5,"LAPACKE_zlange_work","","",null,null],[5,"LAPACKE_clanhe_work","","",null,null],[5,"LAPACKE_zlanhe_work","","",null,null],[5,"LAPACKE_slansy_work","","",null,null],[5,"LAPACKE_dlansy_work","","",null,null],[5,"LAPACKE_clansy_work","","",null,null],[5,"LAPACKE_zlansy_work","","",null,null],[5,"LAPACKE_slantr_work","","",null,null],[5,"LAPACKE_dlantr_work","","",null,null],[5,"LAPACKE_clantr_work","","",null,null],[5,"LAPACKE_zlantr_work","","",null,null],[5,"LAPACKE_slarfb_work","","",null,null],[5,"LAPACKE_dlarfb_work","","",null,null],[5,"LAPACKE_clarfb_work","","",null,null],[5,"LAPACKE_zlarfb_work","","",null,null],[5,"LAPACKE_slarfg_work","","",null,null],[5,"LAPACKE_dlarfg_work","","",null,null],[5,"LAPACKE_clarfg_work","","",null,null],[5,"LAPACKE_zlarfg_work","","",null,null],[5,"LAPACKE_slarft_work","","",null,null],[5,"LAPACKE_dlarft_work","","",null,null],[5,"LAPACKE_clarft_work","","",null,null],[5,"LAPACKE_zlarft_work","","",null,null],[5,"LAPACKE_slarfx_work","","",null,null],[5,"LAPACKE_dlarfx_work","","",null,null],[5,"LAPACKE_clarfx_work","","",null,null],[5,"LAPACKE_zlarfx_work","","",null,null],[5,"LAPACKE_slarnv_work","","",null,null],[5,"LAPACKE_dlarnv_work","","",null,null],[5,"LAPACKE_clarnv_work","","",null,null],[5,"LAPACKE_zlarnv_work","","",null,null],[5,"LAPACKE_slascl_work","","",null,null],[5,"LAPACKE_dlascl_work","","",null,null],[5,"LAPACKE_clascl_work","","",null,null],[5,"LAPACKE_zlascl_work","","",null,null],[5,"LAPACKE_slaset_work","","",null,null],[5,"LAPACKE_dlaset_work","","",null,null],[5,"LAPACKE_claset_work","","",null,null],[5,"LAPACKE_zlaset_work","","",null,null],[5,"LAPACKE_slasrt_work","","",null,null],[5,"LAPACKE_dlasrt_work","","",null,null],[5,"LAPACKE_slaswp_work","","",null,null],[5,"LAPACKE_dlaswp_work","","",null,null],[5,"LAPACKE_claswp_work","","",null,null],[5,"LAPACKE_zlaswp_work","","",null,null],[5,"LAPACKE_slatms_work","","",null,null],[5,"LAPACKE_dlatms_work","","",null,null],[5,"LAPACKE_clatms_work","","",null,null],[5,"LAPACKE_zlatms_work","","",null,null],[5,"LAPACKE_slauum_work","","",null,null],[5,"LAPACKE_dlauum_work","","",null,null],[5,"LAPACKE_clauum_work","","",null,null],[5,"LAPACKE_zlauum_work","","",null,null],[5,"LAPACKE_sopgtr_work","","",null,null],[5,"LAPACKE_dopgtr_work","","",null,null],[5,"LAPACKE_sopmtr_work","","",null,null],[5,"LAPACKE_dopmtr_work","","",null,null],[5,"LAPACKE_sorgbr_work","","",null,null],[5,"LAPACKE_dorgbr_work","","",null,null],[5,"LAPACKE_sorghr_work","","",null,null],[5,"LAPACKE_dorghr_work","","",null,null],[5,"LAPACKE_sorglq_work","","",null,null],[5,"LAPACKE_dorglq_work","","",null,null],[5,"LAPACKE_sorgql_work","","",null,null],[5,"LAPACKE_dorgql_work","","",null,null],[5,"LAPACKE_sorgqr_work","","",null,null],[5,"LAPACKE_dorgqr_work","","",null,null],[5,"LAPACKE_sorgrq_work","","",null,null],[5,"LAPACKE_dorgrq_work","","",null,null],[5,"LAPACKE_sorgtr_work","","",null,null],[5,"LAPACKE_dorgtr_work","","",null,null],[5,"LAPACKE_sormbr_work","","",null,null],[5,"LAPACKE_dormbr_work","","",null,null],[5,"LAPACKE_sormhr_work","","",null,null],[5,"LAPACKE_dormhr_work","","",null,null],[5,"LAPACKE_sormlq_work","","",null,null],[5,"LAPACKE_dormlq_work","","",null,null],[5,"LAPACKE_sormql_work","","",null,null],[5,"LAPACKE_dormql_work","","",null,null],[5,"LAPACKE_sormqr_work","","",null,null],[5,"LAPACKE_dormqr_work","","",null,null],[5,"LAPACKE_sormrq_work","","",null,null],[5,"LAPACKE_dormrq_work","","",null,null],[5,"LAPACKE_sormrz_work","","",null,null],[5,"LAPACKE_dormrz_work","","",null,null],[5,"LAPACKE_sormtr_work","","",null,null],[5,"LAPACKE_dormtr_work","","",null,null],[5,"LAPACKE_spbcon_work","","",null,null],[5,"LAPACKE_dpbcon_work","","",null,null],[5,"LAPACKE_cpbcon_work","","",null,null],[5,"LAPACKE_zpbcon_work","","",null,null],[5,"LAPACKE_spbequ_work","","",null,null],[5,"LAPACKE_dpbequ_work","","",null,null],[5,"LAPACKE_cpbequ_work","","",null,null],[5,"LAPACKE_zpbequ_work","","",null,null],[5,"LAPACKE_spbrfs_work","","",null,null],[5,"LAPACKE_dpbrfs_work","","",null,null],[5,"LAPACKE_cpbrfs_work","","",null,null],[5,"LAPACKE_zpbrfs_work","","",null,null],[5,"LAPACKE_spbstf_work","","",null,null],[5,"LAPACKE_dpbstf_work","","",null,null],[5,"LAPACKE_cpbstf_work","","",null,null],[5,"LAPACKE_zpbstf_work","","",null,null],[5,"LAPACKE_spbsv_work","","",null,null],[5,"LAPACKE_dpbsv_work","","",null,null],[5,"LAPACKE_cpbsv_work","","",null,null],[5,"LAPACKE_zpbsv_work","","",null,null],[5,"LAPACKE_spbsvx_work","","",null,null],[5,"LAPACKE_dpbsvx_work","","",null,null],[5,"LAPACKE_cpbsvx_work","","",null,null],[5,"LAPACKE_zpbsvx_work","","",null,null],[5,"LAPACKE_spbtrf_work","","",null,null],[5,"LAPACKE_dpbtrf_work","","",null,null],[5,"LAPACKE_cpbtrf_work","","",null,null],[5,"LAPACKE_zpbtrf_work","","",null,null],[5,"LAPACKE_spbtrs_work","","",null,null],[5,"LAPACKE_dpbtrs_work","","",null,null],[5,"LAPACKE_cpbtrs_work","","",null,null],[5,"LAPACKE_zpbtrs_work","","",null,null],[5,"LAPACKE_spftrf_work","","",null,null],[5,"LAPACKE_dpftrf_work","","",null,null],[5,"LAPACKE_cpftrf_work","","",null,null],[5,"LAPACKE_zpftrf_work","","",null,null],[5,"LAPACKE_spftri_work","","",null,null],[5,"LAPACKE_dpftri_work","","",null,null],[5,"LAPACKE_cpftri_work","","",null,null],[5,"LAPACKE_zpftri_work","","",null,null],[5,"LAPACKE_spftrs_work","","",null,null],[5,"LAPACKE_dpftrs_work","","",null,null],[5,"LAPACKE_cpftrs_work","","",null,null],[5,"LAPACKE_zpftrs_work","","",null,null],[5,"LAPACKE_spocon_work","","",null,null],[5,"LAPACKE_dpocon_work","","",null,null],[5,"LAPACKE_cpocon_work","","",null,null],[5,"LAPACKE_zpocon_work","","",null,null],[5,"LAPACKE_spoequ_work","","",null,null],[5,"LAPACKE_dpoequ_work","","",null,null],[5,"LAPACKE_cpoequ_work","","",null,null],[5,"LAPACKE_zpoequ_work","","",null,null],[5,"LAPACKE_spoequb_work","","",null,null],[5,"LAPACKE_dpoequb_work","","",null,null],[5,"LAPACKE_cpoequb_work","","",null,null],[5,"LAPACKE_zpoequb_work","","",null,null],[5,"LAPACKE_sporfs_work","","",null,null],[5,"LAPACKE_dporfs_work","","",null,null],[5,"LAPACKE_cporfs_work","","",null,null],[5,"LAPACKE_zporfs_work","","",null,null],[5,"LAPACKE_sporfsx_work","","",null,null],[5,"LAPACKE_dporfsx_work","","",null,null],[5,"LAPACKE_cporfsx_work","","",null,null],[5,"LAPACKE_zporfsx_work","","",null,null],[5,"LAPACKE_sposv_work","","",null,null],[5,"LAPACKE_dposv_work","","",null,null],[5,"LAPACKE_cposv_work","","",null,null],[5,"LAPACKE_zposv_work","","",null,null],[5,"LAPACKE_dsposv_work","","",null,null],[5,"LAPACKE_zcposv_work","","",null,null],[5,"LAPACKE_sposvx_work","","",null,null],[5,"LAPACKE_dposvx_work","","",null,null],[5,"LAPACKE_cposvx_work","","",null,null],[5,"LAPACKE_zposvx_work","","",null,null],[5,"LAPACKE_sposvxx_work","","",null,null],[5,"LAPACKE_dposvxx_work","","",null,null],[5,"LAPACKE_cposvxx_work","","",null,null],[5,"LAPACKE_zposvxx_work","","",null,null],[5,"LAPACKE_spotrf2_work","","",null,null],[5,"LAPACKE_dpotrf2_work","","",null,null],[5,"LAPACKE_cpotrf2_work","","",null,null],[5,"LAPACKE_zpotrf2_work","","",null,null],[5,"LAPACKE_spotrf_work","","",null,null],[5,"LAPACKE_dpotrf_work","","",null,null],[5,"LAPACKE_cpotrf_work","","",null,null],[5,"LAPACKE_zpotrf_work","","",null,null],[5,"LAPACKE_spotri_work","","",null,null],[5,"LAPACKE_dpotri_work","","",null,null],[5,"LAPACKE_cpotri_work","","",null,null],[5,"LAPACKE_zpotri_work","","",null,null],[5,"LAPACKE_spotrs_work","","",null,null],[5,"LAPACKE_dpotrs_work","","",null,null],[5,"LAPACKE_cpotrs_work","","",null,null],[5,"LAPACKE_zpotrs_work","","",null,null],[5,"LAPACKE_sppcon_work","","",null,null],[5,"LAPACKE_dppcon_work","","",null,null],[5,"LAPACKE_cppcon_work","","",null,null],[5,"LAPACKE_zppcon_work","","",null,null],[5,"LAPACKE_sppequ_work","","",null,null],[5,"LAPACKE_dppequ_work","","",null,null],[5,"LAPACKE_cppequ_work","","",null,null],[5,"LAPACKE_zppequ_work","","",null,null],[5,"LAPACKE_spprfs_work","","",null,null],[5,"LAPACKE_dpprfs_work","","",null,null],[5,"LAPACKE_cpprfs_work","","",null,null],[5,"LAPACKE_zpprfs_work","","",null,null],[5,"LAPACKE_sppsv_work","","",null,null],[5,"LAPACKE_dppsv_work","","",null,null],[5,"LAPACKE_cppsv_work","","",null,null],[5,"LAPACKE_zppsv_work","","",null,null],[5,"LAPACKE_sppsvx_work","","",null,null],[5,"LAPACKE_dppsvx_work","","",null,null],[5,"LAPACKE_cppsvx_work","","",null,null],[5,"LAPACKE_zppsvx_work","","",null,null],[5,"LAPACKE_spptrf_work","","",null,null],[5,"LAPACKE_dpptrf_work","","",null,null],[5,"LAPACKE_cpptrf_work","","",null,null],[5,"LAPACKE_zpptrf_work","","",null,null],[5,"LAPACKE_spptri_work","","",null,null],[5,"LAPACKE_dpptri_work","","",null,null],[5,"LAPACKE_cpptri_work","","",null,null],[5,"LAPACKE_zpptri_work","","",null,null],[5,"LAPACKE_spptrs_work","","",null,null],[5,"LAPACKE_dpptrs_work","","",null,null],[5,"LAPACKE_cpptrs_work","","",null,null],[5,"LAPACKE_zpptrs_work","","",null,null],[5,"LAPACKE_spstrf_work","","",null,null],[5,"LAPACKE_dpstrf_work","","",null,null],[5,"LAPACKE_cpstrf_work","","",null,null],[5,"LAPACKE_zpstrf_work","","",null,null],[5,"LAPACKE_sptcon_work","","",null,null],[5,"LAPACKE_dptcon_work","","",null,null],[5,"LAPACKE_cptcon_work","","",null,null],[5,"LAPACKE_zptcon_work","","",null,null],[5,"LAPACKE_spteqr_work","","",null,null],[5,"LAPACKE_dpteqr_work","","",null,null],[5,"LAPACKE_cpteqr_work","","",null,null],[5,"LAPACKE_zpteqr_work","","",null,null],[5,"LAPACKE_sptrfs_work","","",null,null],[5,"LAPACKE_dptrfs_work","","",null,null],[5,"LAPACKE_cptrfs_work","","",null,null],[5,"LAPACKE_zptrfs_work","","",null,null],[5,"LAPACKE_sptsv_work","","",null,null],[5,"LAPACKE_dptsv_work","","",null,null],[5,"LAPACKE_cptsv_work","","",null,null],[5,"LAPACKE_zptsv_work","","",null,null],[5,"LAPACKE_sptsvx_work","","",null,null],[5,"LAPACKE_dptsvx_work","","",null,null],[5,"LAPACKE_cptsvx_work","","",null,null],[5,"LAPACKE_zptsvx_work","","",null,null],[5,"LAPACKE_spttrf_work","","",null,null],[5,"LAPACKE_dpttrf_work","","",null,null],[5,"LAPACKE_cpttrf_work","","",null,null],[5,"LAPACKE_zpttrf_work","","",null,null],[5,"LAPACKE_spttrs_work","","",null,null],[5,"LAPACKE_dpttrs_work","","",null,null],[5,"LAPACKE_cpttrs_work","","",null,null],[5,"LAPACKE_zpttrs_work","","",null,null],[5,"LAPACKE_ssbev_work","","",null,null],[5,"LAPACKE_dsbev_work","","",null,null],[5,"LAPACKE_ssbevd_work","","",null,null],[5,"LAPACKE_dsbevd_work","","",null,null],[5,"LAPACKE_ssbevx_work","","",null,null],[5,"LAPACKE_dsbevx_work","","",null,null],[5,"LAPACKE_ssbgst_work","","",null,null],[5,"LAPACKE_dsbgst_work","","",null,null],[5,"LAPACKE_ssbgv_work","","",null,null],[5,"LAPACKE_dsbgv_work","","",null,null],[5,"LAPACKE_ssbgvd_work","","",null,null],[5,"LAPACKE_dsbgvd_work","","",null,null],[5,"LAPACKE_ssbgvx_work","","",null,null],[5,"LAPACKE_dsbgvx_work","","",null,null],[5,"LAPACKE_ssbtrd_work","","",null,null],[5,"LAPACKE_dsbtrd_work","","",null,null],[5,"LAPACKE_ssfrk_work","","",null,null],[5,"LAPACKE_dsfrk_work","","",null,null],[5,"LAPACKE_sspcon_work","","",null,null],[5,"LAPACKE_dspcon_work","","",null,null],[5,"LAPACKE_cspcon_work","","",null,null],[5,"LAPACKE_zspcon_work","","",null,null],[5,"LAPACKE_sspev_work","","",null,null],[5,"LAPACKE_dspev_work","","",null,null],[5,"LAPACKE_sspevd_work","","",null,null],[5,"LAPACKE_dspevd_work","","",null,null],[5,"LAPACKE_sspevx_work","","",null,null],[5,"LAPACKE_dspevx_work","","",null,null],[5,"LAPACKE_sspgst_work","","",null,null],[5,"LAPACKE_dspgst_work","","",null,null],[5,"LAPACKE_sspgv_work","","",null,null],[5,"LAPACKE_dspgv_work","","",null,null],[5,"LAPACKE_sspgvd_work","","",null,null],[5,"LAPACKE_dspgvd_work","","",null,null],[5,"LAPACKE_sspgvx_work","","",null,null],[5,"LAPACKE_dspgvx_work","","",null,null],[5,"LAPACKE_ssprfs_work","","",null,null],[5,"LAPACKE_dsprfs_work","","",null,null],[5,"LAPACKE_csprfs_work","","",null,null],[5,"LAPACKE_zsprfs_work","","",null,null],[5,"LAPACKE_sspsv_work","","",null,null],[5,"LAPACKE_dspsv_work","","",null,null],[5,"LAPACKE_cspsv_work","","",null,null],[5,"LAPACKE_zspsv_work","","",null,null],[5,"LAPACKE_sspsvx_work","","",null,null],[5,"LAPACKE_dspsvx_work","","",null,null],[5,"LAPACKE_cspsvx_work","","",null,null],[5,"LAPACKE_zspsvx_work","","",null,null],[5,"LAPACKE_ssptrd_work","","",null,null],[5,"LAPACKE_dsptrd_work","","",null,null],[5,"LAPACKE_ssptrf_work","","",null,null],[5,"LAPACKE_dsptrf_work","","",null,null],[5,"LAPACKE_csptrf_work","","",null,null],[5,"LAPACKE_zsptrf_work","","",null,null],[5,"LAPACKE_ssptri_work","","",null,null],[5,"LAPACKE_dsptri_work","","",null,null],[5,"LAPACKE_csptri_work","","",null,null],[5,"LAPACKE_zsptri_work","","",null,null],[5,"LAPACKE_ssptrs_work","","",null,null],[5,"LAPACKE_dsptrs_work","","",null,null],[5,"LAPACKE_csptrs_work","","",null,null],[5,"LAPACKE_zsptrs_work","","",null,null],[5,"LAPACKE_sstebz_work","","",null,null],[5,"LAPACKE_dstebz_work","","",null,null],[5,"LAPACKE_sstedc_work","","",null,null],[5,"LAPACKE_dstedc_work","","",null,null],[5,"LAPACKE_cstedc_work","","",null,null],[5,"LAPACKE_zstedc_work","","",null,null],[5,"LAPACKE_sstegr_work","","",null,null],[5,"LAPACKE_dstegr_work","","",null,null],[5,"LAPACKE_cstegr_work","","",null,null],[5,"LAPACKE_zstegr_work","","",null,null],[5,"LAPACKE_sstein_work","","",null,null],[5,"LAPACKE_dstein_work","","",null,null],[5,"LAPACKE_cstein_work","","",null,null],[5,"LAPACKE_zstein_work","","",null,null],[5,"LAPACKE_sstemr_work","","",null,null],[5,"LAPACKE_dstemr_work","","",null,null],[5,"LAPACKE_cstemr_work","","",null,null],[5,"LAPACKE_zstemr_work","","",null,null],[5,"LAPACKE_ssteqr_work","","",null,null],[5,"LAPACKE_dsteqr_work","","",null,null],[5,"LAPACKE_csteqr_work","","",null,null],[5,"LAPACKE_zsteqr_work","","",null,null],[5,"LAPACKE_ssterf_work","","",null,null],[5,"LAPACKE_dsterf_work","","",null,null],[5,"LAPACKE_sstev_work","","",null,null],[5,"LAPACKE_dstev_work","","",null,null],[5,"LAPACKE_sstevd_work","","",null,null],[5,"LAPACKE_dstevd_work","","",null,null],[5,"LAPACKE_sstevr_work","","",null,null],[5,"LAPACKE_dstevr_work","","",null,null],[5,"LAPACKE_sstevx_work","","",null,null],[5,"LAPACKE_dstevx_work","","",null,null],[5,"LAPACKE_ssycon_work","","",null,null],[5,"LAPACKE_dsycon_work","","",null,null],[5,"LAPACKE_csycon_work","","",null,null],[5,"LAPACKE_zsycon_work","","",null,null],[5,"LAPACKE_ssyequb_work","","",null,null],[5,"LAPACKE_dsyequb_work","","",null,null],[5,"LAPACKE_csyequb_work","","",null,null],[5,"LAPACKE_zsyequb_work","","",null,null],[5,"LAPACKE_ssyev_work","","",null,null],[5,"LAPACKE_dsyev_work","","",null,null],[5,"LAPACKE_ssyevd_work","","",null,null],[5,"LAPACKE_dsyevd_work","","",null,null],[5,"LAPACKE_ssyevr_work","","",null,null],[5,"LAPACKE_dsyevr_work","","",null,null],[5,"LAPACKE_ssyevx_work","","",null,null],[5,"LAPACKE_dsyevx_work","","",null,null],[5,"LAPACKE_ssygst_work","","",null,null],[5,"LAPACKE_dsygst_work","","",null,null],[5,"LAPACKE_ssygv_work","","",null,null],[5,"LAPACKE_dsygv_work","","",null,null],[5,"LAPACKE_ssygvd_work","","",null,null],[5,"LAPACKE_dsygvd_work","","",null,null],[5,"LAPACKE_ssygvx_work","","",null,null],[5,"LAPACKE_dsygvx_work","","",null,null],[5,"LAPACKE_ssyrfs_work","","",null,null],[5,"LAPACKE_dsyrfs_work","","",null,null],[5,"LAPACKE_csyrfs_work","","",null,null],[5,"LAPACKE_zsyrfs_work","","",null,null],[5,"LAPACKE_ssyrfsx_work","","",null,null],[5,"LAPACKE_dsyrfsx_work","","",null,null],[5,"LAPACKE_csyrfsx_work","","",null,null],[5,"LAPACKE_zsyrfsx_work","","",null,null],[5,"LAPACKE_ssysv_work","","",null,null],[5,"LAPACKE_dsysv_work","","",null,null],[5,"LAPACKE_csysv_work","","",null,null],[5,"LAPACKE_zsysv_work","","",null,null],[5,"LAPACKE_ssysvx_work","","",null,null],[5,"LAPACKE_dsysvx_work","","",null,null],[5,"LAPACKE_csysvx_work","","",null,null],[5,"LAPACKE_zsysvx_work","","",null,null],[5,"LAPACKE_ssysvxx_work","","",null,null],[5,"LAPACKE_dsysvxx_work","","",null,null],[5,"LAPACKE_csysvxx_work","","",null,null],[5,"LAPACKE_zsysvxx_work","","",null,null],[5,"LAPACKE_ssytrd_work","","",null,null],[5,"LAPACKE_dsytrd_work","","",null,null],[5,"LAPACKE_ssytrf_work","","",null,null],[5,"LAPACKE_dsytrf_work","","",null,null],[5,"LAPACKE_csytrf_work","","",null,null],[5,"LAPACKE_zsytrf_work","","",null,null],[5,"LAPACKE_ssytri_work","","",null,null],[5,"LAPACKE_dsytri_work","","",null,null],[5,"LAPACKE_csytri_work","","",null,null],[5,"LAPACKE_zsytri_work","","",null,null],[5,"LAPACKE_ssytrs_work","","",null,null],[5,"LAPACKE_dsytrs_work","","",null,null],[5,"LAPACKE_csytrs_work","","",null,null],[5,"LAPACKE_zsytrs_work","","",null,null],[5,"LAPACKE_stbcon_work","","",null,null],[5,"LAPACKE_dtbcon_work","","",null,null],[5,"LAPACKE_ctbcon_work","","",null,null],[5,"LAPACKE_ztbcon_work","","",null,null],[5,"LAPACKE_stbrfs_work","","",null,null],[5,"LAPACKE_dtbrfs_work","","",null,null],[5,"LAPACKE_ctbrfs_work","","",null,null],[5,"LAPACKE_ztbrfs_work","","",null,null],[5,"LAPACKE_stbtrs_work","","",null,null],[5,"LAPACKE_dtbtrs_work","","",null,null],[5,"LAPACKE_ctbtrs_work","","",null,null],[5,"LAPACKE_ztbtrs_work","","",null,null],[5,"LAPACKE_stfsm_work","","",null,null],[5,"LAPACKE_dtfsm_work","","",null,null],[5,"LAPACKE_ctfsm_work","","",null,null],[5,"LAPACKE_ztfsm_work","","",null,null],[5,"LAPACKE_stftri_work","","",null,null],[5,"LAPACKE_dtftri_work","","",null,null],[5,"LAPACKE_ctftri_work","","",null,null],[5,"LAPACKE_ztftri_work","","",null,null],[5,"LAPACKE_stfttp_work","","",null,null],[5,"LAPACKE_dtfttp_work","","",null,null],[5,"LAPACKE_ctfttp_work","","",null,null],[5,"LAPACKE_ztfttp_work","","",null,null],[5,"LAPACKE_stfttr_work","","",null,null],[5,"LAPACKE_dtfttr_work","","",null,null],[5,"LAPACKE_ctfttr_work","","",null,null],[5,"LAPACKE_ztfttr_work","","",null,null],[5,"LAPACKE_stgevc_work","","",null,null],[5,"LAPACKE_dtgevc_work","","",null,null],[5,"LAPACKE_ctgevc_work","","",null,null],[5,"LAPACKE_ztgevc_work","","",null,null],[5,"LAPACKE_stgexc_work","","",null,null],[5,"LAPACKE_dtgexc_work","","",null,null],[5,"LAPACKE_ctgexc_work","","",null,null],[5,"LAPACKE_ztgexc_work","","",null,null],[5,"LAPACKE_stgsen_work","","",null,null],[5,"LAPACKE_dtgsen_work","","",null,null],[5,"LAPACKE_ctgsen_work","","",null,null],[5,"LAPACKE_ztgsen_work","","",null,null],[5,"LAPACKE_stgsja_work","","",null,null],[5,"LAPACKE_dtgsja_work","","",null,null],[5,"LAPACKE_ctgsja_work","","",null,null],[5,"LAPACKE_ztgsja_work","","",null,null],[5,"LAPACKE_stgsna_work","","",null,null],[5,"LAPACKE_dtgsna_work","","",null,null],[5,"LAPACKE_ctgsna_work","","",null,null],[5,"LAPACKE_ztgsna_work","","",null,null],[5,"LAPACKE_stgsyl_work","","",null,null],[5,"LAPACKE_dtgsyl_work","","",null,null],[5,"LAPACKE_ctgsyl_work","","",null,null],[5,"LAPACKE_ztgsyl_work","","",null,null],[5,"LAPACKE_stpcon_work","","",null,null],[5,"LAPACKE_dtpcon_work","","",null,null],[5,"LAPACKE_ctpcon_work","","",null,null],[5,"LAPACKE_ztpcon_work","","",null,null],[5,"LAPACKE_stprfs_work","","",null,null],[5,"LAPACKE_dtprfs_work","","",null,null],[5,"LAPACKE_ctprfs_work","","",null,null],[5,"LAPACKE_ztprfs_work","","",null,null],[5,"LAPACKE_stptri_work","","",null,null],[5,"LAPACKE_dtptri_work","","",null,null],[5,"LAPACKE_ctptri_work","","",null,null],[5,"LAPACKE_ztptri_work","","",null,null],[5,"LAPACKE_stptrs_work","","",null,null],[5,"LAPACKE_dtptrs_work","","",null,null],[5,"LAPACKE_ctptrs_work","","",null,null],[5,"LAPACKE_ztptrs_work","","",null,null],[5,"LAPACKE_stpttf_work","","",null,null],[5,"LAPACKE_dtpttf_work","","",null,null],[5,"LAPACKE_ctpttf_work","","",null,null],[5,"LAPACKE_ztpttf_work","","",null,null],[5,"LAPACKE_stpttr_work","","",null,null],[5,"LAPACKE_dtpttr_work","","",null,null],[5,"LAPACKE_ctpttr_work","","",null,null],[5,"LAPACKE_ztpttr_work","","",null,null],[5,"LAPACKE_strcon_work","","",null,null],[5,"LAPACKE_dtrcon_work","","",null,null],[5,"LAPACKE_ctrcon_work","","",null,null],[5,"LAPACKE_ztrcon_work","","",null,null],[5,"LAPACKE_strevc_work","","",null,null],[5,"LAPACKE_dtrevc_work","","",null,null],[5,"LAPACKE_ctrevc_work","","",null,null],[5,"LAPACKE_ztrevc_work","","",null,null],[5,"LAPACKE_strexc_work","","",null,null],[5,"LAPACKE_dtrexc_work","","",null,null],[5,"LAPACKE_ctrexc_work","","",null,null],[5,"LAPACKE_ztrexc_work","","",null,null],[5,"LAPACKE_strrfs_work","","",null,null],[5,"LAPACKE_dtrrfs_work","","",null,null],[5,"LAPACKE_ctrrfs_work","","",null,null],[5,"LAPACKE_ztrrfs_work","","",null,null],[5,"LAPACKE_strsen_work","","",null,null],[5,"LAPACKE_dtrsen_work","","",null,null],[5,"LAPACKE_ctrsen_work","","",null,null],[5,"LAPACKE_ztrsen_work","","",null,null],[5,"LAPACKE_strsna_work","","",null,null],[5,"LAPACKE_dtrsna_work","","",null,null],[5,"LAPACKE_ctrsna_work","","",null,null],[5,"LAPACKE_ztrsna_work","","",null,null],[5,"LAPACKE_strsyl_work","","",null,null],[5,"LAPACKE_dtrsyl_work","","",null,null],[5,"LAPACKE_ctrsyl_work","","",null,null],[5,"LAPACKE_ztrsyl_work","","",null,null],[5,"LAPACKE_strtri_work","","",null,null],[5,"LAPACKE_dtrtri_work","","",null,null],[5,"LAPACKE_ctrtri_work","","",null,null],[5,"LAPACKE_ztrtri_work","","",null,null],[5,"LAPACKE_strtrs_work","","",null,null],[5,"LAPACKE_dtrtrs_work","","",null,null],[5,"LAPACKE_ctrtrs_work","","",null,null],[5,"LAPACKE_ztrtrs_work","","",null,null],[5,"LAPACKE_strttf_work","","",null,null],[5,"LAPACKE_dtrttf_work","","",null,null],[5,"LAPACKE_ctrttf_work","","",null,null],[5,"LAPACKE_ztrttf_work","","",null,null],[5,"LAPACKE_strttp_work","","",null,null],[5,"LAPACKE_dtrttp_work","","",null,null],[5,"LAPACKE_ctrttp_work","","",null,null],[5,"LAPACKE_ztrttp_work","","",null,null],[5,"LAPACKE_stzrzf_work","","",null,null],[5,"LAPACKE_dtzrzf_work","","",null,null],[5,"LAPACKE_ctzrzf_work","","",null,null],[5,"LAPACKE_ztzrzf_work","","",null,null],[5,"LAPACKE_cungbr_work","","",null,null],[5,"LAPACKE_zungbr_work","","",null,null],[5,"LAPACKE_cunghr_work","","",null,null],[5,"LAPACKE_zunghr_work","","",null,null],[5,"LAPACKE_cunglq_work","","",null,null],[5,"LAPACKE_zunglq_work","","",null,null],[5,"LAPACKE_cungql_work","","",null,null],[5,"LAPACKE_zungql_work","","",null,null],[5,"LAPACKE_cungqr_work","","",null,null],[5,"LAPACKE_zungqr_work","","",null,null],[5,"LAPACKE_cungrq_work","","",null,null],[5,"LAPACKE_zungrq_work","","",null,null],[5,"LAPACKE_cungtr_work","","",null,null],[5,"LAPACKE_zungtr_work","","",null,null],[5,"LAPACKE_cunmbr_work","","",null,null],[5,"LAPACKE_zunmbr_work","","",null,null],[5,"LAPACKE_cunmhr_work","","",null,null],[5,"LAPACKE_zunmhr_work","","",null,null],[5,"LAPACKE_cunmlq_work","","",null,null],[5,"LAPACKE_zunmlq_work","","",null,null],[5,"LAPACKE_cunmql_work","","",null,null],[5,"LAPACKE_zunmql_work","","",null,null],[5,"LAPACKE_cunmqr_work","","",null,null],[5,"LAPACKE_zunmqr_work","","",null,null],[5,"LAPACKE_cunmrq_work","","",null,null],[5,"LAPACKE_zunmrq_work","","",null,null],[5,"LAPACKE_cunmrz_work","","",null,null],[5,"LAPACKE_zunmrz_work","","",null,null],[5,"LAPACKE_cunmtr_work","","",null,null],[5,"LAPACKE_zunmtr_work","","",null,null],[5,"LAPACKE_cupgtr_work","","",null,null],[5,"LAPACKE_zupgtr_work","","",null,null],[5,"LAPACKE_cupmtr_work","","",null,null],[5,"LAPACKE_zupmtr_work","","",null,null],[5,"LAPACKE_claghe","","",null,null],[5,"LAPACKE_zlaghe","","",null,null],[5,"LAPACKE_slagsy","","",null,null],[5,"LAPACKE_dlagsy","","",null,null],[5,"LAPACKE_clagsy","","",null,null],[5,"LAPACKE_zlagsy","","",null,null],[5,"LAPACKE_slapmr","","",null,null],[5,"LAPACKE_dlapmr","","",null,null],[5,"LAPACKE_clapmr","","",null,null],[5,"LAPACKE_zlapmr","","",null,null],[5,"LAPACKE_slapmt","","",null,null],[5,"LAPACKE_dlapmt","","",null,null],[5,"LAPACKE_clapmt","","",null,null],[5,"LAPACKE_zlapmt","","",null,null],[5,"LAPACKE_slapy2","","",null,null],[5,"LAPACKE_dlapy2","","",null,null],[5,"LAPACKE_slapy3","","",null,null],[5,"LAPACKE_dlapy3","","",null,null],[5,"LAPACKE_slartgp","","",null,null],[5,"LAPACKE_dlartgp","","",null,null],[5,"LAPACKE_slartgs","","",null,null],[5,"LAPACKE_dlartgs","","",null,null],[5,"LAPACKE_cbbcsd","","",null,null],[5,"LAPACKE_cbbcsd_work","","",null,null],[5,"LAPACKE_cheswapr","","",null,null],[5,"LAPACKE_cheswapr_work","","",null,null],[5,"LAPACKE_chetri2","","",null,null],[5,"LAPACKE_chetri2_work","","",null,null],[5,"LAPACKE_chetri2x","","",null,null],[5,"LAPACKE_chetri2x_work","","",null,null],[5,"LAPACKE_chetrs2","","",null,null],[5,"LAPACKE_chetrs2_work","","",null,null],[5,"LAPACKE_csyconv","","",null,null],[5,"LAPACKE_csyconv_work","","",null,null],[5,"LAPACKE_csyswapr","","",null,null],[5,"LAPACKE_csyswapr_work","","",null,null],[5,"LAPACKE_csytri2","","",null,null],[5,"LAPACKE_csytri2_work","","",null,null],[5,"LAPACKE_csytri2x","","",null,null],[5,"LAPACKE_csytri2x_work","","",null,null],[5,"LAPACKE_csytrs2","","",null,null],[5,"LAPACKE_csytrs2_work","","",null,null],[5,"LAPACKE_cunbdb","","",null,null],[5,"LAPACKE_cunbdb_work","","",null,null],[5,"LAPACKE_cuncsd","","",null,null],[5,"LAPACKE_cuncsd_work","","",null,null],[5,"LAPACKE_cuncsd2by1","","",null,null],[5,"LAPACKE_cuncsd2by1_work","","",null,null],[5,"LAPACKE_dbbcsd","","",null,null],[5,"LAPACKE_dbbcsd_work","","",null,null],[5,"LAPACKE_dorbdb","","",null,null],[5,"LAPACKE_dorbdb_work","","",null,null],[5,"LAPACKE_dorcsd","","",null,null],[5,"LAPACKE_dorcsd_work","","",null,null],[5,"LAPACKE_dorcsd2by1","","",null,null],[5,"LAPACKE_dorcsd2by1_work","","",null,null],[5,"LAPACKE_dsyconv","","",null,null],[5,"LAPACKE_dsyconv_work","","",null,null],[5,"LAPACKE_dsyswapr","","",null,null],[5,"LAPACKE_dsyswapr_work","","",null,null],[5,"LAPACKE_dsytri2","","",null,null],[5,"LAPACKE_dsytri2_work","","",null,null],[5,"LAPACKE_dsytri2x","","",null,null],[5,"LAPACKE_dsytri2x_work","","",null,null],[5,"LAPACKE_dsytrs2","","",null,null],[5,"LAPACKE_dsytrs2_work","","",null,null],[5,"LAPACKE_sbbcsd","","",null,null],[5,"LAPACKE_sbbcsd_work","","",null,null],[5,"LAPACKE_sorbdb","","",null,null],[5,"LAPACKE_sorbdb_work","","",null,null],[5,"LAPACKE_sorcsd","","",null,null],[5,"LAPACKE_sorcsd_work","","",null,null],[5,"LAPACKE_sorcsd2by1","","",null,null],[5,"LAPACKE_sorcsd2by1_work","","",null,null],[5,"LAPACKE_ssyconv","","",null,null],[5,"LAPACKE_ssyconv_work","","",null,null],[5,"LAPACKE_ssyswapr","","",null,null],[5,"LAPACKE_ssyswapr_work","","",null,null],[5,"LAPACKE_ssytri2","","",null,null],[5,"LAPACKE_ssytri2_work","","",null,null],[5,"LAPACKE_ssytri2x","","",null,null],[5,"LAPACKE_ssytri2x_work","","",null,null],[5,"LAPACKE_ssytrs2","","",null,null],[5,"LAPACKE_ssytrs2_work","","",null,null],[5,"LAPACKE_zbbcsd","","",null,null],[5,"LAPACKE_zbbcsd_work","","",null,null],[5,"LAPACKE_zheswapr","","",null,null],[5,"LAPACKE_zheswapr_work","","",null,null],[5,"LAPACKE_zhetri2","","",null,null],[5,"LAPACKE_zhetri2_work","","",null,null],[5,"LAPACKE_zhetri2x","","",null,null],[5,"LAPACKE_zhetri2x_work","","",null,null],[5,"LAPACKE_zhetrs2","","",null,null],[5,"LAPACKE_zhetrs2_work","","",null,null],[5,"LAPACKE_zsyconv","","",null,null],[5,"LAPACKE_zsyconv_work","","",null,null],[5,"LAPACKE_zsyswapr","","",null,null],[5,"LAPACKE_zsyswapr_work","","",null,null],[5,"LAPACKE_zsytri2","","",null,null],[5,"LAPACKE_zsytri2_work","","",null,null],[5,"LAPACKE_zsytri2x","","",null,null],[5,"LAPACKE_zsytri2x_work","","",null,null],[5,"LAPACKE_zsytrs2","","",null,null],[5,"LAPACKE_zsytrs2_work","","",null,null],[5,"LAPACKE_zunbdb","","",null,null],[5,"LAPACKE_zunbdb_work","","",null,null],[5,"LAPACKE_zuncsd","","",null,null],[5,"LAPACKE_zuncsd_work","","",null,null],[5,"LAPACKE_zuncsd2by1","","",null,null],[5,"LAPACKE_zuncsd2by1_work","","",null,null],[5,"LAPACKE_sgemqrt","","",null,null],[5,"LAPACKE_dgemqrt","","",null,null],[5,"LAPACKE_cgemqrt","","",null,null],[5,"LAPACKE_zgemqrt","","",null,null],[5,"LAPACKE_sgeqrt","","",null,null],[5,"LAPACKE_dgeqrt","","",null,null],[5,"LAPACKE_cgeqrt","","",null,null],[5,"LAPACKE_zgeqrt","","",null,null],[5,"LAPACKE_sgeqrt2","","",null,null],[5,"LAPACKE_dgeqrt2","","",null,null],[5,"LAPACKE_cgeqrt2","","",null,null],[5,"LAPACKE_zgeqrt2","","",null,null],[5,"LAPACKE_sgeqrt3","","",null,null],[5,"LAPACKE_dgeqrt3","","",null,null],[5,"LAPACKE_cgeqrt3","","",null,null],[5,"LAPACKE_zgeqrt3","","",null,null],[5,"LAPACKE_stpmqrt","","",null,null],[5,"LAPACKE_dtpmqrt","","",null,null],[5,"LAPACKE_ctpmqrt","","",null,null],[5,"LAPACKE_ztpmqrt","","",null,null],[5,"LAPACKE_stpqrt","","",null,null],[5,"LAPACKE_dtpqrt","","",null,null],[5,"LAPACKE_ctpqrt","","",null,null],[5,"LAPACKE_ztpqrt","","",null,null],[5,"LAPACKE_stpqrt2","","",null,null],[5,"LAPACKE_dtpqrt2","","",null,null],[5,"LAPACKE_ctpqrt2","","",null,null],[5,"LAPACKE_ztpqrt2","","",null,null],[5,"LAPACKE_stprfb","","",null,null],[5,"LAPACKE_dtprfb","","",null,null],[5,"LAPACKE_ctprfb","","",null,null],[5,"LAPACKE_ztprfb","","",null,null],[5,"LAPACKE_sgemqrt_work","","",null,null],[5,"LAPACKE_dgemqrt_work","","",null,null],[5,"LAPACKE_cgemqrt_work","","",null,null],[5,"LAPACKE_zgemqrt_work","","",null,null],[5,"LAPACKE_sgeqrt_work","","",null,null],[5,"LAPACKE_dgeqrt_work","","",null,null],[5,"LAPACKE_cgeqrt_work","","",null,null],[5,"LAPACKE_zgeqrt_work","","",null,null],[5,"LAPACKE_sgeqrt2_work","","",null,null],[5,"LAPACKE_dgeqrt2_work","","",null,null],[5,"LAPACKE_cgeqrt2_work","","",null,null],[5,"LAPACKE_zgeqrt2_work","","",null,null],[5,"LAPACKE_sgeqrt3_work","","",null,null],[5,"LAPACKE_dgeqrt3_work","","",null,null],[5,"LAPACKE_cgeqrt3_work","","",null,null],[5,"LAPACKE_zgeqrt3_work","","",null,null],[5,"LAPACKE_stpmqrt_work","","",null,null],[5,"LAPACKE_dtpmqrt_work","","",null,null],[5,"LAPACKE_ctpmqrt_work","","",null,null],[5,"LAPACKE_ztpmqrt_work","","",null,null],[5,"LAPACKE_stpqrt_work","","",null,null],[5,"LAPACKE_dtpqrt_work","","",null,null],[5,"LAPACKE_ctpqrt_work","","",null,null],[5,"LAPACKE_ztpqrt_work","","",null,null],[5,"LAPACKE_stpqrt2_work","","",null,null],[5,"LAPACKE_dtpqrt2_work","","",null,null],[5,"LAPACKE_ctpqrt2_work","","",null,null],[5,"LAPACKE_ztpqrt2_work","","",null,null],[5,"LAPACKE_stprfb_work","","",null,null],[5,"LAPACKE_dtprfb_work","","",null,null],[5,"LAPACKE_ctprfb_work","","",null,null],[5,"LAPACKE_ztprfb_work","","",null,null],[5,"LAPACKE_ssysv_rook","","",null,null],[5,"LAPACKE_dsysv_rook","","",null,null],[5,"LAPACKE_csysv_rook","","",null,null],[5,"LAPACKE_zsysv_rook","","",null,null],[5,"LAPACKE_ssytrf_rook","","",null,null],[5,"LAPACKE_dsytrf_rook","","",null,null],[5,"LAPACKE_csytrf_rook","","",null,null],[5,"LAPACKE_zsytrf_rook","","",null,null],[5,"LAPACKE_ssytrs_rook","","",null,null],[5,"LAPACKE_dsytrs_rook","","",null,null],[5,"LAPACKE_csytrs_rook","","",null,null],[5,"LAPACKE_zsytrs_rook","","",null,null],[5,"LAPACKE_chetrf_rook","","",null,null],[5,"LAPACKE_zhetrf_rook","","",null,null],[5,"LAPACKE_chetrs_rook","","",null,null],[5,"LAPACKE_zhetrs_rook","","",null,null],[5,"LAPACKE_csyr","","",null,null],[5,"LAPACKE_zsyr","","",null,null],[5,"LAPACKE_ssysv_rook_work","","",null,null],[5,"LAPACKE_dsysv_rook_work","","",null,null],[5,"LAPACKE_csysv_rook_work","","",null,null],[5,"LAPACKE_zsysv_rook_work","","",null,null],[5,"LAPACKE_ssytrf_rook_work","","",null,null],[5,"LAPACKE_dsytrf_rook_work","","",null,null],[5,"LAPACKE_csytrf_rook_work","","",null,null],[5,"LAPACKE_zsytrf_rook_work","","",null,null],[5,"LAPACKE_ssytrs_rook_work","","",null,null],[5,"LAPACKE_dsytrs_rook_work","","",null,null],[5,"LAPACKE_csytrs_rook_work","","",null,null],[5,"LAPACKE_zsytrs_rook_work","","",null,null],[5,"LAPACKE_chetrf_rook_work","","",null,null],[5,"LAPACKE_zhetrf_rook_work","","",null,null],[5,"LAPACKE_chetrs_rook_work","","",null,null],[5,"LAPACKE_zhetrs_rook_work","","",null,null],[5,"LAPACKE_csyr_work","","",null,null],[5,"LAPACKE_zsyr_work","","",null,null],[5,"LAPACKE_ilaver","","",null,null],[6,"lapack_int","","",null,null],[6,"lapack_logical","","",null,null],[6,"lapack_complex_float","","",null,null],[6,"lapack_complex_double","","",null,null],[6,"LAPACK_S_SELECT2","","",null,null],[6,"LAPACK_S_SELECT3","","",null,null],[6,"LAPACK_D_SELECT2","","",null,null],[6,"LAPACK_D_SELECT3","","",null,null],[6,"LAPACK_C_SELECT1","","",null,null],[6,"LAPACK_C_SELECT2","","",null,null],[6,"LAPACK_Z_SELECT1","","",null,null],[6,"LAPACK_Z_SELECT2","","",null,null],[17,"LAPACK_ROW_MAJOR","","",null,null],[17,"LAPACK_COL_MAJOR","","",null,null],[17,"LAPACK_WORK_MEMORY_ERROR","","",null,null],[17,"LAPACK_TRANSPOSE_MEMORY_ERROR","","",null,null],[0,"fortran","lapack_sys","The Fortran bindings.",null,null],[5,"sgetrf_","lapack_sys::fortran","",null,null],[5,"dgetrf_","","",null,null],[5,"cgetrf_","","",null,null],[5,"zgetrf_","","",null,null],[5,"sgetrf2_","","",null,null],[5,"dgetrf2_","","",null,null],[5,"cgetrf2_","","",null,null],[5,"zgetrf2_","","",null,null],[5,"sgbtrf_","","",null,null],[5,"dgbtrf_","","",null,null],[5,"cgbtrf_","","",null,null],[5,"zgbtrf_","","",null,null],[5,"sgttrf_","","",null,null],[5,"dgttrf_","","",null,null],[5,"cgttrf_","","",null,null],[5,"zgttrf_","","",null,null],[5,"spotrf2_","","",null,null],[5,"dpotrf2_","","",null,null],[5,"cpotrf2_","","",null,null],[5,"zpotrf2_","","",null,null],[5,"spotrf_","","",null,null],[5,"dpotrf_","","",null,null],[5,"cpotrf_","","",null,null],[5,"zpotrf_","","",null,null],[5,"dpstrf_","","",null,null],[5,"spstrf_","","",null,null],[5,"zpstrf_","","",null,null],[5,"cpstrf_","","",null,null],[5,"dpftrf_","","",null,null],[5,"spftrf_","","",null,null],[5,"zpftrf_","","",null,null],[5,"cpftrf_","","",null,null],[5,"spptrf_","","",null,null],[5,"dpptrf_","","",null,null],[5,"cpptrf_","","",null,null],[5,"zpptrf_","","",null,null],[5,"spbtrf_","","",null,null],[5,"dpbtrf_","","",null,null],[5,"cpbtrf_","","",null,null],[5,"zpbtrf_","","",null,null],[5,"spttrf_","","",null,null],[5,"dpttrf_","","",null,null],[5,"cpttrf_","","",null,null],[5,"zpttrf_","","",null,null],[5,"ssytrf_","","",null,null],[5,"dsytrf_","","",null,null],[5,"csytrf_","","",null,null],[5,"zsytrf_","","",null,null],[5,"chetrf_","","",null,null],[5,"zhetrf_","","",null,null],[5,"ssptrf_","","",null,null],[5,"dsptrf_","","",null,null],[5,"csptrf_","","",null,null],[5,"zsptrf_","","",null,null],[5,"chptrf_","","",null,null],[5,"zhptrf_","","",null,null],[5,"sgetrs_","","",null,null],[5,"dgetrs_","","",null,null],[5,"cgetrs_","","",null,null],[5,"zgetrs_","","",null,null],[5,"sgbtrs_","","",null,null],[5,"dgbtrs_","","",null,null],[5,"cgbtrs_","","",null,null],[5,"zgbtrs_","","",null,null],[5,"sgttrs_","","",null,null],[5,"dgttrs_","","",null,null],[5,"cgttrs_","","",null,null],[5,"zgttrs_","","",null,null],[5,"spotrs_","","",null,null],[5,"dpotrs_","","",null,null],[5,"cpotrs_","","",null,null],[5,"zpotrs_","","",null,null],[5,"dpftrs_","","",null,null],[5,"spftrs_","","",null,null],[5,"zpftrs_","","",null,null],[5,"cpftrs_","","",null,null],[5,"spptrs_","","",null,null],[5,"dpptrs_","","",null,null],[5,"cpptrs_","","",null,null],[5,"zpptrs_","","",null,null],[5,"spbtrs_","","",null,null],[5,"dpbtrs_","","",null,null],[5,"cpbtrs_","","",null,null],[5,"zpbtrs_","","",null,null],[5,"spttrs_","","",null,null],[5,"dpttrs_","","",null,null],[5,"cpttrs_","","",null,null],[5,"zpttrs_","","",null,null],[5,"ssytrs_","","",null,null],[5,"dsytrs_","","",null,null],[5,"csytrs_","","",null,null],[5,"zsytrs_","","",null,null],[5,"chetrs_","","",null,null],[5,"zhetrs_","","",null,null],[5,"ssptrs_","","",null,null],[5,"dsptrs_","","",null,null],[5,"csptrs_","","",null,null],[5,"zsptrs_","","",null,null],[5,"chptrs_","","",null,null],[5,"zhptrs_","","",null,null],[5,"strtrs_","","",null,null],[5,"dtrtrs_","","",null,null],[5,"ctrtrs_","","",null,null],[5,"ztrtrs_","","",null,null],[5,"stptrs_","","",null,null],[5,"dtptrs_","","",null,null],[5,"ctptrs_","","",null,null],[5,"ztptrs_","","",null,null],[5,"stbtrs_","","",null,null],[5,"dtbtrs_","","",null,null],[5,"ctbtrs_","","",null,null],[5,"ztbtrs_","","",null,null],[5,"sgecon_","","",null,null],[5,"dgecon_","","",null,null],[5,"cgecon_","","",null,null],[5,"zgecon_","","",null,null],[5,"sgbcon_","","",null,null],[5,"dgbcon_","","",null,null],[5,"cgbcon_","","",null,null],[5,"zgbcon_","","",null,null],[5,"sgtcon_","","",null,null],[5,"dgtcon_","","",null,null],[5,"cgtcon_","","",null,null],[5,"zgtcon_","","",null,null],[5,"spocon_","","",null,null],[5,"dpocon_","","",null,null],[5,"cpocon_","","",null,null],[5,"zpocon_","","",null,null],[5,"sppcon_","","",null,null],[5,"dppcon_","","",null,null],[5,"cppcon_","","",null,null],[5,"zppcon_","","",null,null],[5,"spbcon_","","",null,null],[5,"dpbcon_","","",null,null],[5,"cpbcon_","","",null,null],[5,"zpbcon_","","",null,null],[5,"sptcon_","","",null,null],[5,"dptcon_","","",null,null],[5,"cptcon_","","",null,null],[5,"zptcon_","","",null,null],[5,"ssycon_","","",null,null],[5,"dsycon_","","",null,null],[5,"csycon_","","",null,null],[5,"zsycon_","","",null,null],[5,"checon_","","",null,null],[5,"zhecon_","","",null,null],[5,"sspcon_","","",null,null],[5,"dspcon_","","",null,null],[5,"cspcon_","","",null,null],[5,"zspcon_","","",null,null],[5,"chpcon_","","",null,null],[5,"zhpcon_","","",null,null],[5,"strcon_","","",null,null],[5,"dtrcon_","","",null,null],[5,"ctrcon_","","",null,null],[5,"ztrcon_","","",null,null],[5,"stpcon_","","",null,null],[5,"dtpcon_","","",null,null],[5,"ctpcon_","","",null,null],[5,"ztpcon_","","",null,null],[5,"stbcon_","","",null,null],[5,"dtbcon_","","",null,null],[5,"ctbcon_","","",null,null],[5,"ztbcon_","","",null,null],[5,"sgerfs_","","",null,null],[5,"dgerfs_","","",null,null],[5,"cgerfs_","","",null,null],[5,"zgerfs_","","",null,null],[5,"dgerfsx_","","",null,null],[5,"sgerfsx_","","",null,null],[5,"zgerfsx_","","",null,null],[5,"cgerfsx_","","",null,null],[5,"sgbrfs_","","",null,null],[5,"dgbrfs_","","",null,null],[5,"cgbrfs_","","",null,null],[5,"zgbrfs_","","",null,null],[5,"dgbrfsx_","","",null,null],[5,"sgbrfsx_","","",null,null],[5,"zgbrfsx_","","",null,null],[5,"cgbrfsx_","","",null,null],[5,"sgtrfs_","","",null,null],[5,"dgtrfs_","","",null,null],[5,"cgtrfs_","","",null,null],[5,"zgtrfs_","","",null,null],[5,"sporfs_","","",null,null],[5,"dporfs_","","",null,null],[5,"cporfs_","","",null,null],[5,"zporfs_","","",null,null],[5,"dporfsx_","","",null,null],[5,"sporfsx_","","",null,null],[5,"zporfsx_","","",null,null],[5,"cporfsx_","","",null,null],[5,"spprfs_","","",null,null],[5,"dpprfs_","","",null,null],[5,"cpprfs_","","",null,null],[5,"zpprfs_","","",null,null],[5,"spbrfs_","","",null,null],[5,"dpbrfs_","","",null,null],[5,"cpbrfs_","","",null,null],[5,"zpbrfs_","","",null,null],[5,"sptrfs_","","",null,null],[5,"dptrfs_","","",null,null],[5,"cptrfs_","","",null,null],[5,"zptrfs_","","",null,null],[5,"ssyrfs_","","",null,null],[5,"dsyrfs_","","",null,null],[5,"csyrfs_","","",null,null],[5,"zsyrfs_","","",null,null],[5,"dsyrfsx_","","",null,null],[5,"ssyrfsx_","","",null,null],[5,"zsyrfsx_","","",null,null],[5,"csyrfsx_","","",null,null],[5,"cherfs_","","",null,null],[5,"zherfs_","","",null,null],[5,"zherfsx_","","",null,null],[5,"cherfsx_","","",null,null],[5,"ssprfs_","","",null,null],[5,"dsprfs_","","",null,null],[5,"csprfs_","","",null,null],[5,"zsprfs_","","",null,null],[5,"chprfs_","","",null,null],[5,"zhprfs_","","",null,null],[5,"strrfs_","","",null,null],[5,"dtrrfs_","","",null,null],[5,"ctrrfs_","","",null,null],[5,"ztrrfs_","","",null,null],[5,"stprfs_","","",null,null],[5,"dtprfs_","","",null,null],[5,"ctprfs_","","",null,null],[5,"ztprfs_","","",null,null],[5,"stbrfs_","","",null,null],[5,"dtbrfs_","","",null,null],[5,"ctbrfs_","","",null,null],[5,"ztbrfs_","","",null,null],[5,"sgetri_","","",null,null],[5,"dgetri_","","",null,null],[5,"cgetri_","","",null,null],[5,"zgetri_","","",null,null],[5,"spotri_","","",null,null],[5,"dpotri_","","",null,null],[5,"cpotri_","","",null,null],[5,"zpotri_","","",null,null],[5,"dpftri_","","",null,null],[5,"spftri_","","",null,null],[5,"zpftri_","","",null,null],[5,"cpftri_","","",null,null],[5,"spptri_","","",null,null],[5,"dpptri_","","",null,null],[5,"cpptri_","","",null,null],[5,"zpptri_","","",null,null],[5,"ssytri_","","",null,null],[5,"dsytri_","","",null,null],[5,"csytri_","","",null,null],[5,"zsytri_","","",null,null],[5,"chetri_","","",null,null],[5,"zhetri_","","",null,null],[5,"ssptri_","","",null,null],[5,"dsptri_","","",null,null],[5,"csptri_","","",null,null],[5,"zsptri_","","",null,null],[5,"chptri_","","",null,null],[5,"zhptri_","","",null,null],[5,"strtri_","","",null,null],[5,"dtrtri_","","",null,null],[5,"ctrtri_","","",null,null],[5,"ztrtri_","","",null,null],[5,"dtftri_","","",null,null],[5,"stftri_","","",null,null],[5,"ztftri_","","",null,null],[5,"ctftri_","","",null,null],[5,"stptri_","","",null,null],[5,"dtptri_","","",null,null],[5,"ctptri_","","",null,null],[5,"ztptri_","","",null,null],[5,"sgeequ_","","",null,null],[5,"dgeequ_","","",null,null],[5,"cgeequ_","","",null,null],[5,"zgeequ_","","",null,null],[5,"dgeequb_","","",null,null],[5,"sgeequb_","","",null,null],[5,"zgeequb_","","",null,null],[5,"cgeequb_","","",null,null],[5,"sgbequ_","","",null,null],[5,"dgbequ_","","",null,null],[5,"cgbequ_","","",null,null],[5,"zgbequ_","","",null,null],[5,"dgbequb_","","",null,null],[5,"sgbequb_","","",null,null],[5,"zgbequb_","","",null,null],[5,"cgbequb_","","",null,null],[5,"spoequ_","","",null,null],[5,"dpoequ_","","",null,null],[5,"cpoequ_","","",null,null],[5,"zpoequ_","","",null,null],[5,"dpoequb_","","",null,null],[5,"spoequb_","","",null,null],[5,"zpoequb_","","",null,null],[5,"cpoequb_","","",null,null],[5,"sppequ_","","",null,null],[5,"dppequ_","","",null,null],[5,"cppequ_","","",null,null],[5,"zppequ_","","",null,null],[5,"spbequ_","","",null,null],[5,"dpbequ_","","",null,null],[5,"cpbequ_","","",null,null],[5,"zpbequ_","","",null,null],[5,"dsyequb_","","",null,null],[5,"ssyequb_","","",null,null],[5,"zsyequb_","","",null,null],[5,"csyequb_","","",null,null],[5,"zheequb_","","",null,null],[5,"cheequb_","","",null,null],[5,"sgesv_","","",null,null],[5,"dgesv_","","",null,null],[5,"cgesv_","","",null,null],[5,"zgesv_","","",null,null],[5,"dsgesv_","","",null,null],[5,"zcgesv_","","",null,null],[5,"sgesvx_","","",null,null],[5,"dgesvx_","","",null,null],[5,"cgesvx_","","",null,null],[5,"zgesvx_","","",null,null],[5,"dgesvxx_","","",null,null],[5,"sgesvxx_","","",null,null],[5,"zgesvxx_","","",null,null],[5,"cgesvxx_","","",null,null],[5,"sgbsv_","","",null,null],[5,"dgbsv_","","",null,null],[5,"cgbsv_","","",null,null],[5,"zgbsv_","","",null,null],[5,"sgbsvx_","","",null,null],[5,"dgbsvx_","","",null,null],[5,"cgbsvx_","","",null,null],[5,"zgbsvx_","","",null,null],[5,"dgbsvxx_","","",null,null],[5,"sgbsvxx_","","",null,null],[5,"zgbsvxx_","","",null,null],[5,"cgbsvxx_","","",null,null],[5,"sgtsv_","","",null,null],[5,"dgtsv_","","",null,null],[5,"cgtsv_","","",null,null],[5,"zgtsv_","","",null,null],[5,"sgtsvx_","","",null,null],[5,"dgtsvx_","","",null,null],[5,"cgtsvx_","","",null,null],[5,"zgtsvx_","","",null,null],[5,"sposv_","","",null,null],[5,"dposv_","","",null,null],[5,"cposv_","","",null,null],[5,"zposv_","","",null,null],[5,"dsposv_","","",null,null],[5,"zcposv_","","",null,null],[5,"sposvx_","","",null,null],[5,"dposvx_","","",null,null],[5,"cposvx_","","",null,null],[5,"zposvx_","","",null,null],[5,"dposvxx_","","",null,null],[5,"sposvxx_","","",null,null],[5,"zposvxx_","","",null,null],[5,"cposvxx_","","",null,null],[5,"sppsv_","","",null,null],[5,"dppsv_","","",null,null],[5,"cppsv_","","",null,null],[5,"zppsv_","","",null,null],[5,"sppsvx_","","",null,null],[5,"dppsvx_","","",null,null],[5,"cppsvx_","","",null,null],[5,"zppsvx_","","",null,null],[5,"spbsv_","","",null,null],[5,"dpbsv_","","",null,null],[5,"cpbsv_","","",null,null],[5,"zpbsv_","","",null,null],[5,"spbsvx_","","",null,null],[5,"dpbsvx_","","",null,null],[5,"cpbsvx_","","",null,null],[5,"zpbsvx_","","",null,null],[5,"sptsv_","","",null,null],[5,"dptsv_","","",null,null],[5,"cptsv_","","",null,null],[5,"zptsv_","","",null,null],[5,"sptsvx_","","",null,null],[5,"dptsvx_","","",null,null],[5,"cptsvx_","","",null,null],[5,"zptsvx_","","",null,null],[5,"ssysv_","","",null,null],[5,"dsysv_","","",null,null],[5,"csysv_","","",null,null],[5,"zsysv_","","",null,null],[5,"ssysvx_","","",null,null],[5,"dsysvx_","","",null,null],[5,"csysvx_","","",null,null],[5,"zsysvx_","","",null,null],[5,"dsysvxx_","","",null,null],[5,"ssysvxx_","","",null,null],[5,"zsysvxx_","","",null,null],[5,"csysvxx_","","",null,null],[5,"chesv_","","",null,null],[5,"zhesv_","","",null,null],[5,"chesvx_","","",null,null],[5,"zhesvx_","","",null,null],[5,"zhesvxx_","","",null,null],[5,"chesvxx_","","",null,null],[5,"sspsv_","","",null,null],[5,"dspsv_","","",null,null],[5,"cspsv_","","",null,null],[5,"zspsv_","","",null,null],[5,"sspsvx_","","",null,null],[5,"dspsvx_","","",null,null],[5,"cspsvx_","","",null,null],[5,"zspsvx_","","",null,null],[5,"chpsv_","","",null,null],[5,"zhpsv_","","",null,null],[5,"chpsvx_","","",null,null],[5,"zhpsvx_","","",null,null],[5,"sgeqrf_","","",null,null],[5,"dgeqrf_","","",null,null],[5,"cgeqrf_","","",null,null],[5,"zgeqrf_","","",null,null],[5,"sgeqpf_","","",null,null],[5,"dgeqpf_","","",null,null],[5,"cgeqpf_","","",null,null],[5,"zgeqpf_","","",null,null],[5,"sgeqp3_","","",null,null],[5,"dgeqp3_","","",null,null],[5,"cgeqp3_","","",null,null],[5,"zgeqp3_","","",null,null],[5,"sorgqr_","","",null,null],[5,"dorgqr_","","",null,null],[5,"sormqr_","","",null,null],[5,"dormqr_","","",null,null],[5,"cungqr_","","",null,null],[5,"zungqr_","","",null,null],[5,"cunmqr_","","",null,null],[5,"zunmqr_","","",null,null],[5,"sgelqf_","","",null,null],[5,"dgelqf_","","",null,null],[5,"cgelqf_","","",null,null],[5,"zgelqf_","","",null,null],[5,"sorglq_","","",null,null],[5,"dorglq_","","",null,null],[5,"sormlq_","","",null,null],[5,"dormlq_","","",null,null],[5,"cunglq_","","",null,null],[5,"zunglq_","","",null,null],[5,"cunmlq_","","",null,null],[5,"zunmlq_","","",null,null],[5,"sgeqlf_","","",null,null],[5,"dgeqlf_","","",null,null],[5,"cgeqlf_","","",null,null],[5,"zgeqlf_","","",null,null],[5,"sorgql_","","",null,null],[5,"dorgql_","","",null,null],[5,"cungql_","","",null,null],[5,"zungql_","","",null,null],[5,"sormql_","","",null,null],[5,"dormql_","","",null,null],[5,"cunmql_","","",null,null],[5,"zunmql_","","",null,null],[5,"sgerqf_","","",null,null],[5,"dgerqf_","","",null,null],[5,"cgerqf_","","",null,null],[5,"zgerqf_","","",null,null],[5,"sorgrq_","","",null,null],[5,"dorgrq_","","",null,null],[5,"cungrq_","","",null,null],[5,"zungrq_","","",null,null],[5,"sormrq_","","",null,null],[5,"dormrq_","","",null,null],[5,"cunmrq_","","",null,null],[5,"zunmrq_","","",null,null],[5,"stzrzf_","","",null,null],[5,"dtzrzf_","","",null,null],[5,"ctzrzf_","","",null,null],[5,"ztzrzf_","","",null,null],[5,"sormrz_","","",null,null],[5,"dormrz_","","",null,null],[5,"cunmrz_","","",null,null],[5,"zunmrz_","","",null,null],[5,"sggqrf_","","",null,null],[5,"dggqrf_","","",null,null],[5,"cggqrf_","","",null,null],[5,"zggqrf_","","",null,null],[5,"sggrqf_","","",null,null],[5,"dggrqf_","","",null,null],[5,"cggrqf_","","",null,null],[5,"zggrqf_","","",null,null],[5,"sgebrd_","","",null,null],[5,"dgebrd_","","",null,null],[5,"cgebrd_","","",null,null],[5,"zgebrd_","","",null,null],[5,"sgbbrd_","","",null,null],[5,"dgbbrd_","","",null,null],[5,"cgbbrd_","","",null,null],[5,"zgbbrd_","","",null,null],[5,"sorgbr_","","",null,null],[5,"dorgbr_","","",null,null],[5,"sormbr_","","",null,null],[5,"dormbr_","","",null,null],[5,"cungbr_","","",null,null],[5,"zungbr_","","",null,null],[5,"cunmbr_","","",null,null],[5,"zunmbr_","","",null,null],[5,"sbdsqr_","","",null,null],[5,"dbdsqr_","","",null,null],[5,"cbdsqr_","","",null,null],[5,"zbdsqr_","","",null,null],[5,"sbdsdc_","","",null,null],[5,"dbdsdc_","","",null,null],[5,"sbdsvdx_","","",null,null],[5,"dbdsvdx_","","",null,null],[5,"ssytrd_","","",null,null],[5,"dsytrd_","","",null,null],[5,"sorgtr_","","",null,null],[5,"dorgtr_","","",null,null],[5,"sormtr_","","",null,null],[5,"dormtr_","","",null,null],[5,"chetrd_","","",null,null],[5,"zhetrd_","","",null,null],[5,"cungtr_","","",null,null],[5,"zungtr_","","",null,null],[5,"cunmtr_","","",null,null],[5,"zunmtr_","","",null,null],[5,"ssptrd_","","",null,null],[5,"dsptrd_","","",null,null],[5,"sopgtr_","","",null,null],[5,"dopgtr_","","",null,null],[5,"sopmtr_","","",null,null],[5,"dopmtr_","","",null,null],[5,"chptrd_","","",null,null],[5,"zhptrd_","","",null,null],[5,"cupgtr_","","",null,null],[5,"zupgtr_","","",null,null],[5,"cupmtr_","","",null,null],[5,"zupmtr_","","",null,null],[5,"ssbtrd_","","",null,null],[5,"dsbtrd_","","",null,null],[5,"chbtrd_","","",null,null],[5,"zhbtrd_","","",null,null],[5,"ssterf_","","",null,null],[5,"dsterf_","","",null,null],[5,"ssteqr_","","",null,null],[5,"dsteqr_","","",null,null],[5,"csteqr_","","",null,null],[5,"zsteqr_","","",null,null],[5,"sstemr_","","",null,null],[5,"dstemr_","","",null,null],[5,"cstemr_","","",null,null],[5,"zstemr_","","",null,null],[5,"sstedc_","","",null,null],[5,"dstedc_","","",null,null],[5,"cstedc_","","",null,null],[5,"zstedc_","","",null,null],[5,"sstegr_","","",null,null],[5,"dstegr_","","",null,null],[5,"cstegr_","","",null,null],[5,"zstegr_","","",null,null],[5,"spteqr_","","",null,null],[5,"dpteqr_","","",null,null],[5,"cpteqr_","","",null,null],[5,"zpteqr_","","",null,null],[5,"sstebz_","","",null,null],[5,"dstebz_","","",null,null],[5,"sstein_","","",null,null],[5,"dstein_","","",null,null],[5,"cstein_","","",null,null],[5,"zstein_","","",null,null],[5,"sdisna_","","",null,null],[5,"ddisna_","","",null,null],[5,"ssygst_","","",null,null],[5,"dsygst_","","",null,null],[5,"chegst_","","",null,null],[5,"zhegst_","","",null,null],[5,"sspgst_","","",null,null],[5,"dspgst_","","",null,null],[5,"chpgst_","","",null,null],[5,"zhpgst_","","",null,null],[5,"ssbgst_","","",null,null],[5,"dsbgst_","","",null,null],[5,"chbgst_","","",null,null],[5,"zhbgst_","","",null,null],[5,"spbstf_","","",null,null],[5,"dpbstf_","","",null,null],[5,"cpbstf_","","",null,null],[5,"zpbstf_","","",null,null],[5,"sgehrd_","","",null,null],[5,"dgehrd_","","",null,null],[5,"cgehrd_","","",null,null],[5,"zgehrd_","","",null,null],[5,"sorghr_","","",null,null],[5,"dorghr_","","",null,null],[5,"sormhr_","","",null,null],[5,"dormhr_","","",null,null],[5,"cunghr_","","",null,null],[5,"zunghr_","","",null,null],[5,"cunmhr_","","",null,null],[5,"zunmhr_","","",null,null],[5,"sgebal_","","",null,null],[5,"dgebal_","","",null,null],[5,"cgebal_","","",null,null],[5,"zgebal_","","",null,null],[5,"sgebak_","","",null,null],[5,"dgebak_","","",null,null],[5,"cgebak_","","",null,null],[5,"zgebak_","","",null,null],[5,"shseqr_","","",null,null],[5,"dhseqr_","","",null,null],[5,"chseqr_","","",null,null],[5,"zhseqr_","","",null,null],[5,"shsein_","","",null,null],[5,"dhsein_","","",null,null],[5,"chsein_","","",null,null],[5,"zhsein_","","",null,null],[5,"strevc_","","",null,null],[5,"dtrevc_","","",null,null],[5,"ctrevc_","","",null,null],[5,"ztrevc_","","",null,null],[5,"strsna_","","",null,null],[5,"dtrsna_","","",null,null],[5,"ctrsna_","","",null,null],[5,"ztrsna_","","",null,null],[5,"strexc_","","",null,null],[5,"dtrexc_","","",null,null],[5,"ctrexc_","","",null,null],[5,"ztrexc_","","",null,null],[5,"strsen_","","",null,null],[5,"dtrsen_","","",null,null],[5,"ctrsen_","","",null,null],[5,"ztrsen_","","",null,null],[5,"strsyl_","","",null,null],[5,"dtrsyl_","","",null,null],[5,"ctrsyl_","","",null,null],[5,"ztrsyl_","","",null,null],[5,"sgghrd_","","",null,null],[5,"dgghrd_","","",null,null],[5,"cgghrd_","","",null,null],[5,"zgghrd_","","",null,null],[5,"sgghd3_","","",null,null],[5,"dgghd3_","","",null,null],[5,"cgghd3_","","",null,null],[5,"zgghd3_","","",null,null],[5,"sggbal_","","",null,null],[5,"dggbal_","","",null,null],[5,"cggbal_","","",null,null],[5,"zggbal_","","",null,null],[5,"sggbak_","","",null,null],[5,"dggbak_","","",null,null],[5,"cggbak_","","",null,null],[5,"zggbak_","","",null,null],[5,"shgeqz_","","",null,null],[5,"dhgeqz_","","",null,null],[5,"chgeqz_","","",null,null],[5,"zhgeqz_","","",null,null],[5,"stgevc_","","",null,null],[5,"dtgevc_","","",null,null],[5,"ctgevc_","","",null,null],[5,"ztgevc_","","",null,null],[5,"stgexc_","","",null,null],[5,"dtgexc_","","",null,null],[5,"ctgexc_","","",null,null],[5,"ztgexc_","","",null,null],[5,"stgsen_","","",null,null],[5,"dtgsen_","","",null,null],[5,"ctgsen_","","",null,null],[5,"ztgsen_","","",null,null],[5,"stgsyl_","","",null,null],[5,"dtgsyl_","","",null,null],[5,"ctgsyl_","","",null,null],[5,"ztgsyl_","","",null,null],[5,"stgsna_","","",null,null],[5,"dtgsna_","","",null,null],[5,"ctgsna_","","",null,null],[5,"ztgsna_","","",null,null],[5,"sggsvp_","","",null,null],[5,"dggsvp_","","",null,null],[5,"cggsvp_","","",null,null],[5,"zggsvp_","","",null,null],[5,"sggsvp3_","","",null,null],[5,"dggsvp3_","","",null,null],[5,"cggsvp3_","","",null,null],[5,"zggsvp3_","","",null,null],[5,"stgsja_","","",null,null],[5,"dtgsja_","","",null,null],[5,"ctgsja_","","",null,null],[5,"ztgsja_","","",null,null],[5,"sgels_","","",null,null],[5,"dgels_","","",null,null],[5,"cgels_","","",null,null],[5,"zgels_","","",null,null],[5,"sgelsy_","","",null,null],[5,"dgelsy_","","",null,null],[5,"cgelsy_","","",null,null],[5,"zgelsy_","","",null,null],[5,"sgelss_","","",null,null],[5,"dgelss_","","",null,null],[5,"cgelss_","","",null,null],[5,"zgelss_","","",null,null],[5,"sgelsd_","","",null,null],[5,"dgelsd_","","",null,null],[5,"cgelsd_","","",null,null],[5,"zgelsd_","","",null,null],[5,"sgglse_","","",null,null],[5,"dgglse_","","",null,null],[5,"cgglse_","","",null,null],[5,"zgglse_","","",null,null],[5,"sggglm_","","",null,null],[5,"dggglm_","","",null,null],[5,"cggglm_","","",null,null],[5,"zggglm_","","",null,null],[5,"ssyev_","","",null,null],[5,"dsyev_","","",null,null],[5,"cheev_","","",null,null],[5,"zheev_","","",null,null],[5,"ssyevd_","","",null,null],[5,"dsyevd_","","",null,null],[5,"cheevd_","","",null,null],[5,"zheevd_","","",null,null],[5,"ssyevx_","","",null,null],[5,"dsyevx_","","",null,null],[5,"cheevx_","","",null,null],[5,"zheevx_","","",null,null],[5,"ssyevr_","","",null,null],[5,"dsyevr_","","",null,null],[5,"cheevr_","","",null,null],[5,"zheevr_","","",null,null],[5,"sspev_","","",null,null],[5,"dspev_","","",null,null],[5,"chpev_","","",null,null],[5,"zhpev_","","",null,null],[5,"sspevd_","","",null,null],[5,"dspevd_","","",null,null],[5,"chpevd_","","",null,null],[5,"zhpevd_","","",null,null],[5,"sspevx_","","",null,null],[5,"dspevx_","","",null,null],[5,"chpevx_","","",null,null],[5,"zhpevx_","","",null,null],[5,"ssbev_","","",null,null],[5,"dsbev_","","",null,null],[5,"chbev_","","",null,null],[5,"zhbev_","","",null,null],[5,"ssbevd_","","",null,null],[5,"dsbevd_","","",null,null],[5,"chbevd_","","",null,null],[5,"zhbevd_","","",null,null],[5,"ssbevx_","","",null,null],[5,"dsbevx_","","",null,null],[5,"chbevx_","","",null,null],[5,"zhbevx_","","",null,null],[5,"sstev_","","",null,null],[5,"dstev_","","",null,null],[5,"sstevd_","","",null,null],[5,"dstevd_","","",null,null],[5,"sstevx_","","",null,null],[5,"dstevx_","","",null,null],[5,"sstevr_","","",null,null],[5,"dstevr_","","",null,null],[5,"sgees_","","",null,null],[5,"dgees_","","",null,null],[5,"cgees_","","",null,null],[5,"zgees_","","",null,null],[5,"sgeesx_","","",null,null],[5,"dgeesx_","","",null,null],[5,"cgeesx_","","",null,null],[5,"zgeesx_","","",null,null],[5,"sgeev_","","",null,null],[5,"dgeev_","","",null,null],[5,"cgeev_","","",null,null],[5,"zgeev_","","",null,null],[5,"sgeevx_","","",null,null],[5,"dgeevx_","","",null,null],[5,"cgeevx_","","",null,null],[5,"zgeevx_","","",null,null],[5,"sgesvd_","","",null,null],[5,"dgesvd_","","",null,null],[5,"cgesvd_","","",null,null],[5,"zgesvd_","","",null,null],[5,"sgesvdx_","","",null,null],[5,"dgesvdx_","","",null,null],[5,"cgesvdx_","","",null,null],[5,"zgesvdx_","","",null,null],[5,"sgesdd_","","",null,null],[5,"dgesdd_","","",null,null],[5,"cgesdd_","","",null,null],[5,"zgesdd_","","",null,null],[5,"dgejsv_","","",null,null],[5,"sgejsv_","","",null,null],[5,"cgejsv_","","",null,null],[5,"zgejsv_","","",null,null],[5,"dgesvj_","","",null,null],[5,"sgesvj_","","",null,null],[5,"cgesvj_","","",null,null],[5,"zgesvj_","","",null,null],[5,"sggsvd_","","",null,null],[5,"dggsvd_","","",null,null],[5,"cggsvd_","","",null,null],[5,"zggsvd_","","",null,null],[5,"sggsvd3_","","",null,null],[5,"dggsvd3_","","",null,null],[5,"cggsvd3_","","",null,null],[5,"zggsvd3_","","",null,null],[5,"ssygv_","","",null,null],[5,"dsygv_","","",null,null],[5,"chegv_","","",null,null],[5,"zhegv_","","",null,null],[5,"ssygvd_","","",null,null],[5,"dsygvd_","","",null,null],[5,"chegvd_","","",null,null],[5,"zhegvd_","","",null,null],[5,"ssygvx_","","",null,null],[5,"dsygvx_","","",null,null],[5,"chegvx_","","",null,null],[5,"zhegvx_","","",null,null],[5,"sspgv_","","",null,null],[5,"dspgv_","","",null,null],[5,"chpgv_","","",null,null],[5,"zhpgv_","","",null,null],[5,"sspgvd_","","",null,null],[5,"dspgvd_","","",null,null],[5,"chpgvd_","","",null,null],[5,"zhpgvd_","","",null,null],[5,"sspgvx_","","",null,null],[5,"dspgvx_","","",null,null],[5,"chpgvx_","","",null,null],[5,"zhpgvx_","","",null,null],[5,"ssbgv_","","",null,null],[5,"dsbgv_","","",null,null],[5,"chbgv_","","",null,null],[5,"zhbgv_","","",null,null],[5,"ssbgvd_","","",null,null],[5,"dsbgvd_","","",null,null],[5,"chbgvd_","","",null,null],[5,"zhbgvd_","","",null,null],[5,"ssbgvx_","","",null,null],[5,"dsbgvx_","","",null,null],[5,"chbgvx_","","",null,null],[5,"zhbgvx_","","",null,null],[5,"sgges_","","",null,null],[5,"dgges_","","",null,null],[5,"cgges_","","",null,null],[5,"zgges_","","",null,null],[5,"sgges3_","","",null,null],[5,"dgges3_","","",null,null],[5,"cgges3_","","",null,null],[5,"zgges3_","","",null,null],[5,"sggesx_","","",null,null],[5,"dggesx_","","",null,null],[5,"cggesx_","","",null,null],[5,"zggesx_","","",null,null],[5,"sggev_","","",null,null],[5,"dggev_","","",null,null],[5,"cggev_","","",null,null],[5,"zggev_","","",null,null],[5,"sggev3_","","",null,null],[5,"dggev3_","","",null,null],[5,"cggev3_","","",null,null],[5,"zggev3_","","",null,null],[5,"sggevx_","","",null,null],[5,"dggevx_","","",null,null],[5,"cggevx_","","",null,null],[5,"zggevx_","","",null,null],[5,"dsfrk_","","",null,null],[5,"ssfrk_","","",null,null],[5,"zhfrk_","","",null,null],[5,"chfrk_","","",null,null],[5,"dtfsm_","","",null,null],[5,"stfsm_","","",null,null],[5,"ztfsm_","","",null,null],[5,"ctfsm_","","",null,null],[5,"dtfttp_","","",null,null],[5,"stfttp_","","",null,null],[5,"ztfttp_","","",null,null],[5,"ctfttp_","","",null,null],[5,"dtfttr_","","",null,null],[5,"stfttr_","","",null,null],[5,"ztfttr_","","",null,null],[5,"ctfttr_","","",null,null],[5,"dtpttf_","","",null,null],[5,"stpttf_","","",null,null],[5,"ztpttf_","","",null,null],[5,"ctpttf_","","",null,null],[5,"dtpttr_","","",null,null],[5,"stpttr_","","",null,null],[5,"ztpttr_","","",null,null],[5,"ctpttr_","","",null,null],[5,"dtrttf_","","",null,null],[5,"strttf_","","",null,null],[5,"ztrttf_","","",null,null],[5,"ctrttf_","","",null,null],[5,"dtrttp_","","",null,null],[5,"strttp_","","",null,null],[5,"ztrttp_","","",null,null],[5,"ctrttp_","","",null,null],[5,"sgeqrfp_","","",null,null],[5,"dgeqrfp_","","",null,null],[5,"cgeqrfp_","","",null,null],[5,"zgeqrfp_","","",null,null],[5,"clacgv_","","",null,null],[5,"zlacgv_","","",null,null],[5,"slarnv_","","",null,null],[5,"dlarnv_","","",null,null],[5,"clarnv_","","",null,null],[5,"zlarnv_","","",null,null],[5,"sgeqr2_","","",null,null],[5,"dgeqr2_","","",null,null],[5,"cgeqr2_","","",null,null],[5,"zgeqr2_","","",null,null],[5,"slacn2_","","",null,null],[5,"dlacn2_","","",null,null],[5,"clacn2_","","",null,null],[5,"zlacn2_","","",null,null],[5,"slacpy_","","",null,null],[5,"dlacpy_","","",null,null],[5,"clacpy_","","",null,null],[5,"zlacpy_","","",null,null],[5,"clacp2_","","",null,null],[5,"zlacp2_","","",null,null],[5,"sgetf2_","","",null,null],[5,"dgetf2_","","",null,null],[5,"cgetf2_","","",null,null],[5,"zgetf2_","","",null,null],[5,"slaswp_","","",null,null],[5,"dlaswp_","","",null,null],[5,"claswp_","","",null,null],[5,"zlaswp_","","",null,null],[5,"slange_","","",null,null],[5,"dlange_","","",null,null],[5,"clange_","","",null,null],[5,"zlange_","","",null,null],[5,"clanhe_","","",null,null],[5,"zlanhe_","","",null,null],[5,"slansy_","","",null,null],[5,"dlansy_","","",null,null],[5,"clansy_","","",null,null],[5,"zlansy_","","",null,null],[5,"slantr_","","",null,null],[5,"dlantr_","","",null,null],[5,"clantr_","","",null,null],[5,"zlantr_","","",null,null],[5,"slamch_","","",null,null],[5,"dlamch_","","",null,null],[5,"sgelq2_","","",null,null],[5,"dgelq2_","","",null,null],[5,"cgelq2_","","",null,null],[5,"zgelq2_","","",null,null],[5,"slarfb_","","",null,null],[5,"dlarfb_","","",null,null],[5,"clarfb_","","",null,null],[5,"zlarfb_","","",null,null],[5,"slarfg_","","",null,null],[5,"dlarfg_","","",null,null],[5,"clarfg_","","",null,null],[5,"zlarfg_","","",null,null],[5,"slarft_","","",null,null],[5,"dlarft_","","",null,null],[5,"clarft_","","",null,null],[5,"zlarft_","","",null,null],[5,"slarfx_","","",null,null],[5,"dlarfx_","","",null,null],[5,"clarfx_","","",null,null],[5,"zlarfx_","","",null,null],[5,"slatms_","","",null,null],[5,"dlatms_","","",null,null],[5,"clatms_","","",null,null],[5,"zlatms_","","",null,null],[5,"slag2d_","","",null,null],[5,"dlag2s_","","",null,null],[5,"clag2z_","","",null,null],[5,"zlag2c_","","",null,null],[5,"slauum_","","",null,null],[5,"dlauum_","","",null,null],[5,"clauum_","","",null,null],[5,"zlauum_","","",null,null],[5,"slagge_","","",null,null],[5,"dlagge_","","",null,null],[5,"clagge_","","",null,null],[5,"zlagge_","","",null,null],[5,"slascl_","","",null,null],[5,"dlascl_","","",null,null],[5,"clascl_","","",null,null],[5,"zlascl_","","",null,null],[5,"slaset_","","",null,null],[5,"dlaset_","","",null,null],[5,"claset_","","",null,null],[5,"zlaset_","","",null,null],[5,"slasrt_","","",null,null],[5,"dlasrt_","","",null,null],[5,"claghe_","","",null,null],[5,"zlaghe_","","",null,null],[5,"slagsy_","","",null,null],[5,"dlagsy_","","",null,null],[5,"clagsy_","","",null,null],[5,"zlagsy_","","",null,null],[5,"slapmr_","","",null,null],[5,"dlapmr_","","",null,null],[5,"clapmr_","","",null,null],[5,"zlapmr_","","",null,null],[5,"slapmt_","","",null,null],[5,"dlapmt_","","",null,null],[5,"clapmt_","","",null,null],[5,"zlapmt_","","",null,null],[5,"slapy2_","","",null,null],[5,"dlapy2_","","",null,null],[5,"slapy3_","","",null,null],[5,"dlapy3_","","",null,null],[5,"slartgp_","","",null,null],[5,"dlartgp_","","",null,null],[5,"slartgs_","","",null,null],[5,"dlartgs_","","",null,null],[5,"cbbcsd_","","",null,null],[5,"cheswapr_","","",null,null],[5,"chetri2_","","",null,null],[5,"chetri2x_","","",null,null],[5,"chetrs2_","","",null,null],[5,"csyconv_","","",null,null],[5,"csyswapr_","","",null,null],[5,"csytri2_","","",null,null],[5,"csytri2x_","","",null,null],[5,"csytrs2_","","",null,null],[5,"cunbdb_","","",null,null],[5,"cuncsd_","","",null,null],[5,"cuncsd2by1_","","",null,null],[5,"dbbcsd_","","",null,null],[5,"dorbdb_","","",null,null],[5,"dorcsd_","","",null,null],[5,"dorcsd2by1_","","",null,null],[5,"dsyconv_","","",null,null],[5,"dsyswapr_","","",null,null],[5,"dsytri2_","","",null,null],[5,"dsytri2x_","","",null,null],[5,"dsytrs2_","","",null,null],[5,"sbbcsd_","","",null,null],[5,"sorbdb_","","",null,null],[5,"sorcsd_","","",null,null],[5,"sorcsd2by1_","","",null,null],[5,"ssyconv_","","",null,null],[5,"ssyswapr_","","",null,null],[5,"ssytri2_","","",null,null],[5,"ssytri2x_","","",null,null],[5,"ssytrs2_","","",null,null],[5,"zbbcsd_","","",null,null],[5,"zheswapr_","","",null,null],[5,"zhetri2_","","",null,null],[5,"zhetri2x_","","",null,null],[5,"zhetrs2_","","",null,null],[5,"zsyconv_","","",null,null],[5,"zsyswapr_","","",null,null],[5,"zsytri2_","","",null,null],[5,"zsytri2x_","","",null,null],[5,"zsytrs2_","","",null,null],[5,"zunbdb_","","",null,null],[5,"zuncsd_","","",null,null],[5,"zuncsd2by1_","","",null,null],[5,"sgemqrt_","","",null,null],[5,"dgemqrt_","","",null,null],[5,"cgemqrt_","","",null,null],[5,"zgemqrt_","","",null,null],[5,"sgeqrt_","","",null,null],[5,"dgeqrt_","","",null,null],[5,"cgeqrt_","","",null,null],[5,"zgeqrt_","","",null,null],[5,"sgeqrt2_","","",null,null],[5,"dgeqrt2_","","",null,null],[5,"cgeqrt2_","","",null,null],[5,"zgeqrt2_","","",null,null],[5,"sgeqrt3_","","",null,null],[5,"dgeqrt3_","","",null,null],[5,"cgeqrt3_","","",null,null],[5,"zgeqrt3_","","",null,null],[5,"stpmqrt_","","",null,null],[5,"dtpmqrt_","","",null,null],[5,"ctpmqrt_","","",null,null],[5,"ztpmqrt_","","",null,null],[5,"stpqrt_","","",null,null],[5,"dtpqrt_","","",null,null],[5,"ctpqrt_","","",null,null],[5,"ztpqrt_","","",null,null],[5,"stpqrt2_","","",null,null],[5,"dtpqrt2_","","",null,null],[5,"ctpqrt2_","","",null,null],[5,"ztpqrt2_","","",null,null],[5,"stprfb_","","",null,null],[5,"dtprfb_","","",null,null],[5,"ctprfb_","","",null,null],[5,"ztprfb_","","",null,null],[5,"ssysv_rook_","","",null,null],[5,"dsysv_rook_","","",null,null],[5,"csysv_rook_","","",null,null],[5,"zsysv_rook_","","",null,null],[5,"ssytrf_rook_","","",null,null],[5,"dsytrf_rook_","","",null,null],[5,"csytrf_rook_","","",null,null],[5,"zsytrf_rook_","","",null,null],[5,"ssytrs_rook_","","",null,null],[5,"dsytrs_rook_","","",null,null],[5,"csytrs_rook_","","",null,null],[5,"zsytrs_rook_","","",null,null],[5,"chetrf_rook_","","",null,null],[5,"zhetrf_rook_","","",null,null],[5,"chetrs_rook_","","",null,null],[5,"zhetrs_rook_","","",null,null],[5,"csyr_","","",null,null],[5,"zsyr_","","",null,null],[5,"ilaver_","","",null,null],[6,"lapack_int","","",null,null],[6,"lapack_logical","","",null,null],[6,"lapack_complex_float","","",null,null],[6,"lapack_complex_double","","",null,null],[6,"LAPACK_S_SELECT2","","",null,null],[6,"LAPACK_S_SELECT3","","",null,null],[6,"LAPACK_D_SELECT2","","",null,null],[6,"LAPACK_D_SELECT3","","",null,null],[6,"LAPACK_C_SELECT1","","",null,null],[6,"LAPACK_C_SELECT2","","",null,null],[6,"LAPACK_Z_SELECT1","","",null,null],[6,"LAPACK_Z_SELECT2","","",null,null],[6,"c_double_complex","lapack_sys","A complex number with 64-bit parts.",null,null],[6,"c_float_complex","","A complex number with 32-bit parts.",null,null]],"paths":[]};
searchIndex["blas_sys"] = {"doc":"Bindings to the [Basic Linear Algebra Subprograms][1].","items":[[0,"c","blas_sys","The C bindings (CBLAS).",null,null],[4,"CBLAS_LAYOUT","blas_sys::c","",null,null],[13,"CblasRowMajor","","",0,null],[13,"CblasColMajor","","",0,null],[4,"CBLAS_TRANSPOSE","","",null,null],[13,"CblasNoTrans","","",1,null],[13,"CblasTrans","","",1,null],[13,"CblasConjTrans","","",1,null],[4,"CBLAS_UPLO","","",null,null],[13,"CblasUpper","","",2,null],[13,"CblasLower","","",2,null],[4,"CBLAS_DIAG","","",null,null],[13,"CblasNonUnit","","",3,null],[13,"CblasUnit","","",3,null],[4,"CBLAS_SIDE","","",null,null],[13,"CblasLeft","","",4,null],[13,"CblasRight","","",4,null],[5,"cblas_dcabs1","","",null,null],[5,"cblas_scabs1","","",null,null],[5,"cblas_sdsdot","","",null,null],[5,"cblas_dsdot","","",null,null],[5,"cblas_sdot","","",null,null],[5,"cblas_ddot","","",null,null],[5,"cblas_cdotu_sub","","",null,null],[5,"cblas_cdotc_sub","","",null,null],[5,"cblas_zdotu_sub","","",null,null],[5,"cblas_zdotc_sub","","",null,null],[5,"cblas_snrm2","","",null,null],[5,"cblas_sasum","","",null,null],[5,"cblas_dnrm2","","",null,null],[5,"cblas_dasum","","",null,null],[5,"cblas_scnrm2","","",null,null],[5,"cblas_scasum","","",null,null],[5,"cblas_dznrm2","","",null,null],[5,"cblas_dzasum","","",null,null],[5,"cblas_isamax","","",null,null],[5,"cblas_idamax","","",null,null],[5,"cblas_icamax","","",null,null],[5,"cblas_izamax","","",null,null],[5,"cblas_sswap","","",null,null],[5,"cblas_scopy","","",null,null],[5,"cblas_saxpy","","",null,null],[5,"cblas_dswap","","",null,null],[5,"cblas_dcopy","","",null,null],[5,"cblas_daxpy","","",null,null],[5,"cblas_cswap","","",null,null],[5,"cblas_ccopy","","",null,null],[5,"cblas_caxpy","","",null,null],[5,"cblas_zswap","","",null,null],[5,"cblas_zcopy","","",null,null],[5,"cblas_zaxpy","","",null,null],[5,"cblas_srotg","","",null,null],[5,"cblas_srotmg","","",null,null],[5,"cblas_srot","","",null,null],[5,"cblas_srotm","","",null,null],[5,"cblas_drotg","","",null,null],[5,"cblas_drotmg","","",null,null],[5,"cblas_drot","","",null,null],[5,"cblas_drotm","","",null,null],[5,"cblas_sscal","","",null,null],[5,"cblas_dscal","","",null,null],[5,"cblas_cscal","","",null,null],[5,"cblas_zscal","","",null,null],[5,"cblas_csscal","","",null,null],[5,"cblas_zdscal","","",null,null],[5,"cblas_sgemv","","",null,null],[5,"cblas_sgbmv","","",null,null],[5,"cblas_strmv","","",null,null],[5,"cblas_stbmv","","",null,null],[5,"cblas_stpmv","","",null,null],[5,"cblas_strsv","","",null,null],[5,"cblas_stbsv","","",null,null],[5,"cblas_stpsv","","",null,null],[5,"cblas_dgemv","","",null,null],[5,"cblas_dgbmv","","",null,null],[5,"cblas_dtrmv","","",null,null],[5,"cblas_dtbmv","","",null,null],[5,"cblas_dtpmv","","",null,null],[5,"cblas_dtrsv","","",null,null],[5,"cblas_dtbsv","","",null,null],[5,"cblas_dtpsv","","",null,null],[5,"cblas_cgemv","","",null,null],[5,"cblas_cgbmv","","",null,null],[5,"cblas_ctrmv","","",null,null],[5,"cblas_ctbmv","","",null,null],[5,"cblas_ctpmv","","",null,null],[5,"cblas_ctrsv","","",null,null],[5,"cblas_ctbsv","","",null,null],[5,"cblas_ctpsv","","",null,null],[5,"cblas_zgemv","","",null,null],[5,"cblas_zgbmv","","",null,null],[5,"cblas_ztrmv","","",null,null],[5,"cblas_ztbmv","","",null,null],[5,"cblas_ztpmv","","",null,null],[5,"cblas_ztrsv","","",null,null],[5,"cblas_ztbsv","","",null,null],[5,"cblas_ztpsv","","",null,null],[5,"cblas_ssymv","","",null,null],[5,"cblas_ssbmv","","",null,null],[5,"cblas_sspmv","","",null,null],[5,"cblas_sger","","",null,null],[5,"cblas_ssyr","","",null,null],[5,"cblas_sspr","","",null,null],[5,"cblas_ssyr2","","",null,null],[5,"cblas_sspr2","","",null,null],[5,"cblas_dsymv","","",null,null],[5,"cblas_dsbmv","","",null,null],[5,"cblas_dspmv","","",null,null],[5,"cblas_dger","","",null,null],[5,"cblas_dsyr","","",null,null],[5,"cblas_dspr","","",null,null],[5,"cblas_dsyr2","","",null,null],[5,"cblas_dspr2","","",null,null],[5,"cblas_chemv","","",null,null],[5,"cblas_chbmv","","",null,null],[5,"cblas_chpmv","","",null,null],[5,"cblas_cgeru","","",null,null],[5,"cblas_cgerc","","",null,null],[5,"cblas_cher","","",null,null],[5,"cblas_chpr","","",null,null],[5,"cblas_cher2","","",null,null],[5,"cblas_chpr2","","",null,null],[5,"cblas_zhemv","","",null,null],[5,"cblas_zhbmv","","",null,null],[5,"cblas_zhpmv","","",null,null],[5,"cblas_zgeru","","",null,null],[5,"cblas_zgerc","","",null,null],[5,"cblas_zher","","",null,null],[5,"cblas_zhpr","","",null,null],[5,"cblas_zher2","","",null,null],[5,"cblas_zhpr2","","",null,null],[5,"cblas_sgemm","","",null,null],[5,"cblas_ssymm","","",null,null],[5,"cblas_ssyrk","","",null,null],[5,"cblas_ssyr2k","","",null,null],[5,"cblas_strmm","","",null,null],[5,"cblas_strsm","","",null,null],[5,"cblas_dgemm","","",null,null],[5,"cblas_dsymm","","",null,null],[5,"cblas_dsyrk","","",null,null],[5,"cblas_dsyr2k","","",null,null],[5,"cblas_dtrmm","","",null,null],[5,"cblas_dtrsm","","",null,null],[5,"cblas_cgemm","","",null,null],[5,"cblas_csymm","","",null,null],[5,"cblas_csyrk","","",null,null],[5,"cblas_csyr2k","","",null,null],[5,"cblas_ctrmm","","",null,null],[5,"cblas_ctrsm","","",null,null],[5,"cblas_zgemm","","",null,null],[5,"cblas_zsymm","","",null,null],[5,"cblas_zsyrk","","",null,null],[5,"cblas_zsyr2k","","",null,null],[5,"cblas_ztrmm","","",null,null],[5,"cblas_ztrsm","","",null,null],[5,"cblas_chemm","","",null,null],[5,"cblas_cherk","","",null,null],[5,"cblas_cher2k","","",null,null],[5,"cblas_zhemm","","",null,null],[5,"cblas_zherk","","",null,null],[5,"cblas_zher2k","","",null,null],[5,"cblas_xerbla","","",null,null],[6,"CBLAS_INDEX","","",null,null],[6,"CBLAS_ORDER","","",null,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[0,"fortran","blas_sys","The Fortran bindings.",null,null],[5,"srotg_","blas_sys::fortran","",null,null],[5,"srotmg_","","",null,null],[5,"srot_","","",null,null],[5,"srotm_","","",null,null],[5,"sswap_","","",null,null],[5,"sscal_","","",null,null],[5,"scopy_","","",null,null],[5,"saxpy_","","",null,null],[5,"sdot_","","",null,null],[5,"sdsdot_","","",null,null],[5,"snrm2_","","",null,null],[5,"scnrm2_","","",null,null],[5,"sasum_","","",null,null],[5,"isamax_","","",null,null],[5,"drotg_","","",null,null],[5,"drotmg_","","",null,null],[5,"drot_","","",null,null],[5,"drotm_","","",null,null],[5,"dswap_","","",null,null],[5,"dscal_","","",null,null],[5,"dcopy_","","",null,null],[5,"daxpy_","","",null,null],[5,"ddot_","","",null,null],[5,"dsdot_","","",null,null],[5,"dnrm2_","","",null,null],[5,"dznrm2_","","",null,null],[5,"dasum_","","",null,null],[5,"idamax_","","",null,null],[5,"crotg_","","",null,null],[5,"csrot_","","",null,null],[5,"cswap_","","",null,null],[5,"cscal_","","",null,null],[5,"csscal_","","",null,null],[5,"ccopy_","","",null,null],[5,"caxpy_","","",null,null],[5,"cdotu_","","",null,null],[5,"cdotc_","","",null,null],[5,"scasum_","","",null,null],[5,"icamax_","","",null,null],[5,"zrotg_","","",null,null],[5,"zdrot_","","",null,null],[5,"zswap_","","",null,null],[5,"zscal_","","",null,null],[5,"zdscal_","","",null,null],[5,"zcopy_","","",null,null],[5,"zaxpy_","","",null,null],[5,"zdotu_","","",null,null],[5,"zdotc_","","",null,null],[5,"dzasum_","","",null,null],[5,"izamax_","","",null,null],[5,"sgemv_","","",null,null],[5,"sgbmv_","","",null,null],[5,"ssymv_","","",null,null],[5,"ssbmv_","","",null,null],[5,"sspmv_","","",null,null],[5,"strmv_","","",null,null],[5,"stbmv_","","",null,null],[5,"stpmv_","","",null,null],[5,"strsv_","","",null,null],[5,"stbsv_","","",null,null],[5,"stpsv_","","",null,null],[5,"sger_","","",null,null],[5,"ssyr_","","",null,null],[5,"sspr_","","",null,null],[5,"ssyr2_","","",null,null],[5,"sspr2_","","",null,null],[5,"dgemv_","","",null,null],[5,"dgbmv_","","",null,null],[5,"dsymv_","","",null,null],[5,"dsbmv_","","",null,null],[5,"dspmv_","","",null,null],[5,"dtrmv_","","",null,null],[5,"dtbmv_","","",null,null],[5,"dtpmv_","","",null,null],[5,"dtrsv_","","",null,null],[5,"dtbsv_","","",null,null],[5,"dtpsv_","","",null,null],[5,"dger_","","",null,null],[5,"dsyr_","","",null,null],[5,"dspr_","","",null,null],[5,"dsyr2_","","",null,null],[5,"dspr2_","","",null,null],[5,"cgemv_","","",null,null],[5,"cgbmv_","","",null,null],[5,"chemv_","","",null,null],[5,"chbmv_","","",null,null],[5,"chpmv_","","",null,null],[5,"ctrmv_","","",null,null],[5,"ctbmv_","","",null,null],[5,"ctpmv_","","",null,null],[5,"ctrsv_","","",null,null],[5,"ctbsv_","","",null,null],[5,"ctpsv_","","",null,null],[5,"cgeru_","","",null,null],[5,"cgerc_","","",null,null],[5,"cher_","","",null,null],[5,"chpr_","","",null,null],[5,"chpr2_","","",null,null],[5,"cher2_","","",null,null],[5,"zgemv_","","",null,null],[5,"zgbmv_","","",null,null],[5,"zhemv_","","",null,null],[5,"zhbmv_","","",null,null],[5,"zhpmv_","","",null,null],[5,"ztrmv_","","",null,null],[5,"ztbmv_","","",null,null],[5,"ztpmv_","","",null,null],[5,"ztrsv_","","",null,null],[5,"ztbsv_","","",null,null],[5,"ztpsv_","","",null,null],[5,"zgeru_","","",null,null],[5,"zgerc_","","",null,null],[5,"zher_","","",null,null],[5,"zhpr_","","",null,null],[5,"zher2_","","",null,null],[5,"zhpr2_","","",null,null],[5,"sgemm_","","",null,null],[5,"ssymm_","","",null,null],[5,"ssyrk_","","",null,null],[5,"ssyr2k_","","",null,null],[5,"strmm_","","",null,null],[5,"strsm_","","",null,null],[5,"dgemm_","","",null,null],[5,"dsymm_","","",null,null],[5,"dsyrk_","","",null,null],[5,"dsyr2k_","","",null,null],[5,"dtrmm_","","",null,null],[5,"dtrsm_","","",null,null],[5,"cgemm_","","",null,null],[5,"csymm_","","",null,null],[5,"chemm_","","",null,null],[5,"csyrk_","","",null,null],[5,"cherk_","","",null,null],[5,"csyr2k_","","",null,null],[5,"cher2k_","","",null,null],[5,"ctrmm_","","",null,null],[5,"ctrsm_","","",null,null],[5,"zgemm_","","",null,null],[5,"zsymm_","","",null,null],[5,"zhemm_","","",null,null],[5,"zsyrk_","","",null,null],[5,"zherk_","","",null,null],[5,"zsyr2k_","","",null,null],[5,"zher2k_","","",null,null],[5,"ztrmm_","","",null,null],[5,"ztrsm_","","",null,null],[6,"c_double_complex","blas_sys","A complex number with 64-bit parts.",null,null],[6,"c_float_complex","","A complex number with 32-bit parts.",null,null]],"paths":[[4,"CBLAS_LAYOUT"],[4,"CBLAS_TRANSPOSE"],[4,"CBLAS_UPLO"],[4,"CBLAS_DIAG"],[4,"CBLAS_SIDE"]]};
searchIndex["openblas_src"] = {"doc":"","items":[],"paths":[]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",25,null],[10,"read_nil","","",25,null],[10,"read_usize","","",25,null],[10,"read_u64","","",25,null],[10,"read_u32","","",25,null],[10,"read_u16","","",25,null],[10,"read_u8","","",25,null],[10,"read_isize","","",25,null],[10,"read_i64","","",25,null],[10,"read_i32","","",25,null],[10,"read_i16","","",25,null],[10,"read_i8","","",25,null],[10,"read_bool","","",25,null],[10,"read_f64","","",25,null],[10,"read_f32","","",25,null],[10,"read_char","","",25,null],[10,"read_str","","",25,null],[10,"read_enum","","",25,null],[10,"read_enum_variant","","",25,null],[10,"read_enum_variant_arg","","",25,null],[10,"read_enum_struct_variant","","",25,null],[10,"read_enum_struct_variant_field","","",25,null],[10,"read_struct","","",25,null],[10,"read_struct_field","","",25,null],[10,"read_tuple","","",25,null],[10,"read_tuple_arg","","",25,null],[10,"read_tuple_struct","","",25,null],[10,"read_tuple_struct_arg","","",25,null],[10,"read_option","","",25,null],[10,"read_seq","","",25,null],[10,"read_seq_elt","","",25,null],[10,"read_map","","",25,null],[10,"read_map_elt_key","","",25,null],[10,"read_map_elt_val","","",25,null],[10,"error","","",25,null],[8,"Encoder","","",null,null],[16,"Error","","",26,null],[10,"emit_nil","","",26,null],[10,"emit_usize","","",26,null],[10,"emit_u64","","",26,null],[10,"emit_u32","","",26,null],[10,"emit_u16","","",26,null],[10,"emit_u8","","",26,null],[10,"emit_isize","","",26,null],[10,"emit_i64","","",26,null],[10,"emit_i32","","",26,null],[10,"emit_i16","","",26,null],[10,"emit_i8","","",26,null],[10,"emit_bool","","",26,null],[10,"emit_f64","","",26,null],[10,"emit_f32","","",26,null],[10,"emit_char","","",26,null],[10,"emit_str","","",26,null],[10,"emit_enum","","",26,null],[10,"emit_enum_variant","","",26,null],[10,"emit_enum_variant_arg","","",26,null],[10,"emit_enum_struct_variant","","",26,null],[10,"emit_enum_struct_variant_field","","",26,null],[10,"emit_struct","","",26,null],[10,"emit_struct_field","","",26,null],[10,"emit_tuple","","",26,null],[10,"emit_tuple_arg","","",26,null],[10,"emit_tuple_struct","","",26,null],[10,"emit_tuple_struct_arg","","",26,null],[10,"emit_option","","",26,null],[10,"emit_option_none","","",26,null],[10,"emit_option_some","","",26,null],[10,"emit_seq","","",26,null],[10,"emit_seq_elt","","",26,null],[10,"emit_map","","",26,null],[10,"emit_map_elt_key","","",26,null],[10,"emit_map_elt_val","","",26,null],[8,"Decodable","","",null,null],[10,"decode","","",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",28,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",29,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","items":[[3,"GzBuilder","flate2","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DataError","","Error returned when a decompression object finds that the input stream of\nbytes was not a valid input stream of bytes.",null,null],[4,"Status","","Possible status results of compressing some data or successfully\ndecompressing a block of data.",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to input or output\nbuffers being empty.",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output bytes have\nbeen written. Decompression/compression should not be called again.",0,null],[4,"Flush","","Values which indicate the form of flushing to be used when compressing or\ndecompressing in-memory data.",null,null],[13,"None","","A typical parameter for passing to compression/decompression functions,\nthis indicates that the underlying stream to decide how much data to\naccumulate before producing output in order to maximize compression.",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the output is\naligned on a byte boundary so that the decompressor can get all input\ndata available so far.",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but the output is\nnot aligned to a byte boundary.",1,null],[13,"Block","","A deflate block is completed and emitted, as for `Flush::Sync`, but the\noutput is not aligned on a byte boundary and up to seven vits of the\ncurrent block are held to be written as the next byte after the next\ndeflate block is completed.",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the compression state is\nreset so decompression can restart from this point if previous\ncompressed data has been damaged or if random access is desired.",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"Compression","","When compressing data, the compression level can be specified by a value in\nthis enum.",null,null],[13,"None","","No compression is to be performed, this may actually inflate data\nslightly when encoding.",2,null],[13,"Fast","","Optimize for the best speed of encoding.",2,null],[13,"Best","","Optimize for the size of data being encoded.",2,null],[13,"Default","","Choose the default compression, a balance between speed and size.",2,null],[11,"new","","Create a new blank builder with no header by default.",3,{"inputs":[],"output":{"name":"builder"}}],[11,"mtime","","Configure the `mtime` field in the gzip header.",3,null],[11,"extra","","Configure the `extra` field in the gzip header.",3,null],[11,"filename","","Configure the `filename` field in the gzip header.",3,null],[11,"comment","","Configure the `comment` field in the gzip header.",3,null],[11,"write","","Consume this builder, creating a writer encoder in the process.",3,null],[11,"read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"buf_read","","Consume this builder, creating a reader encoder in the process.",3,null],[11,"filename","","Returns the `filename` field of this gzip stream&#39;s header, if present.",4,null],[11,"extra","","Returns the `extra` field of this gzip stream&#39;s header, if present.",4,null],[11,"comment","","Returns the `comment` field of this gzip stream&#39;s header, if present.",4,null],[11,"mtime","","Returns the `mtime` field of this gzip stream&#39;s header, if present.",4,null],[11,"fmt","","",5,null],[11,"new","","Creates a new object ready for compressing data that it&#39;s given.",6,{"inputs":[{"name":"compression"},{"name":"bool"}],"output":{"name":"compress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis compression object.",6,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis compression object.",6,null],[11,"reset","","Quickly resets this compressor without having to reallocate anything.",6,null],[11,"compress","","Compresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",6,null],[11,"compress_vec","","Compresses the input data into the extra space of the output, consuming\nonly as much input as needed and writing as much output as possible.",6,null],[11,"new","","Creates a new object ready for decompressing data that it&#39;s given.",7,{"inputs":[{"name":"bool"}],"output":{"name":"decompress"}}],[11,"total_in","","Returns the total number of input bytes which have been processed by\nthis decompression object.",7,null],[11,"total_out","","Returns the total number of output bytes which have been produced by\nthis decompression object.",7,null],[11,"decompress","","Decompresses the input data into the output, consuming only as much\ninput as needed and writing as much output as possible.",7,null],[11,"decompress_vec","","Decompresses the input data into the extra space in the output vector\nspecified by `output`.",7,null],[11,"description","","",5,null],[11,"fmt","","",5,null],[0,"read","","Types which operate over `Read` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::read","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[0,"write","flate2","Types which operate over `Write` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::write","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders and decoders for\nvarious formats.",null,null],[3,"DeflateEncoder","flate2::bufread","A DEFLATE encoder, or compressor.",null,null],[3,"DeflateDecoder","","A DEFLATE decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[8,"FlateReadExt","flate2","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"gz_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"zlib_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"zlib_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[11,"deflate_encode","","Consume this reader to create a compression stream at the specified\ncompression level.",8,null],[11,"deflate_decode","","Consume this reader to create a decompression stream of this stream.",8,null],[8,"FlateWriteExt","","A helper trait to create encoder/decoders with method syntax.",null,null],[11,"gz_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"zlib_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"deflate_encode","","Consume this writer to create a compression stream at the specified\ncompression level.",9,null],[11,"deflate_decode","","Consume this writer to create a decompression stream of this stream.",9,null],[11,"clone","","",2,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",10,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",10,null],[11,"finish","","Consumes this encoder, flushing the output stream.",10,null],[11,"write","","",10,null],[11,"flush","","",10,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",11,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",11,null],[11,"get_ref","","Acquires a reference to the underlying reader",11,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",11,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",11,null],[11,"read","","",11,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",12,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",12,null],[11,"get_ref","","Acquires a reference to the underlying reader",12,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",12,null],[11,"read","","",12,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",13,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",13,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",13,null],[11,"get_ref","","Acquires a reference to the underlying stream",13,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",13,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",13,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",13,null],[11,"read","","",13,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",14,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",14,null],[11,"get_ref","","Acquires a reference to the underlying stream",14,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",14,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",14,null],[11,"read","","",14,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",15,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",15,null],[11,"finish","","Consumes this encoder, flushing the output stream.",15,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",15,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",15,null],[11,"write","","",15,null],[11,"flush","","",15,null],[11,"new","","Creates a new encoder which will use the given compression level.",16,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"finish","","Finish encoding this stream, returning the underlying writer once the\nencoding is done.",16,null],[11,"write","","",16,null],[11,"flush","","",16,null],[11,"drop","","",16,null],[11,"new","flate2::read","Creates a new encoder which will use the given compression level.",17,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",17,null],[11,"read","","",17,null],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression level.",18,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"into_inner","","Returns the underlying stream, consuming this encoder",18,null],[11,"read","","",18,null],[11,"new","flate2::read","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",19,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",19,null],[11,"read","","",19,null],[11,"new","flate2::bufread","Creates a new decoder from the given reader, immediately parsing the\ngzip header.",20,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"header","","Returns the header associated with this stream.",20,null],[11,"read","","",20,null],[11,"new","flate2::write","Creates a new encoder which will write compressed data to the stream\ngiven at the given compression level.",21,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"encoderwriter"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the output\nstream for another.",21,null],[11,"finish","","Consumes this encoder, flushing the output stream.",21,null],[11,"write","","",21,null],[11,"flush","","",21,null],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",22,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreader"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",22,null],[11,"get_ref","","Acquires a reference to the underlying stream",22,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",22,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",22,null],[11,"read","","",22,null],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data from the given\nstream and emit the compressed stream.",23,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"encoderreaderbuf"}}],[11,"reset","","Resets the state of this encoder entirely, swapping out the input\nstream for another.",23,null],[11,"get_ref","","Acquires a reference to the underlying stream",23,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",23,null],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",23,null],[11,"read","","",23,null],[11,"new","flate2::read","Creates a new decoder which will decompress data read from the given\nstream.",24,{"inputs":[{"name":"r"}],"output":{"name":"decoderreader"}}],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is specified.",24,{"inputs":[{"name":"r"},{"name":"vec"}],"output":{"name":"decoderreader"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",24,null],[11,"get_ref","","Acquires a reference to the underlying stream",24,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",24,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",24,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",24,null],[11,"read","","",24,null],[11,"new","flate2::bufread","Creates a new decoder which will decompress data read from the given\nstream.",25,{"inputs":[{"name":"r"}],"output":{"name":"decoderreaderbuf"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the input\nstream for another.",25,null],[11,"get_ref","","Acquires a reference to the underlying stream",25,null],[11,"get_mut","","Acquires a mutable reference to the underlying stream",25,null],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",25,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",25,null],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",25,null],[11,"read","","",25,null],[11,"new","flate2::write","Creates a new decoder which will write uncompressed data to the stream.",26,{"inputs":[{"name":"w"}],"output":{"name":"decoderwriter"}}],[11,"reset","","Resets the state of this decoder entirely, swapping out the output\nstream for another.",26,null],[11,"finish","","Consumes this encoder, flushing the output stream.",26,null],[11,"total_in","","Returns the number of bytes that the decompressor has consumed for\ndecompression.",26,null],[11,"total_out","","Returns the number of bytes that the decompressor has written to its\noutput stream.",26,null],[11,"write","","",26,null],[11,"flush","","",26,null]],"paths":[[4,"Status"],[4,"Flush"],[4,"Compression"],[3,"GzBuilder"],[3,"GzHeader"],[3,"DataError"],[3,"Compress"],[3,"Decompress"],[8,"FlateReadExt"],[8,"FlateWriteExt"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"],[3,"ZlibDecoder"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["miniz_sys"] = {"doc":"","items":[[3,"mz_stream","miniz_sys","",null,null],[12,"next_in","","",0,null],[12,"avail_in","","",0,null],[12,"total_in","","",0,null],[12,"next_out","","",0,null],[12,"avail_out","","",0,null],[12,"total_out","","",0,null],[12,"msg","","",0,null],[12,"state","","",0,null],[12,"zalloc","","",0,null],[12,"zfree","","",0,null],[12,"opaque","","",0,null],[12,"data_type","","",0,null],[12,"adler","","",0,null],[12,"reserved","","",0,null],[4,"mz_internal_state","","",null,null],[5,"mz_deflateInit2","","",null,null],[5,"mz_deflate","","",null,null],[5,"mz_deflateEnd","","",null,null],[5,"mz_deflateReset","","",null,null],[5,"mz_inflateInit2","","",null,null],[5,"mz_inflate","","",null,null],[5,"mz_inflateEnd","","",null,null],[5,"mz_crc32","","",null,null],[6,"mz_alloc_func","","",null,null],[6,"mz_free_func","","",null,null],[17,"MZ_NO_FLUSH","","",null,null],[17,"MZ_PARTIAL_FLUSH","","",null,null],[17,"MZ_SYNC_FLUSH","","",null,null],[17,"MZ_FULL_FLUSH","","",null,null],[17,"MZ_FINISH","","",null,null],[17,"MZ_BLOCK","","",null,null],[17,"MZ_OK","","",null,null],[17,"MZ_STREAM_END","","",null,null],[17,"MZ_NEED_DICT","","",null,null],[17,"MZ_ERRNO","","",null,null],[17,"MZ_STREAM_ERROR","","",null,null],[17,"MZ_DATA_ERROR","","",null,null],[17,"MZ_MEM_ERROR","","",null,null],[17,"MZ_BUF_ERROR","","",null,null],[17,"MZ_VERSION_ERROR","","",null,null],[17,"MZ_PARAM_ERROR","","",null,null],[17,"MZ_DEFLATED","","",null,null],[17,"MZ_DEFAULT_WINDOW_BITS","","",null,null],[17,"MZ_DEFAULT_STRATEGY","","",null,null]],"paths":[[3,"mz_stream"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"spwd","","",null,null],[12,"sp_namp","","",35,null],[12,"sp_pwdp","","",35,null],[12,"sp_lstchg","","",35,null],[12,"sp_min","","",35,null],[12,"sp_max","","",35,null],[12,"sp_warn","","",35,null],[12,"sp_inact","","",35,null],[12,"sp_expire","","",35,null],[12,"sp_flag","","",35,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",36,null],[12,"f_frsize","","",36,null],[12,"f_blocks","","",36,null],[12,"f_bfree","","",36,null],[12,"f_bavail","","",36,null],[12,"f_files","","",36,null],[12,"f_ffree","","",36,null],[12,"f_favail","","",36,null],[12,"f_fsid","","",36,null],[12,"f_flag","","",36,null],[12,"f_namemax","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curspace","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_valid","","",37,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",38,null],[12,"ssi_errno","","",38,null],[12,"ssi_code","","",38,null],[12,"ssi_pid","","",38,null],[12,"ssi_uid","","",38,null],[12,"ssi_fd","","",38,null],[12,"ssi_tid","","",38,null],[12,"ssi_band","","",38,null],[12,"ssi_overrun","","",38,null],[12,"ssi_trapno","","",38,null],[12,"ssi_status","","",38,null],[12,"ssi_int","","",38,null],[12,"ssi_ptr","","",38,null],[12,"ssi_utime","","",38,null],[12,"ssi_stime","","",38,null],[12,"ssi_addr","","",38,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",39,null],[12,"mq_maxmsg","","",39,null],[12,"mq_msgsize","","",39,null],[12,"mq_curmsgs","","",39,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",40,null],[12,"if_name","","",40,null],[3,"msginfo","","",null,null],[12,"msgpool","","",41,null],[12,"msgmap","","",41,null],[12,"msgmax","","",41,null],[12,"msgmnb","","",41,null],[12,"msgmni","","",41,null],[12,"msgssz","","",41,null],[12,"msgtql","","",41,null],[12,"msgseg","","",41,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",42,null],[12,"e_exit","","",42,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",43,null],[12,"tv_usec","","",43,null],[3,"utmpx","","",null,null],[12,"ut_type","","",44,null],[12,"ut_pid","","",44,null],[12,"ut_line","","",44,null],[12,"ut_id","","",44,null],[12,"ut_user","","",44,null],[12,"ut_host","","",44,null],[12,"ut_exit","","",44,null],[12,"ut_session","","",44,null],[12,"ut_tv","","",44,null],[12,"ut_addr_v6","","",44,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",45,null],[12,"sa_mask","","",45,null],[12,"sa_flags","","",45,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",46,null],[12,"ss_flags","","",46,null],[12,"ss_size","","",46,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",47,null],[12,"si_errno","","",47,null],[12,"si_code","","",47,null],[12,"_pad","","",47,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",48,null],[12,"gl_pathv","","",48,null],[12,"gl_offs","","",48,null],[12,"gl_flags","","",48,null],[3,"ucred","","",null,null],[12,"pid","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[3,"statfs","","",null,null],[12,"f_type","","",50,null],[12,"f_bsize","","",50,null],[12,"f_blocks","","",50,null],[12,"f_bfree","","",50,null],[12,"f_bavail","","",50,null],[12,"f_files","","",50,null],[12,"f_ffree","","",50,null],[12,"f_fsid","","",50,null],[12,"f_namelen","","",50,null],[12,"f_frsize","","",50,null],[3,"msghdr","","",null,null],[12,"msg_name","","",51,null],[12,"msg_namelen","","",51,null],[12,"msg_iov","","",51,null],[12,"msg_iovlen","","",51,null],[12,"msg_control","","",51,null],[12,"msg_controllen","","",51,null],[12,"msg_flags","","",51,null],[3,"termios","","",null,null],[12,"c_iflag","","",52,null],[12,"c_oflag","","",52,null],[12,"c_cflag","","",52,null],[12,"c_lflag","","",52,null],[12,"c_line","","",52,null],[12,"c_cc","","",52,null],[12,"c_ispeed","","",52,null],[12,"c_ospeed","","",52,null],[3,"flock","","",null,null],[12,"l_type","","",53,null],[12,"l_whence","","",53,null],[12,"l_start","","",53,null],[12,"l_len","","",53,null],[12,"l_pid","","",53,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",54,null],[12,"loads","","",54,null],[12,"totalram","","",54,null],[12,"freeram","","",54,null],[12,"sharedram","","",54,null],[12,"bufferram","","",54,null],[12,"totalswap","","",54,null],[12,"freeswap","","",54,null],[12,"procs","","",54,null],[12,"pad","","",54,null],[12,"totalhigh","","",54,null],[12,"freehigh","","",54,null],[12,"mem_unit","","",54,null],[12,"_f","","",54,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",55,null],[12,"msg_stime","","",55,null],[12,"msg_rtime","","",55,null],[12,"msg_ctime","","",55,null],[12,"msg_qnum","","",55,null],[12,"msg_qbytes","","",55,null],[12,"msg_lspid","","",55,null],[12,"msg_lrpid","","",55,null],[3,"stat","","",null,null],[12,"st_dev","","",56,null],[12,"st_ino","","",56,null],[12,"st_nlink","","",56,null],[12,"st_mode","","",56,null],[12,"st_uid","","",56,null],[12,"st_gid","","",56,null],[12,"st_rdev","","",56,null],[12,"st_size","","",56,null],[12,"st_blksize","","",56,null],[12,"st_blocks","","",56,null],[12,"st_atime","","",56,null],[12,"st_atime_nsec","","",56,null],[12,"st_mtime","","",56,null],[12,"st_mtime_nsec","","",56,null],[12,"st_ctime","","",56,null],[12,"st_ctime_nsec","","",56,null],[3,"stat64","","",null,null],[12,"st_dev","","",57,null],[12,"st_ino","","",57,null],[12,"st_nlink","","",57,null],[12,"st_mode","","",57,null],[12,"st_uid","","",57,null],[12,"st_gid","","",57,null],[12,"st_rdev","","",57,null],[12,"st_size","","",57,null],[12,"st_blksize","","",57,null],[12,"st_blocks","","",57,null],[12,"st_atime","","",57,null],[12,"st_atime_nsec","","",57,null],[12,"st_mtime","","",57,null],[12,"st_mtime_nsec","","",57,null],[12,"st_ctime","","",57,null],[12,"st_ctime_nsec","","",57,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",58,null],[12,"exponent","","",58,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",59,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",60,null],[12,"swd","","",60,null],[12,"ftw","","",60,null],[12,"fop","","",60,null],[12,"rip","","",60,null],[12,"rdp","","",60,null],[12,"mxcsr","","",60,null],[12,"mxcr_mask","","",60,null],[12,"_st","","",60,null],[12,"_xmm","","",60,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",61,null],[12,"fpregs","","",61,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",62,null],[12,"uc_link","","",62,null],[12,"uc_stack","","",62,null],[12,"uc_mcontext","","",62,null],[12,"uc_sigmask","","",62,null],[3,"ipc_perm","","",null,null],[12,"__key","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"__seq","","",63,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",64,null],[12,"shm_segsz","","",64,null],[12,"shm_atime","","",64,null],[12,"shm_dtime","","",64,null],[12,"shm_ctime","","",64,null],[12,"shm_cpid","","",64,null],[12,"shm_lpid","","",64,null],[12,"shm_nattch","","",64,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",65,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",66,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",67,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",73,null],[11,"clone","","",39,null],[11,"clone","","",74,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",75,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["matrixmultiply"] = {"doc":"","items":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,null],[5,"dgemm","","General matrix multiplication (f64)",null,null]],"paths":[]};
searchIndex["order_stat"] = {"doc":"Calculate order statistics.","items":[[5,"kth","order_stat","Compute the `k`th order statistic (`k`th smallest element) of\n`array` via the Floyd-Rivest Algorithm[1].",null,null],[5,"kth_by","","Compute the element that is the `k`th order statistic in the\nordering defined by `cmp` (that is, the `k`th element of `array.sort_by(cmp)`).",null,null],[5,"median_of_medians","","Calculate an approximate median of `array`.",null,null],[5,"median_of_medians_by","","Calculate an approximate median of `array`, using the ordering\ndefined by `cmp`.",null,null]],"paths":[]};
searchIndex["either"] = {"doc":"The enum [**Either**](enum.Either.html).","items":[[4,"Either","either","`Either` represents an alternative holding one value out of\neither of the two possible values.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,null],[11,"is_right","","Return true if the value is the `Right` variant.",0,null],[11,"left","","Convert the left side of `Either&lt;L, R&gt;` to an `Option&lt;L&gt;`.",0,null],[11,"right","","Convert the right side of `Either&lt;L, R&gt;` to an `Option&lt;R&gt;`.",0,null],[11,"as_ref","","Convert `&amp;Either&lt;L, R&gt;` to `Either&lt;&amp;L, &amp;R&gt;`.",0,null],[11,"as_mut","","Convert `&amp;mut Either&lt;L, R&gt;` to `Either&lt;&amp;mut L, &amp;mut R&gt;`.",0,null],[11,"flip","","Convert `Either&lt;L, R&gt;` to `Either&lt;R, L&gt;`.",0,null],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present.",0,null],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present.",0,null],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is\n`Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\nfunction `g` is applied.",0,null],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"fold","","",0,null],[11,"next_back","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"fmt","","",0,null],[14,"try_left!","","Macro for unwrapping the left side of an `Either`, which fails early\nwith the opposite side. Can only be used in functions that return\n`Either` because of the early return of `Right` that it provides.",null,null],[14,"try_right!","","Dual to `try_left!`, see its documentation for more information.",null,null]],"paths":[[4,"Either"]]};
initSearch(searchIndex);
